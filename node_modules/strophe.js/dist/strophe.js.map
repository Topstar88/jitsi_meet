{"version":3,"sources":["webpack://strophe/webpack/universalModuleDefinition","webpack://strophe/webpack/bootstrap","webpack://strophe/(webpack)/buildin/global.js","webpack://strophe/./src/bosh.js","webpack://strophe/./src/core.js","webpack://strophe/./src/md5.js","webpack://strophe/./src/sha1.js","webpack://strophe/./src/strophe.js","webpack://strophe/./src/utils.js","webpack://strophe/./src/websocket.js"],"names":["Strophe","$build","Request","elem","func","rid","sends","id","_requestId","xmlData","data","serialize","origFunc","date","NaN","abort","dead","age","now","Date","timeDead","xhr","_newXHR","prototype","getResponse","node","responseXML","documentElement","tagName","error","responseText","Error","debug","DOMParser","parseFromString","querySelector","textContent","name","ErrorCondition","BAD_FORMAT","window","XMLHttpRequest","overrideMimeType","ActiveXObject","onreadystatechange","bind","Bosh","connection","_conn","Math","floor","random","sid","hold","wait","errors","inactivity","lastResponseHeaders","_requests","strip","_buildBody","bodyWrap","NS","HTTPBIND","attrs","options","keepalive","_sessionCachingSupported","_cacheSession","_reset","sessionStorage","removeItem","nextValidRid","_connect","route","body","domain","BOSH","_connect_cb","push","tree","_onRequestStateChange","getAttribute","_throttledRequestHandler","_attach","jid","callback","wind","connect_callback","getDomainFromJid","authenticated","connected","_changeConnectStatus","Status","ATTACHED","_restore","session","JSON","parse","getItem","getBareJidFromJid","getNodeFromJid","restored","setItem","stringify","typ","cond","conflict","getElementsByTagName","length","CONNFAIL","_doDisconnect","parseInt","_disconnect","pres","_sendTerminate","_emptyQueue","_callProtocolErrorHandlers","req","reqStatus","_getRequestStatus","err_callback","protocolErrorHandlers","HTTP","call","_hitError","warn","_onDisconnectTimeout","_no_auth_received","_abortAllRequests","pop","_onIdle","_data","disconnecting","paused","i","cnode","up","_dataRecv","time_elapsed","SECONDARY_TIMEOUT","TIMEOUT","def","readyState","status","e","getAllResponseHeaders","valid_request","too_many_retries","maxRetries","_removeRequest","reqIs0","reqIs1","_restartRequest","Number","DISCONNECTING","_processRequest","primary_timeout","isNaN","secondary_timeout","server_error","content_type","contentType","open","service","sync","setRequestHeader","withCredentials","e2","toString","disconnect","sendFunc","customHeaders","headers","header","Object","hasOwnProperty","send","backoff","min","pow","setTimeout","xmlOutput","Connection","nodeName","childNodes","rawOutput","splice","_reqToData","message","type","_send","clearTimeout","_idleTimeout","_sendRestart","abs","Builder","$msg","$iq","$pres","VERSION","CLIENT","AUTH","ROSTER","PROFILE","DISCO_INFO","DISCO_ITEMS","MUC","SASL","STREAM","FRAMING","BIND","SESSION","STANZAS","XHTML_IM","XHTML","tags","attributes","css","validTag","tag","validAttribute","attribute","validCSS","style","ERROR","CONNECTING","AUTHENTICATING","AUTHFAIL","CONNECTED","DISCONNECTED","REDIRECT","CONNTIMEOUT","CONFLICT","MISSING_JID_NODE","NO_AUTH_MECH","UNKNOWN_REASON","LogLevel","DEBUG","INFO","WARN","FATAL","ElementType","NORMAL","TEXT","CDATA","FRAGMENT","addNamespace","value","forEachChild","elemName","childNode","nodeType","isTagEqual","el","_xmlGenerator","_makeGenerator","doc","document","implementation","createDocument","undefined","documentMode","_getIEXmlDom","appendChild","createElement","xmlGenerator","docStrings","d","xmlElement","a","arguments","arg","xmlTextNode","sort","attr","setAttribute","k","xmlescape","text","replace","xmlunescape","createTextNode","xmlHtmlNode","html","parser","async","loadXML","getText","str","nodeValue","copyElement","createHtml","toLowerCase","cssText","cssAttrs","split","j","cssName","cssValue","join","createDocumentFragment","escapeNode","unescapeNode","indexOf","bare","parts","getResourceFromJid","s","_handleError","stack","fatal","sourceURL","handler","line","fileName","lineNumber","log","level","msg","console","info","names","Array","keys","map","result","reduce","n","getNamedItem","child","_connectionPlugins","addConnectionPlugin","ptype","xmlns","nodeTree","parentNode","root","moreattrs","removeAttribute","c","impNode","xmlGen","importNode","newElem","t","h","fragment","innerHTML","xhtml","Handler","ns","from","matchBare","matchBareFromJid","user","getNamespace","elNamespace","ignoreNamespaceFragment","namespaceMatch","nsMatch","isMatch","elem_type","isArray","run","TimedHandler","period","lastCalled","getTime","reset","proto","protocol","_proto","Websocket","features","_sasl_data","do_session","do_bind","timedHandlers","handlers","removeTimeds","removeHandlers","addTimeds","addHandlers","_disconnectTimeout","do_authentication","_uniqueId","_sasl_success_handler","_sasl_failure_handler","_sasl_challenge_handler","utils","addCookies","cookies","registerSASLMechanisms","mechanisms","F","init","pause","resume","getUniqueId","suffix","uuid","r","v","addProtocolErrorHandler","status_code","connect","pass","authcid","authzid","servtype","attach","restore","xmlInput","rawInput","_queueData","flush","sendPresence","errback","timeout","timeoutHandler","addHandler","stanza","deleteTimedHandler","addTimedHandler","deleteHandler","sendIQ","iqtype","element","thand","handRef","hand","SASLAnonymous","SASLExternal","SASLMD5","SASLOAuthBearer","SASLXOAuth2","SASLPlain","SASLSHA1","forEach","registerSASLMechanism","mechanism","reason","_addSysTimedHandler","condition","plugin","statusChanged","err","raw","UNKOWN_REASON","newList","_callback","conncheck","hasFeatures","getElementsByTagNameNS","matched","mech","authenticate","sortMechanismsByPriority","higher","priority","swap","_attemptSASLAuth","mechanism_found","test","_addSysHandler","_sasl_success_cb","_sasl_failure_cb","_sasl_challenge_cb","_sasl_mechanism","onStart","request_auth_exchange","isClientFirst","response","onChallenge","btoa","_attemptLegacyAuth","_auth1_cb","challenge","atob","iq","_auth2_cb","serverSignature","success","attribMatch","matches","match","onSuccess","streamfeature_handlers","wrapper","_sasl_auth1_cb","_sasl_bind_cb","resource","jidNode","_sasl_session_cb","onFailure","since","SASLMechanism","_connection","auth_str","utf16to8","test_cnonce","cnonce","hexdigest","nonce","salt","iter","Hi","U","U_old","authMessage","substr","core_hmac_sha1","binb2str","clientKey","serverKey","str_hmac_sha1","clientSignature","str_sha1","b64_hmac_sha1","_quote","realm","host","qop","digest_uri","cred","A1","hash","A2","b64_sha1","safe_add","x","y","lsw","msw","bit_rol","num","cnt","str2binl","bin","charCodeAt","binl2str","String","fromCharCode","binl2hex","binarray","hex_tab","charAt","md5_cmn","q","b","md5_ff","md5_gg","md5_hh","md5_ii","core_md5","len","olda","oldb","oldc","oldd","MD5","core_sha1","w","olde","rol","sha1_ft","sha1_kt","key","bkey","str2binb","ipad","opad","concat","mask","binb2b64","tab","triplet","SHA1","global","out","cookieName","expires","path","cookieObj","isObj","cookieValue","escape","unescape","cookie","new_service","location","pathname","_buildStream","_check_streamerror","connectstatus","errorString","_closeSocket","socket","WebSocket","onopen","_onOpen","onerror","_onError","onclose","_onClose","onmessage","_connect_cb_wrapper","_handleStreamStart","ver","streamStart","parsedMessage","see_uri","isSecureRedirect","string","_streamWrap","_onMessage","CLOSED","close","closeString","code","rawStanza","search","firstChild","start","startString"],"mappings":"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","file":"strophe.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"strophe\"] = factory();\n\telse\n\t\troot[\"strophe\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/strophe.js\");\n","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\r\n} catch (e) {\r\n\t// This works if the window reference is available\r\n\tif (typeof window === \"object\") g = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n","/*\n    This program is distributed under the terms of the MIT license.\n    Please see the LICENSE file for details.\n\n    Copyright 2006-2008, OGG, LLC\n*/\n\n/* global window, setTimeout, clearTimeout, XMLHttpRequest, ActiveXObject */\n\nimport core from 'core';\n\nconst Strophe = core.Strophe;\nconst $build = core.$build;\n\n\n/** PrivateClass: Strophe.Request\n *  _Private_ helper class that provides a cross implementation abstraction\n *  for a BOSH related XMLHttpRequest.\n *\n *  The Strophe.Request class is used internally to encapsulate BOSH request\n *  information.  It is not meant to be used from user's code.\n */\n\n/** PrivateConstructor: Strophe.Request\n *  Create and initialize a new Strophe.Request object.\n *\n *  Parameters:\n *    (XMLElement) elem - The XML data to be sent in the request.\n *    (Function) func - The function that will be called when the\n *      XMLHttpRequest readyState changes.\n *    (Integer) rid - The BOSH rid attribute associated with this request.\n *    (Integer) sends - The number of times this same request has been sent.\n */\nStrophe.Request = function (elem, func, rid, sends) {\n    this.id = ++Strophe._requestId;\n    this.xmlData = elem;\n    this.data = Strophe.serialize(elem);\n    // save original function in case we need to make a new request\n    // from this one.\n    this.origFunc = func;\n    this.func = func;\n    this.rid = rid;\n    this.date = NaN;\n    this.sends = sends || 0;\n    this.abort = false;\n    this.dead = null;\n\n    this.age = function () {\n        if (!this.date) { return 0; }\n        const now = new Date();\n        return (now - this.date) / 1000;\n    };\n    this.timeDead = function () {\n        if (!this.dead) { return 0; }\n        const now = new Date();\n        return (now - this.dead) / 1000;\n    };\n    this.xhr = this._newXHR();\n};\n\nStrophe.Request.prototype = {\n    /** PrivateFunction: getResponse\n     *  Get a response from the underlying XMLHttpRequest.\n     *\n     *  This function attempts to get a response from the request and checks\n     *  for errors.\n     *\n     *  Throws:\n     *    \"parsererror\" - A parser error occured.\n     *    \"bad-format\" - The entity has sent XML that cannot be processed.\n     *\n     *  Returns:\n     *    The DOM element tree of the response.\n     */\n    getResponse: function () {\n        let node = null;\n        if (this.xhr.responseXML && this.xhr.responseXML.documentElement) {\n            node = this.xhr.responseXML.documentElement;\n            if (node.tagName === \"parsererror\") {\n                Strophe.error(\"invalid response received\");\n                Strophe.error(\"responseText: \" + this.xhr.responseText);\n                Strophe.error(\"responseXML: \" +\n                              Strophe.serialize(this.xhr.responseXML));\n                throw new Error(\"parsererror\");\n            }\n        } else if (this.xhr.responseText) {\n            // In React Native, we may get responseText but no responseXML.  We can try to parse it manually.\n            Strophe.debug(\"Got responseText but no responseXML; attempting to parse it with DOMParser...\");\n            node = new DOMParser().parseFromString(this.xhr.responseText, 'application/xml').documentElement;\n            if (!node) {\n                throw new Error('Parsing produced null node');\n            } else if (node.querySelector('parsererror')) {\n                Strophe.error(\"invalid response received: \" + node.querySelector('parsererror').textContent);\n                Strophe.error(\"responseText: \" + this.xhr.responseText);\n                const error = new Error();\n                error.name = Strophe.ErrorCondition.BAD_FORMAT;\n                throw error;\n            }\n        }\n        return node;\n    },\n\n    /** PrivateFunction: _newXHR\n     *  _Private_ helper function to create XMLHttpRequests.\n     *\n     *  This function creates XMLHttpRequests across all implementations.\n     *\n     *  Returns:\n     *    A new XMLHttpRequest.\n     */\n    _newXHR: function () {\n        let xhr = null;\n        if (window.XMLHttpRequest) {\n            xhr = new XMLHttpRequest();\n            if (xhr.overrideMimeType) {\n                xhr.overrideMimeType(\"text/xml; charset=utf-8\");\n            }\n        } else if (window.ActiveXObject) {\n            xhr = new ActiveXObject(\"Microsoft.XMLHTTP\");\n        }\n        // use Function.bind() to prepend ourselves as an argument\n        xhr.onreadystatechange = this.func.bind(null, this);\n        return xhr;\n    }\n};\n\n/** Class: Strophe.Bosh\n *  _Private_ helper class that handles BOSH Connections\n *\n *  The Strophe.Bosh class is used internally by Strophe.Connection\n *  to encapsulate BOSH sessions. It is not meant to be used from user's code.\n */\n\n/** File: bosh.js\n *  A JavaScript library to enable BOSH in Strophejs.\n *\n *  this library uses Bidirectional-streams Over Synchronous HTTP (BOSH)\n *  to emulate a persistent, stateful, two-way connection to an XMPP server.\n *  More information on BOSH can be found in XEP 124.\n */\n\n/** PrivateConstructor: Strophe.Bosh\n *  Create and initialize a Strophe.Bosh object.\n *\n *  Parameters:\n *    (Strophe.Connection) connection - The Strophe.Connection that will use BOSH.\n *\n *  Returns:\n *    A new Strophe.Bosh object.\n */\nStrophe.Bosh = function(connection) {\n    this._conn = connection;\n    /* request id for body tags */\n    this.rid = Math.floor(Math.random() * 4294967295);\n    /* The current session ID. */\n    this.sid = null;\n\n    // default BOSH values\n    this.hold = 1;\n    this.wait = 60;\n    this.window = 5;\n    this.errors = 0;\n    this.inactivity = null;\n\n    this.lastResponseHeaders = null;\n    this._requests = [];\n};\n\nStrophe.Bosh.prototype = {\n    /** Variable: strip\n     *\n     *  BOSH-Connections will have all stanzas wrapped in a <body> tag when\n     *  passed to <Strophe.Connection.xmlInput> or <Strophe.Connection.xmlOutput>.\n     *  To strip this tag, User code can set <Strophe.Bosh.strip> to \"body\":\n     *\n     *  > Strophe.Bosh.prototype.strip = \"body\";\n     *\n     *  This will enable stripping of the body tag in both\n     *  <Strophe.Connection.xmlInput> and <Strophe.Connection.xmlOutput>.\n     */\n    strip: null,\n\n    /** PrivateFunction: _buildBody\n     *  _Private_ helper function to generate the <body/> wrapper for BOSH.\n     *\n     *  Returns:\n     *    A Strophe.Builder with a <body/> element.\n     */\n    _buildBody: function () {\n        const bodyWrap = $build('body', {\n            'rid': this.rid++,\n            'xmlns': Strophe.NS.HTTPBIND\n        });\n        if (this.sid !== null) {\n            bodyWrap.attrs({'sid': this.sid});\n        }\n        if (this._conn.options.keepalive && this._conn._sessionCachingSupported()) {\n            this._cacheSession();\n        }\n        return bodyWrap;\n    },\n\n    /** PrivateFunction: _reset\n     *  Reset the connection.\n     *\n     *  This function is called by the reset function of the Strophe Connection\n     */\n    _reset: function () {\n        this.rid = Math.floor(Math.random() * 4294967295);\n        this.sid = null;\n        this.errors = 0;\n        if (this._conn._sessionCachingSupported()) {\n            window.sessionStorage.removeItem('strophe-bosh-session');\n        }\n\n        this._conn.nextValidRid(this.rid);\n    },\n\n    /** PrivateFunction: _connect\n     *  _Private_ function that initializes the BOSH connection.\n     *\n     *  Creates and sends the Request that initializes the BOSH connection.\n     */\n    _connect: function (wait, hold, route) {\n        this.wait = wait || this.wait;\n        this.hold = hold || this.hold;\n        this.errors = 0;\n\n        const body = this._buildBody().attrs({\n            \"to\": this._conn.domain,\n            \"xml:lang\": \"en\",\n            \"wait\": this.wait,\n            \"hold\": this.hold,\n            \"content\": \"text/xml; charset=utf-8\",\n            \"ver\": \"1.6\",\n            \"xmpp:version\": \"1.0\",\n            \"xmlns:xmpp\": Strophe.NS.BOSH\n        });\n        if (route){\n            body.attrs({'route': route});\n        }\n\n        const _connect_cb = this._conn._connect_cb;\n        this._requests.push(\n            new Strophe.Request(\n                body.tree(),\n                this._onRequestStateChange.bind(this, _connect_cb.bind(this._conn)),\n                body.tree().getAttribute(\"rid\")\n            )\n        );\n        this._throttledRequestHandler();\n    },\n\n    /** PrivateFunction: _attach\n     *  Attach to an already created and authenticated BOSH session.\n     *\n     *  This function is provided to allow Strophe to attach to BOSH\n     *  sessions which have been created externally, perhaps by a Web\n     *  application.  This is often used to support auto-login type features\n     *  without putting user credentials into the page.\n     *\n     *  Parameters:\n     *    (String) jid - The full JID that is bound by the session.\n     *    (String) sid - The SID of the BOSH session.\n     *    (String) rid - The current RID of the BOSH session.  This RID\n     *      will be used by the next request.\n     *    (Function) callback The connect callback function.\n     *    (Integer) wait - The optional HTTPBIND wait value.  This is the\n     *      time the server will wait before returning an empty result for\n     *      a request.  The default setting of 60 seconds is recommended.\n     *      Other settings will require tweaks to the Strophe.TIMEOUT value.\n     *    (Integer) hold - The optional HTTPBIND hold value.  This is the\n     *      number of connections the server will hold at one time.  This\n     *      should almost always be set to 1 (the default).\n     *    (Integer) wind - The optional HTTBIND window value.  This is the\n     *      allowed range of request ids that are valid.  The default is 5.\n     */\n    _attach: function (jid, sid, rid, callback, wait, hold, wind) {\n        this._conn.jid = jid;\n        this.sid = sid;\n        this.rid = rid;\n\n        this._conn.connect_callback = callback;\n        this._conn.domain = Strophe.getDomainFromJid(this._conn.jid);\n        this._conn.authenticated = true;\n        this._conn.connected = true;\n\n        this.wait = wait || this.wait;\n        this.hold = hold || this.hold;\n        this.window = wind || this.window;\n\n        this._conn._changeConnectStatus(Strophe.Status.ATTACHED, null);\n    },\n\n    /** PrivateFunction: _restore\n     *  Attempt to restore a cached BOSH session\n     *\n     *  Parameters:\n     *    (String) jid - The full JID that is bound by the session.\n     *      This parameter is optional but recommended, specifically in cases\n     *      where prebinded BOSH sessions are used where it's important to know\n     *      that the right session is being restored.\n     *    (Function) callback The connect callback function.\n     *    (Integer) wait - The optional HTTPBIND wait value.  This is the\n     *      time the server will wait before returning an empty result for\n     *      a request.  The default setting of 60 seconds is recommended.\n     *      Other settings will require tweaks to the Strophe.TIMEOUT value.\n     *    (Integer) hold - The optional HTTPBIND hold value.  This is the\n     *      number of connections the server will hold at one time.  This\n     *      should almost always be set to 1 (the default).\n     *    (Integer) wind - The optional HTTBIND window value.  This is the\n     *      allowed range of request ids that are valid.  The default is 5.\n     */\n    _restore: function (jid, callback, wait, hold, wind) {\n        const session = JSON.parse(window.sessionStorage.getItem('strophe-bosh-session'));\n        if (typeof session !== \"undefined\" &&\n                   session !== null &&\n                   session.rid &&\n                   session.sid &&\n                   session.jid &&\n                   (    typeof jid === \"undefined\" ||\n                        jid === null ||\n                        Strophe.getBareJidFromJid(session.jid) === Strophe.getBareJidFromJid(jid) ||\n                        // If authcid is null, then it's an anonymous login, so\n                        // we compare only the domains:\n                        ((Strophe.getNodeFromJid(jid) === null) && (Strophe.getDomainFromJid(session.jid) === jid))\n                    )\n        ) {\n            this._conn.restored = true;\n            this._attach(session.jid, session.sid, session.rid, callback, wait, hold, wind);\n        } else {\n            const error = new Error(\"_restore: no restoreable session.\");\n            error.name = \"StropheSessionError\";\n            throw error;\n        }\n    },\n\n    /** PrivateFunction: _cacheSession\n     *  _Private_ handler for the beforeunload event.\n     *\n     *  This handler is used to process the Bosh-part of the initial request.\n     *  Parameters:\n     *    (Strophe.Request) bodyWrap - The received stanza.\n     */\n    _cacheSession: function () {\n        if (this._conn.authenticated) {\n            if (this._conn.jid && this.rid && this.sid) {\n                window.sessionStorage.setItem('strophe-bosh-session', JSON.stringify({\n                    'jid': this._conn.jid,\n                    'rid': this.rid,\n                    'sid': this.sid\n                }));\n            }\n        } else {\n            window.sessionStorage.removeItem('strophe-bosh-session');\n        }\n    },\n\n    /** PrivateFunction: _connect_cb\n     *  _Private_ handler for initial connection request.\n     *\n     *  This handler is used to process the Bosh-part of the initial request.\n     *  Parameters:\n     *    (Strophe.Request) bodyWrap - The received stanza.\n     */\n    _connect_cb: function (bodyWrap) {\n        const typ = bodyWrap.getAttribute(\"type\");\n        if (typ !== null && typ === \"terminate\") {\n            // an error occurred\n            let cond = bodyWrap.getAttribute(\"condition\");\n            Strophe.error(\"BOSH-Connection failed: \" + cond);\n            const conflict = bodyWrap.getElementsByTagName(\"conflict\");\n            if (cond !== null) {\n                if (cond === \"remote-stream-error\" && conflict.length > 0) {\n                    cond = \"conflict\";\n                }\n                this._conn._changeConnectStatus(Strophe.Status.CONNFAIL, cond);\n            } else {\n                this._conn._changeConnectStatus(Strophe.Status.CONNFAIL, \"unknown\");\n            }\n            this._conn._doDisconnect(cond);\n            return Strophe.Status.CONNFAIL;\n        }\n\n        // check to make sure we don't overwrite these if _connect_cb is\n        // called multiple times in the case of missing stream:features\n        if (!this.sid) {\n            this.sid = bodyWrap.getAttribute(\"sid\");\n        }\n        const wind = bodyWrap.getAttribute('requests');\n        if (wind) { this.window = parseInt(wind, 10); }\n        const hold = bodyWrap.getAttribute('hold');\n        if (hold) { this.hold = parseInt(hold, 10); }\n        const wait = bodyWrap.getAttribute('wait');\n        if (wait) { this.wait = parseInt(wait, 10); }\n        const inactivity = bodyWrap.getAttribute('inactivity');\n        if (inactivity) { this.inactivity = parseInt(inactivity, 10); }\n    },\n\n    /** PrivateFunction: _disconnect\n     *  _Private_ part of Connection.disconnect for Bosh\n     *\n     *  Parameters:\n     *    (Request) pres - This stanza will be sent before disconnecting.\n     */\n    _disconnect: function (pres) {\n        this._sendTerminate(pres);\n    },\n\n    /** PrivateFunction: _doDisconnect\n     *  _Private_ function to disconnect.\n     *\n     *  Resets the SID and RID.\n     */\n    _doDisconnect: function () {\n        this.sid = null;\n        this.rid = Math.floor(Math.random() * 4294967295);\n        if (this._conn._sessionCachingSupported()) {\n            window.sessionStorage.removeItem('strophe-bosh-session');\n        }\n\n        this._conn.nextValidRid(this.rid);\n    },\n\n    /** PrivateFunction: _emptyQueue\n     * _Private_ function to check if the Request queue is empty.\n     *\n     *  Returns:\n     *    True, if there are no Requests queued, False otherwise.\n     */\n    _emptyQueue: function () {\n        return this._requests.length === 0;\n    },\n\n    /** PrivateFunction: _callProtocolErrorHandlers\n     *  _Private_ function to call error handlers registered for HTTP errors.\n     *\n     *  Parameters:\n     *    (Strophe.Request) req - The request that is changing readyState.\n     */\n    _callProtocolErrorHandlers: function (req) {\n        const reqStatus = this._getRequestStatus(req);\n        const err_callback = this._conn.protocolErrorHandlers.HTTP[reqStatus];\n        if (err_callback) {\n            err_callback.call(this, reqStatus);\n        }\n    },\n\n    /** PrivateFunction: _hitError\n     *  _Private_ function to handle the error count.\n     *\n     *  Requests are resent automatically until their error count reaches\n     *  5.  Each time an error is encountered, this function is called to\n     *  increment the count and disconnect if the count is too high.\n     *\n     *  Parameters:\n     *    (Integer) reqStatus - The request status.\n     */\n    _hitError: function (reqStatus) {\n        this.errors++;\n        Strophe.warn(\"request errored, status: \" + reqStatus +\n                     \", number of errors: \" + this.errors);\n        if (this.errors > 4) {\n            this._conn._onDisconnectTimeout();\n        }\n    },\n\n    /** PrivateFunction: _no_auth_received\n     *\n     * Called on stream start/restart when no stream:features\n     * has been received and sends a blank poll request.\n     */\n    _no_auth_received: function (callback) {\n        Strophe.warn(\"Server did not yet offer a supported authentication \"+\n                     \"mechanism. Sending a blank poll request.\");\n        if (callback) {\n            callback = callback.bind(this._conn);\n        } else {\n            callback = this._conn._connect_cb.bind(this._conn);\n        }\n        const body = this._buildBody();\n        this._requests.push(\n            new Strophe.Request(\n                body.tree(),\n                this._onRequestStateChange.bind(this, callback),\n                body.tree().getAttribute(\"rid\")\n            )\n        );\n        this._throttledRequestHandler();\n    },\n\n    /** PrivateFunction: _onDisconnectTimeout\n     *  _Private_ timeout handler for handling non-graceful disconnection.\n     *\n     *  Cancels all remaining Requests and clears the queue.\n     */\n    _onDisconnectTimeout: function () {\n        this._abortAllRequests();\n    },\n\n    /** PrivateFunction: _abortAllRequests\n     *  _Private_ helper function that makes sure all pending requests are aborted.\n     */\n    _abortAllRequests: function _abortAllRequests() {\n        while (this._requests.length > 0) {\n            const req = this._requests.pop();\n            req.abort = true;\n            req.xhr.abort();\n            // jslint complains, but this is fine. setting to empty func\n            // is necessary for IE6\n            req.xhr.onreadystatechange = function () {}; // jshint ignore:line\n        }\n    },\n\n    /** PrivateFunction: _onIdle\n     *  _Private_ handler called by Strophe.Connection._onIdle\n     *\n     *  Sends all queued Requests or polls with empty Request if there are none.\n     */\n    _onIdle: function () {\n        const data = this._conn._data;\n        // if no requests are in progress, poll\n        if (this._conn.authenticated && this._requests.length === 0 &&\n            data.length === 0 && !this._conn.disconnecting) {\n            Strophe.debug(\"no requests during idle cycle, sending blank request\");\n            data.push(null);\n        }\n\n        if (this._conn.paused) {\n            return;\n        }\n\n        if (this._requests.length < 2 && data.length > 0) {\n            const body = this._buildBody();\n            for (let i=0; i<data.length; i++) {\n                if (data[i] !== null) {\n                    if (data[i] === \"restart\") {\n                        body.attrs({\n                            \"to\": this._conn.domain,\n                            \"xml:lang\": \"en\",\n                            \"xmpp:restart\": \"true\",\n                            \"xmlns:xmpp\": Strophe.NS.BOSH\n                        });\n                    } else {\n                        body.cnode(data[i]).up();\n                    }\n                }\n            }\n            delete this._conn._data;\n            this._conn._data = [];\n            this._requests.push(\n                new Strophe.Request(\n                    body.tree(),\n                    this._onRequestStateChange.bind(this, this._conn._dataRecv.bind(this._conn)),\n                    body.tree().getAttribute(\"rid\")\n                )\n            );\n            this._throttledRequestHandler();\n        }\n\n        if (this._requests.length > 0) {\n            const time_elapsed = this._requests[0].age();\n            if (this._requests[0].dead !== null) {\n                if (this._requests[0].timeDead() >\n                    Math.floor(Strophe.SECONDARY_TIMEOUT * this.wait)) {\n                    this._throttledRequestHandler();\n                }\n            }\n            if (time_elapsed > Math.floor(Strophe.TIMEOUT * this.wait)) {\n                Strophe.warn(\"Request \" +\n                             this._requests[0].id +\n                             \" timed out, over \" + Math.floor(Strophe.TIMEOUT * this.wait) +\n                             \" seconds since last activity\");\n                this._throttledRequestHandler();\n            }\n        }\n    },\n\n    /** PrivateFunction: _getRequestStatus\n     *\n     *  Returns the HTTP status code from a Strophe.Request\n     *\n     *  Parameters:\n     *    (Strophe.Request) req - The Strophe.Request instance.\n     *    (Integer) def - The default value that should be returned if no\n     *          status value was found.\n     */\n    _getRequestStatus: function (req, def) {\n        let reqStatus;\n        if (req.xhr.readyState === 4) {\n            try {\n                reqStatus = req.xhr.status;\n            } catch (e) {\n                // ignore errors from undefined status attribute. Works\n                // around a browser bug\n                Strophe.error(\n                    \"Caught an error while retrieving a request's status, \" +\n                    \"reqStatus: \" + reqStatus);\n            }\n        }\n        if (typeof(reqStatus) === \"undefined\") {\n            reqStatus = typeof def === 'number' ? def : 0;\n        }\n        return reqStatus;\n    },\n\n    /** PrivateFunction: _onRequestStateChange\n     *  _Private_ handler for Strophe.Request state changes.\n     *\n     *  This function is called when the XMLHttpRequest readyState changes.\n     *  It contains a lot of error handling logic for the many ways that\n     *  requests can fail, and calls the request callback when requests\n     *  succeed.\n     *\n     *  Parameters:\n     *    (Function) func - The handler for the request.\n     *    (Strophe.Request) req - The request that is changing readyState.\n     */\n    _onRequestStateChange: function (func, req) {\n        Strophe.debug(\"request id \"+req.id+\".\"+req.sends+\n                      \" state changed to \"+req.xhr.readyState);\n        if (req.abort) {\n            req.abort = false;\n            return;\n        }\n        if (req.xhr.readyState !== 4) {\n            // The request is not yet complete\n            return;\n        }\n        const reqStatus = this._getRequestStatus(req);\n        this.lastResponseHeaders = req.xhr.getAllResponseHeaders();\n        if (this.disconnecting && reqStatus >= 400) {\n            this._hitError(reqStatus);\n            this._callProtocolErrorHandlers(req);\n            return;\n        }\n\n        const valid_request = reqStatus > 0 && reqStatus < 500;\n        const too_many_retries = req.sends > this._conn.maxRetries;\n        if (valid_request || too_many_retries) {\n            // remove from internal queue\n            this._removeRequest(req);\n            Strophe.debug(\"request id \"+req.id+\" should now be removed\");\n        }\n\n        if (reqStatus === 200) {\n            // request succeeded\n            const reqIs0 = (this._requests[0] === req);\n            const reqIs1 = (this._requests[1] === req);\n            // if request 1 finished, or request 0 finished and request\n            // 1 is over Strophe.SECONDARY_TIMEOUT seconds old, we need to\n            // restart the other - both will be in the first spot, as the\n            // completed request has been removed from the queue already\n            if (reqIs1 ||\n                (reqIs0 && this._requests.length > 0 &&\n                    this._requests[0].age() > Math.floor(Strophe.SECONDARY_TIMEOUT * this.wait))) {\n                this._restartRequest(0);\n            }\n            this._conn.nextValidRid(Number(req.rid) + 1);\n            Strophe.debug(\"request id \"+req.id+\".\"+req.sends+\" got 200\");\n            func(req); // call handler\n            this.errors = 0;\n        } else if (reqStatus === 0 ||\n                   (reqStatus >= 400 && reqStatus < 600) ||\n                   reqStatus >= 12000) {\n            // request failed\n            Strophe.error(\"request id \"+req.id+\".\"+req.sends+\" error \"+reqStatus+\" happened\");\n            this._hitError(reqStatus);\n            this._callProtocolErrorHandlers(req);\n            if (reqStatus >= 400 && reqStatus < 500) {\n                this._conn._changeConnectStatus(Strophe.Status.DISCONNECTING, null);\n                this._conn._doDisconnect();\n            }\n        } else {\n            Strophe.error(\"request id \"+req.id+\".\"+req.sends+\" error \"+reqStatus+\" happened\");\n        }\n\n        if (!valid_request && !too_many_retries) {\n            this._throttledRequestHandler();\n        } else if (too_many_retries && !this._conn.connected) {\n            this._conn._changeConnectStatus(Strophe.Status.CONNFAIL, \"giving-up\");\n        }\n    },\n\n    /** PrivateFunction: _processRequest\n     *  _Private_ function to process a request in the queue.\n     *\n     *  This function takes requests off the queue and sends them and\n     *  restarts dead requests.\n     *\n     *  Parameters:\n     *    (Integer) i - The index of the request in the queue.\n     */\n    _processRequest: function (i) {\n        let req = this._requests[i];\n        const reqStatus = this._getRequestStatus(req, -1);\n\n        // make sure we limit the number of retries\n        if (req.sends > this._conn.maxRetries) {\n            this._conn._onDisconnectTimeout();\n            return;\n        }\n        const time_elapsed = req.age();\n        const primary_timeout = (!isNaN(time_elapsed) && time_elapsed > Math.floor(Strophe.TIMEOUT * this.wait));\n        const secondary_timeout = (req.dead !== null && req.timeDead() > Math.floor(Strophe.SECONDARY_TIMEOUT * this.wait));\n        const server_error = (req.xhr.readyState === 4 && (reqStatus < 1 || reqStatus >= 500));\n\n        if (primary_timeout || secondary_timeout || server_error) {\n            if (secondary_timeout) {\n                Strophe.error(`Request ${this._requests[i].id} timed out (secondary), restarting`);\n            }\n            req.abort = true;\n            req.xhr.abort();\n            // setting to null fails on IE6, so set to empty function\n            req.xhr.onreadystatechange = function () {};\n            this._requests[i] = new Strophe.Request(req.xmlData, req.origFunc, req.rid, req.sends);\n            req = this._requests[i];\n        }\n\n        if (req.xhr.readyState === 0) {\n            Strophe.debug(\"request id \"+req.id+\".\"+req.sends+\" posting\");\n\n            try {\n                const content_type = this._conn.options.contentType || \"text/xml; charset=utf-8\";\n                req.xhr.open(\"POST\", this._conn.service, this._conn.options.sync ? false : true);\n                if (typeof req.xhr.setRequestHeader !== 'undefined') {\n                    // IE9 doesn't have setRequestHeader\n                    req.xhr.setRequestHeader(\"Content-Type\", content_type);\n                }\n                if (this._conn.options.withCredentials) {\n                    req.xhr.withCredentials = true;\n                }\n            } catch (e2) {\n                Strophe.error(\"XHR open failed: \" + e2.toString());\n                if (!this._conn.connected) {\n                    this._conn._changeConnectStatus(Strophe.Status.CONNFAIL, \"bad-service\");\n                }\n                this._conn.disconnect();\n                return;\n            }\n\n            // Fires the XHR request -- may be invoked immediately\n            // or on a gradually expanding retry window for reconnects\n            const sendFunc = () => {\n                req.date = new Date();\n                if (this._conn.options.customHeaders){\n                    const headers = this._conn.options.customHeaders;\n                    for (const header in headers) {\n                        if (Object.prototype.hasOwnProperty.call(headers, header)) {\n                            req.xhr.setRequestHeader(header, headers[header]);\n                        }\n                    }\n                }\n                req.xhr.send(req.data);\n            };\n\n            // Implement progressive backoff for reconnects --\n            // First retry (send === 1) should also be instantaneous\n            if (req.sends > 1) {\n                // Using a cube of the retry number creates a nicely\n                // expanding retry window\n                const backoff = Math.min(Math.floor(Strophe.TIMEOUT * this.wait),\n                                       Math.pow(req.sends, 3)) * 1000;\n                setTimeout(function() {\n                    // XXX: setTimeout should be called only with function expressions (23974bc1)\n                    sendFunc();\n                }, backoff);\n            } else {\n                sendFunc();\n            }\n\n            req.sends++;\n\n            if (this._conn.xmlOutput !== Strophe.Connection.prototype.xmlOutput) {\n                if (req.xmlData.nodeName === this.strip && req.xmlData.childNodes.length) {\n                    this._conn.xmlOutput(req.xmlData.childNodes[0]);\n                } else {\n                    this._conn.xmlOutput(req.xmlData);\n                }\n            }\n            if (this._conn.rawOutput !== Strophe.Connection.prototype.rawOutput) {\n                this._conn.rawOutput(req.data);\n            }\n        } else {\n            Strophe.debug(\"_processRequest: \" +\n                          (i === 0 ? \"first\" : \"second\") +\n                          \" request has readyState of \" +\n                          req.xhr.readyState);\n        }\n    },\n\n    /** PrivateFunction: _removeRequest\n     *  _Private_ function to remove a request from the queue.\n     *\n     *  Parameters:\n     *    (Strophe.Request) req - The request to remove.\n     */\n    _removeRequest: function (req) {\n        Strophe.debug(\"removing request\");\n        for (let i=this._requests.length - 1; i>=0; i--) {\n            if (req === this._requests[i]) {\n                this._requests.splice(i, 1);\n            }\n        }\n        // IE6 fails on setting to null, so set to empty function\n        req.xhr.onreadystatechange = function () {};\n        this._throttledRequestHandler();\n    },\n\n    /** PrivateFunction: _restartRequest\n     *  _Private_ function to restart a request that is presumed dead.\n     *\n     *  Parameters:\n     *    (Integer) i - The index of the request in the queue.\n     */\n    _restartRequest: function (i) {\n        const req = this._requests[i];\n        if (req.dead === null) {\n            req.dead = new Date();\n        }\n        this._processRequest(i);\n    },\n\n    /** PrivateFunction: _reqToData\n     * _Private_ function to get a stanza out of a request.\n     *\n     * Tries to extract a stanza out of a Request Object.\n     * When this fails the current connection will be disconnected.\n     *\n     *  Parameters:\n     *    (Object) req - The Request.\n     *\n     *  Returns:\n     *    The stanza that was passed.\n     */\n    _reqToData: function (req) {\n        try {\n            return req.getResponse();\n        } catch (e) {\n            if (e.message !== \"parsererror\") { throw e; }\n            this._conn.disconnect(\"strophe-parsererror\");\n        }\n    },\n\n    /** PrivateFunction: _sendTerminate\n     *  _Private_ function to send initial disconnect sequence.\n     *\n     *  This is the first step in a graceful disconnect.  It sends\n     *  the BOSH server a terminate body and includes an unavailable\n     *  presence if authentication has completed.\n     */\n    _sendTerminate: function (pres) {\n        Strophe.debug(\"_sendTerminate was called\");\n        const body = this._buildBody().attrs({type: \"terminate\"});\n        if (pres) {\n            body.cnode(pres.tree());\n        }\n        const req = new Strophe.Request(\n            body.tree(),\n            this._onRequestStateChange.bind(this, this._conn._dataRecv.bind(this._conn)),\n            body.tree().getAttribute(\"rid\")\n        );\n        this._requests.push(req);\n        this._throttledRequestHandler();\n    },\n\n    /** PrivateFunction: _send\n     *  _Private_ part of the Connection.send function for BOSH\n     *\n     * Just triggers the RequestHandler to send the messages that are in the queue\n     */\n    _send: function () {\n        clearTimeout(this._conn._idleTimeout);\n        this._throttledRequestHandler();\n        this._conn._idleTimeout = setTimeout(() => this._conn._onIdle(), 100);\n    },\n\n    /** PrivateFunction: _sendRestart\n     *\n     *  Send an xmpp:restart stanza.\n     */\n    _sendRestart: function () {\n        this._throttledRequestHandler();\n        clearTimeout(this._conn._idleTimeout);\n    },\n\n    /** PrivateFunction: _throttledRequestHandler\n     *  _Private_ function to throttle requests to the connection window.\n     *\n     *  This function makes sure we don't send requests so fast that the\n     *  request ids overflow the connection window in the case that one\n     *  request died.\n     */\n    _throttledRequestHandler: function () {\n        if (!this._requests) {\n            Strophe.debug(\"_throttledRequestHandler called with \" +\n                          \"undefined requests\");\n        } else {\n            Strophe.debug(\"_throttledRequestHandler called with \" +\n                          this._requests.length + \" requests\");\n        }\n\n        if (!this._requests || this._requests.length === 0) {\n            return;\n        }\n\n        if (this._requests.length > 0) {\n            this._processRequest(0);\n        }\n\n        if (this._requests.length > 1 &&\n            Math.abs(this._requests[0].rid -\n                     this._requests[1].rid) < this.window) {\n            this._processRequest(1);\n        }\n    }\n};\n","/*\n    This program is distributed under the terms of the MIT license.\n    Please see the LICENSE file for details.\n\n    Copyright 2006-2018, OGG, LLC\n*/\n/*global define, document, sessionStorage, setTimeout, clearTimeout, ActiveXObject, DOMParser, btoa, atob, module */\n\nimport MD5 from 'md5';\nimport SHA1 from 'sha1';\nimport utils from 'utils';\n\n/** Function: $build\n *  Create a Strophe.Builder.\n *  This is an alias for 'new Strophe.Builder(name, attrs)'.\n *\n *  Parameters:\n *    (String) name - The root element name.\n *    (Object) attrs - The attributes for the root element in object notation.\n *\n *  Returns:\n *    A new Strophe.Builder object.\n */\nfunction $build(name, attrs) {\n    return new Strophe.Builder(name, attrs);\n}\n\n/** Function: $msg\n *  Create a Strophe.Builder with a <message/> element as the root.\n *\n *  Parameters:\n *    (Object) attrs - The <message/> element attributes in object notation.\n *\n *  Returns:\n *    A new Strophe.Builder object.\n */\nfunction $msg(attrs) {\n    return new Strophe.Builder(\"message\", attrs);\n}\n\n/** Function: $iq\n *  Create a Strophe.Builder with an <iq/> element as the root.\n *\n *  Parameters:\n *    (Object) attrs - The <iq/> element attributes in object notation.\n *\n *  Returns:\n *    A new Strophe.Builder object.\n */\nfunction $iq(attrs) {\n    return new Strophe.Builder(\"iq\", attrs);\n}\n\n/** Function: $pres\n *  Create a Strophe.Builder with a <presence/> element as the root.\n *\n *  Parameters:\n *    (Object) attrs - The <presence/> element attributes in object notation.\n *\n *  Returns:\n *    A new Strophe.Builder object.\n */\nfunction $pres(attrs) {\n    return new Strophe.Builder(\"presence\", attrs);\n}\n\n/** Class: Strophe\n *  An object container for all Strophe library functions.\n *\n *  This class is just a container for all the objects and constants\n *  used in the library.  It is not meant to be instantiated, but to\n *  provide a namespace for library objects, constants, and functions.\n */\nconst Strophe = {\n    /** Constant: VERSION */\n    VERSION: \"@VERSION@\",\n\n    /** Constants: XMPP Namespace Constants\n     *  Common namespace constants from the XMPP RFCs and XEPs.\n     *\n     *  NS.HTTPBIND - HTTP BIND namespace from XEP 124.\n     *  NS.BOSH - BOSH namespace from XEP 206.\n     *  NS.CLIENT - Main XMPP client namespace.\n     *  NS.AUTH - Legacy authentication namespace.\n     *  NS.ROSTER - Roster operations namespace.\n     *  NS.PROFILE - Profile namespace.\n     *  NS.DISCO_INFO - Service discovery info namespace from XEP 30.\n     *  NS.DISCO_ITEMS - Service discovery items namespace from XEP 30.\n     *  NS.MUC - Multi-User Chat namespace from XEP 45.\n     *  NS.SASL - XMPP SASL namespace from RFC 3920.\n     *  NS.STREAM - XMPP Streams namespace from RFC 3920.\n     *  NS.BIND - XMPP Binding namespace from RFC 3920.\n     *  NS.SESSION - XMPP Session namespace from RFC 3920.\n     *  NS.XHTML_IM - XHTML-IM namespace from XEP 71.\n     *  NS.XHTML - XHTML body namespace from XEP 71.\n     */\n    NS: {\n        HTTPBIND: \"http://jabber.org/protocol/httpbind\",\n        BOSH: \"urn:xmpp:xbosh\",\n        CLIENT: \"jabber:client\",\n        AUTH: \"jabber:iq:auth\",\n        ROSTER: \"jabber:iq:roster\",\n        PROFILE: \"jabber:iq:profile\",\n        DISCO_INFO: \"http://jabber.org/protocol/disco#info\",\n        DISCO_ITEMS: \"http://jabber.org/protocol/disco#items\",\n        MUC: \"http://jabber.org/protocol/muc\",\n        SASL: \"urn:ietf:params:xml:ns:xmpp-sasl\",\n        STREAM: \"http://etherx.jabber.org/streams\",\n        FRAMING: \"urn:ietf:params:xml:ns:xmpp-framing\",\n        BIND: \"urn:ietf:params:xml:ns:xmpp-bind\",\n        SESSION: \"urn:ietf:params:xml:ns:xmpp-session\",\n        VERSION: \"jabber:iq:version\",\n        STANZAS: \"urn:ietf:params:xml:ns:xmpp-stanzas\",\n        XHTML_IM: \"http://jabber.org/protocol/xhtml-im\",\n        XHTML: \"http://www.w3.org/1999/xhtml\"\n    },\n\n    /** Constants: XHTML_IM Namespace\n     *  contains allowed tags, tag attributes, and css properties.\n     *  Used in the createHtml function to filter incoming html into the allowed XHTML-IM subset.\n     *  See http://xmpp.org/extensions/xep-0071.html#profile-summary for the list of recommended\n     *  allowed tags and their attributes.\n     */\n    XHTML: {\n        tags: ['a','blockquote','br','cite','em','img','li','ol','p','span','strong','ul','body'],\n        attributes: {\n            'a':          ['href'],\n            'blockquote': ['style'],\n            'br':         [],\n            'cite':       ['style'],\n            'em':         [],\n            'img':        ['src', 'alt', 'style', 'height', 'width'],\n            'li':         ['style'],\n            'ol':         ['style'],\n            'p':          ['style'],\n            'span':       ['style'],\n            'strong':     [],\n            'ul':         ['style'],\n            'body':       []\n        },\n        css: ['background-color','color','font-family','font-size','font-style','font-weight','margin-left','margin-right','text-align','text-decoration'],\n        /** Function: XHTML.validTag\n         *\n         * Utility method to determine whether a tag is allowed\n         * in the XHTML_IM namespace.\n         *\n         * XHTML tag names are case sensitive and must be lower case.\n         */\n        validTag: function(tag) {\n            for (let i=0; i<Strophe.XHTML.tags.length; i++) {\n                if (tag === Strophe.XHTML.tags[i]) {\n                    return true;\n                }\n            }\n            return false;\n        },\n        /** Function: XHTML.validAttribute\n         *\n         * Utility method to determine whether an attribute is allowed\n         * as recommended per XEP-0071\n         *\n         * XHTML attribute names are case sensitive and must be lower case.\n         */\n        validAttribute: function(tag, attribute) {\n            if (typeof Strophe.XHTML.attributes[tag] !== 'undefined' && Strophe.XHTML.attributes[tag].length > 0) {\n                for (let i=0; i<Strophe.XHTML.attributes[tag].length; i++) {\n                    if (attribute === Strophe.XHTML.attributes[tag][i]) {\n                        return true;\n                    }\n                }\n            }\n        return false;\n        },\n        validCSS: function(style) {\n            for (let i=0; i<Strophe.XHTML.css.length; i++) {\n                if (style === Strophe.XHTML.css[i]) {\n                    return true;\n                }\n            }\n            return false;\n        }\n    },\n\n    /** Constants: Connection Status Constants\n     *  Connection status constants for use by the connection handler\n     *  callback.\n     *\n     *  Status.ERROR - An error has occurred\n     *  Status.CONNECTING - The connection is currently being made\n     *  Status.CONNFAIL - The connection attempt failed\n     *  Status.AUTHENTICATING - The connection is authenticating\n     *  Status.AUTHFAIL - The authentication attempt failed\n     *  Status.CONNECTED - The connection has succeeded\n     *  Status.DISCONNECTED - The connection has been terminated\n     *  Status.DISCONNECTING - The connection is currently being terminated\n     *  Status.ATTACHED - The connection has been attached\n     *  Status.REDIRECT - The connection has been redirected\n     *  Status.CONNTIMEOUT - The connection has timed out\n     */\n    Status: {\n        ERROR: 0,\n        CONNECTING: 1,\n        CONNFAIL: 2,\n        AUTHENTICATING: 3,\n        AUTHFAIL: 4,\n        CONNECTED: 5,\n        DISCONNECTED: 6,\n        DISCONNECTING: 7,\n        ATTACHED: 8,\n        REDIRECT: 9,\n        CONNTIMEOUT: 10\n    },\n\n    ErrorCondition: {\n        BAD_FORMAT: \"bad-format\",\n        CONFLICT: \"conflict\",\n        MISSING_JID_NODE: \"x-strophe-bad-non-anon-jid\",\n        NO_AUTH_MECH: \"no-auth-mech\",\n        UNKNOWN_REASON: \"unknown\",\n    },\n\n    /** Constants: Log Level Constants\n     *  Logging level indicators.\n     *\n     *  LogLevel.DEBUG - Debug output\n     *  LogLevel.INFO - Informational output\n     *  LogLevel.WARN - Warnings\n     *  LogLevel.ERROR - Errors\n     *  LogLevel.FATAL - Fatal errors\n     */\n    LogLevel: {\n        DEBUG: 0,\n        INFO: 1,\n        WARN: 2,\n        ERROR: 3,\n        FATAL: 4\n    },\n\n    /** PrivateConstants: DOM Element Type Constants\n     *  DOM element types.\n     *\n     *  ElementType.NORMAL - Normal element.\n     *  ElementType.TEXT - Text data element.\n     *  ElementType.FRAGMENT - XHTML fragment element.\n     */\n    ElementType: {\n        NORMAL: 1,\n        TEXT: 3,\n        CDATA: 4,\n        FRAGMENT: 11\n    },\n\n    /** PrivateConstants: Timeout Values\n     *  Timeout values for error states.  These values are in seconds.\n     *  These should not be changed unless you know exactly what you are\n     *  doing.\n     *\n     *  TIMEOUT - Timeout multiplier. A waiting request will be considered\n     *      failed after Math.floor(TIMEOUT * wait) seconds have elapsed.\n     *      This defaults to 1.1, and with default wait, 66 seconds.\n     *  SECONDARY_TIMEOUT - Secondary timeout multiplier. In cases where\n     *      Strophe can detect early failure, it will consider the request\n     *      failed if it doesn't return after\n     *      Math.floor(SECONDARY_TIMEOUT * wait) seconds have elapsed.\n     *      This defaults to 0.1, and with default wait, 6 seconds.\n     */\n    TIMEOUT: 1.1,\n    SECONDARY_TIMEOUT: 0.1,\n\n    /** Function: addNamespace\n     *  This function is used to extend the current namespaces in\n     *  Strophe.NS.  It takes a key and a value with the key being the\n     *  name of the new namespace, with its actual value.\n     *  For example:\n     *  Strophe.addNamespace('PUBSUB', \"http://jabber.org/protocol/pubsub\");\n     *\n     *  Parameters:\n     *    (String) name - The name under which the namespace will be\n     *      referenced under Strophe.NS\n     *    (String) value - The actual namespace.\n     */\n    addNamespace: function (name, value) {\n        Strophe.NS[name] = value;\n    },\n\n    /** Function: forEachChild\n     *  Map a function over some or all child elements of a given element.\n     *\n     *  This is a small convenience function for mapping a function over\n     *  some or all of the children of an element.  If elemName is null, all\n     *  children will be passed to the function, otherwise only children\n     *  whose tag names match elemName will be passed.\n     *\n     *  Parameters:\n     *    (XMLElement) elem - The element to operate on.\n     *    (String) elemName - The child element tag name filter.\n     *    (Function) func - The function to apply to each child.  This\n     *      function should take a single argument, a DOM element.\n     */\n    forEachChild: function (elem, elemName, func) {\n        for (let i=0; i<elem.childNodes.length; i++) {\n            const childNode = elem.childNodes[i];\n            if (childNode.nodeType === Strophe.ElementType.NORMAL &&\n                (!elemName || this.isTagEqual(childNode, elemName))) {\n                func(childNode);\n            }\n        }\n    },\n\n    /** Function: isTagEqual\n     *  Compare an element's tag name with a string.\n     *\n     *  This function is case sensitive.\n     *\n     *  Parameters:\n     *    (XMLElement) el - A DOM element.\n     *    (String) name - The element name.\n     *\n     *  Returns:\n     *    true if the element's tag name matches _el_, and false\n     *    otherwise.\n     */\n    isTagEqual: function (el, name) {\n        return el.tagName === name;\n    },\n\n    /** PrivateVariable: _xmlGenerator\n     *  _Private_ variable that caches a DOM document to\n     *  generate elements.\n     */\n    _xmlGenerator: null,\n\n    /** PrivateFunction: _makeGenerator\n     *  _Private_ function that creates a dummy XML DOM document to serve as\n     *  an element and text node generator.\n     */\n    _makeGenerator: function () {\n        let doc;\n        // IE9 does implement createDocument(); however, using it will cause the browser to leak memory on page unload.\n        // Here, we test for presence of createDocument() plus IE's proprietary documentMode attribute, which would be\n        // less than 10 in the case of IE9 and below.\n        if (document.implementation.createDocument === undefined ||\n                    document.implementation.createDocument && document.documentMode && document.documentMode < 10) {\n            doc = this._getIEXmlDom();\n            doc.appendChild(doc.createElement('strophe'));\n        } else {\n            doc = document.implementation\n                .createDocument('jabber:client', 'strophe', null);\n        }\n        return doc;\n    },\n\n    /** Function: xmlGenerator\n     *  Get the DOM document to generate elements.\n     *\n     *  Returns:\n     *    The currently used DOM document.\n     */\n    xmlGenerator: function () {\n        if (!Strophe._xmlGenerator) {\n            Strophe._xmlGenerator = Strophe._makeGenerator();\n        }\n        return Strophe._xmlGenerator;\n    },\n\n    /** PrivateFunction: _getIEXmlDom\n     *  Gets IE xml doc object\n     *\n     *  Returns:\n     *    A Microsoft XML DOM Object\n     *  See Also:\n     *    http://msdn.microsoft.com/en-us/library/ms757837%28VS.85%29.aspx\n     */\n    _getIEXmlDom : function() {\n        let doc = null;\n        const docStrings = [\n            \"Msxml2.DOMDocument.6.0\",\n            \"Msxml2.DOMDocument.5.0\",\n            \"Msxml2.DOMDocument.4.0\",\n            \"MSXML2.DOMDocument.3.0\",\n            \"MSXML2.DOMDocument\",\n            \"MSXML.DOMDocument\",\n            \"Microsoft.XMLDOM\"\n        ];\n\n        for (let d=0; d<docStrings.length; d++) {\n            if (doc === null) {\n                try {\n                    doc = new ActiveXObject(docStrings[d]);\n                } catch (e) {\n                    doc = null;\n                }\n            } else {\n                break;\n            }\n        }\n        return doc;\n    },\n\n    /** Function: xmlElement\n     *  Create an XML DOM element.\n     *\n     *  This function creates an XML DOM element correctly across all\n     *  implementations. Note that these are not HTML DOM elements, which\n     *  aren't appropriate for XMPP stanzas.\n     *\n     *  Parameters:\n     *    (String) name - The name for the element.\n     *    (Array|Object) attrs - An optional array or object containing\n     *      key/value pairs to use as element attributes. The object should\n     *      be in the format {'key': 'value'} or {key: 'value'}. The array\n     *      should have the format [['key1', 'value1'], ['key2', 'value2']].\n     *    (String) text - The text child data for the element.\n     *\n     *  Returns:\n     *    A new XML DOM element.\n     */\n    xmlElement: function (name) {\n        if (!name) { return null; }\n\n        const node = Strophe.xmlGenerator().createElement(name);\n        // FIXME: this should throw errors if args are the wrong type or\n        // there are more than two optional args\n        for (let a=1; a<arguments.length; a++) {\n            const arg = arguments[a];\n            if (!arg) { continue; }\n            if (typeof(arg) === \"string\" ||\n                typeof(arg) === \"number\") {\n                node.appendChild(Strophe.xmlTextNode(arg));\n            } else if (typeof(arg) === \"object\" &&\n                       typeof(arg.sort) === \"function\") {\n                for (let i=0; i<arg.length; i++) {\n                    const attr = arg[i];\n                    if (typeof(attr) === \"object\" &&\n                        typeof(attr.sort) === \"function\" &&\n                        attr[1] !== undefined &&\n                        attr[1] !== null) {\n                        node.setAttribute(attr[0], attr[1]);\n                    }\n                }\n            } else if (typeof(arg) === \"object\") {\n                for (const k in arg) {\n                    if (Object.prototype.hasOwnProperty.call(arg, k) && arg[k] !== undefined && arg[k] !== null) {\n                        node.setAttribute(k, arg[k]);\n                    }\n                }\n            }\n        }\n        return node;\n    },\n\n    /*  Function: xmlescape\n     *  Excapes invalid xml characters.\n     *\n     *  Parameters:\n     *     (String) text - text to escape.\n     *\n     *  Returns:\n     *      Escaped text.\n     */\n    xmlescape: function(text) {\n        text = text.replace(/\\&/g, \"&amp;\");\n        text = text.replace(/</g,  \"&lt;\");\n        text = text.replace(/>/g,  \"&gt;\");\n        text = text.replace(/'/g,  \"&apos;\");\n        text = text.replace(/\"/g,  \"&quot;\");\n        return text;\n    },\n\n    /*  Function: xmlunescape\n    *  Unexcapes invalid xml characters.\n    *\n    *  Parameters:\n    *     (String) text - text to unescape.\n    *\n    *  Returns:\n    *      Unescaped text.\n    */\n    xmlunescape: function(text) {\n        text = text.replace(/\\&amp;/g, \"&\");\n        text = text.replace(/&lt;/g,  \"<\");\n        text = text.replace(/&gt;/g,  \">\");\n        text = text.replace(/&apos;/g,  \"'\");\n        text = text.replace(/&quot;/g,  \"\\\"\");\n        return text;\n    },\n\n    /** Function: xmlTextNode\n     *  Creates an XML DOM text node.\n     *\n     *  Provides a cross implementation version of document.createTextNode.\n     *\n     *  Parameters:\n     *    (String) text - The content of the text node.\n     *\n     *  Returns:\n     *    A new XML DOM text node.\n     */\n    xmlTextNode: function (text) {\n        return Strophe.xmlGenerator().createTextNode(text);\n    },\n\n    /** Function: xmlHtmlNode\n     *  Creates an XML DOM html node.\n     *\n     *  Parameters:\n     *    (String) html - The content of the html node.\n     *\n     *  Returns:\n     *    A new XML DOM text node.\n     */\n    xmlHtmlNode: function (html) {\n        let node;\n        //ensure text is escaped\n        if (DOMParser) {\n            const parser = new DOMParser();\n            node = parser.parseFromString(html, \"text/xml\");\n        } else {\n            node = new ActiveXObject(\"Microsoft.XMLDOM\");\n            node.async=\"false\";\n            node.loadXML(html);\n        }\n        return node;\n    },\n\n    /** Function: getText\n     *  Get the concatenation of all text children of an element.\n     *\n     *  Parameters:\n     *    (XMLElement) elem - A DOM element.\n     *\n     *  Returns:\n     *    A String with the concatenated text of all text element children.\n     */\n    getText: function (elem) {\n        if (!elem) { return null; }\n\n        let str = \"\";\n        if (elem.childNodes.length === 0 && elem.nodeType === Strophe.ElementType.TEXT) {\n            str += elem.nodeValue;\n        }\n        for (let i=0; i<elem.childNodes.length; i++) {\n            if (elem.childNodes[i].nodeType === Strophe.ElementType.TEXT) {\n                str += elem.childNodes[i].nodeValue;\n            }\n        }\n        return Strophe.xmlescape(str);\n    },\n\n    /** Function: copyElement\n     *  Copy an XML DOM element.\n     *\n     *  This function copies a DOM element and all its descendants and returns\n     *  the new copy.\n     *\n     *  Parameters:\n     *    (XMLElement) elem - A DOM element.\n     *\n     *  Returns:\n     *    A new, copied DOM element tree.\n     */\n    copyElement: function (elem) {\n        let el;\n        if (elem.nodeType === Strophe.ElementType.NORMAL) {\n            el = Strophe.xmlElement(elem.tagName);\n\n            for (let i=0; i<elem.attributes.length; i++) {\n                el.setAttribute(elem.attributes[i].nodeName,\n                                elem.attributes[i].value);\n            }\n\n            for (let i=0; i<elem.childNodes.length; i++) {\n                el.appendChild(Strophe.copyElement(elem.childNodes[i]));\n            }\n        } else if (elem.nodeType === Strophe.ElementType.TEXT) {\n            el = Strophe.xmlGenerator().createTextNode(elem.nodeValue);\n        }\n        return el;\n    },\n\n\n    /** Function: createHtml\n     *  Copy an HTML DOM element into an XML DOM.\n     *\n     *  This function copies a DOM element and all its descendants and returns\n     *  the new copy.\n     *\n     *  Parameters:\n     *    (HTMLElement) elem - A DOM element.\n     *\n     *  Returns:\n     *    A new, copied DOM element tree.\n     */\n    createHtml: function (elem) {\n        let el;\n        if (elem.nodeType === Strophe.ElementType.NORMAL) {\n            const tag = elem.nodeName.toLowerCase(); // XHTML tags must be lower case.\n            if (Strophe.XHTML.validTag(tag)) {\n                try {\n                    el = Strophe.xmlElement(tag);\n                    for (let i=0; i < Strophe.XHTML.attributes[tag].length; i++) {\n                        const attribute = Strophe.XHTML.attributes[tag][i];\n                        let value = elem.getAttribute(attribute);\n                        if (typeof value === 'undefined' || value === null || value === '' || value === false || value === 0) {\n                            continue;\n                        }\n                        if (attribute === 'style' && typeof value === 'object' && typeof value.cssText !== 'undefined') {\n                            value = value.cssText; // we're dealing with IE, need to get CSS out\n                        }\n                        // filter out invalid css styles\n                        if (attribute === 'style') {\n                            const css = [];\n                            const cssAttrs = value.split(';');\n                            for (let j=0; j < cssAttrs.length; j++) {\n                                const attr = cssAttrs[j].split(':');\n                                const cssName = attr[0].replace(/^\\s*/, \"\").replace(/\\s*$/, \"\").toLowerCase();\n                                if(Strophe.XHTML.validCSS(cssName)) {\n                                    const cssValue = attr[1].replace(/^\\s*/, \"\").replace(/\\s*$/, \"\");\n                                    css.push(cssName + ': ' + cssValue);\n                                }\n                            }\n                            if (css.length > 0) {\n                                value = css.join('; ');\n                                el.setAttribute(attribute, value);\n                            }\n                        } else {\n                            el.setAttribute(attribute, value);\n                        }\n                    }\n                    for (let i=0; i < elem.childNodes.length; i++) {\n                        el.appendChild(Strophe.createHtml(elem.childNodes[i]));\n                    }\n                } catch(e) { // invalid elements\n                    el = Strophe.xmlTextNode('');\n                }\n            } else {\n                el = Strophe.xmlGenerator().createDocumentFragment();\n                for (let i=0; i < elem.childNodes.length; i++) {\n                    el.appendChild(Strophe.createHtml(elem.childNodes[i]));\n                }\n            }\n        } else if (elem.nodeType === Strophe.ElementType.FRAGMENT) {\n            el = Strophe.xmlGenerator().createDocumentFragment();\n            for (let i=0; i < elem.childNodes.length; i++) {\n                el.appendChild(Strophe.createHtml(elem.childNodes[i]));\n            }\n        } else if (elem.nodeType === Strophe.ElementType.TEXT) {\n            el = Strophe.xmlTextNode(elem.nodeValue);\n        }\n        return el;\n    },\n\n    /** Function: escapeNode\n     *  Escape the node part (also called local part) of a JID.\n     *\n     *  Parameters:\n     *    (String) node - A node (or local part).\n     *\n     *  Returns:\n     *    An escaped node (or local part).\n     */\n    escapeNode: function (node) {\n        if (typeof node !== \"string\") { return node; }\n        return node.replace(/^\\s+|\\s+$/g, '')\n            .replace(/\\\\/g,  \"\\\\5c\")\n            .replace(/ /g,   \"\\\\20\")\n            .replace(/\\\"/g,  \"\\\\22\")\n            .replace(/\\&/g,  \"\\\\26\")\n            .replace(/\\'/g,  \"\\\\27\")\n            .replace(/\\//g,  \"\\\\2f\")\n            .replace(/:/g,   \"\\\\3a\")\n            .replace(/</g,   \"\\\\3c\")\n            .replace(/>/g,   \"\\\\3e\")\n            .replace(/@/g,   \"\\\\40\");\n    },\n\n    /** Function: unescapeNode\n     *  Unescape a node part (also called local part) of a JID.\n     *\n     *  Parameters:\n     *    (String) node - A node (or local part).\n     *\n     *  Returns:\n     *    An unescaped node (or local part).\n     */\n    unescapeNode: function (node) {\n        if (typeof node !== \"string\") { return node; }\n        return node.replace(/\\\\20/g, \" \")\n            .replace(/\\\\22/g, '\"')\n            .replace(/\\\\26/g, \"&\")\n            .replace(/\\\\27/g, \"'\")\n            .replace(/\\\\2f/g, \"/\")\n            .replace(/\\\\3a/g, \":\")\n            .replace(/\\\\3c/g, \"<\")\n            .replace(/\\\\3e/g, \">\")\n            .replace(/\\\\40/g, \"@\")\n            .replace(/\\\\5c/g, \"\\\\\");\n    },\n\n    /** Function: getNodeFromJid\n     *  Get the node portion of a JID String.\n     *\n     *  Parameters:\n     *    (String) jid - A JID.\n     *\n     *  Returns:\n     *    A String containing the node.\n     */\n    getNodeFromJid: function (jid) {\n        if (jid.indexOf(\"@\") < 0) { return null; }\n        return jid.split(\"@\")[0];\n    },\n\n    /** Function: getDomainFromJid\n     *  Get the domain portion of a JID String.\n     *\n     *  Parameters:\n     *    (String) jid - A JID.\n     *\n     *  Returns:\n     *    A String containing the domain.\n     */\n    getDomainFromJid: function (jid) {\n        const bare = Strophe.getBareJidFromJid(jid);\n        if (bare.indexOf(\"@\") < 0) {\n            return bare;\n        } else {\n            const parts = bare.split(\"@\");\n            parts.splice(0, 1);\n            return parts.join('@');\n        }\n    },\n\n    /** Function: getResourceFromJid\n     *  Get the resource portion of a JID String.\n     *\n     *  Parameters:\n     *    (String) jid - A JID.\n     *\n     *  Returns:\n     *    A String containing the resource.\n     */\n    getResourceFromJid: function (jid) {\n        if (!jid) { return null; }\n        const s = jid.split(\"/\");\n        if (s.length < 2) { return null; }\n        s.splice(0, 1);\n        return s.join('/');\n    },\n\n    /** Function: getBareJidFromJid\n     *  Get the bare JID from a JID String.\n     *\n     *  Parameters:\n     *    (String) jid - A JID.\n     *\n     *  Returns:\n     *    A String containing the bare JID.\n     */\n    getBareJidFromJid: function (jid) {\n        return jid ? jid.split(\"/\")[0] : null;\n    },\n\n    /** PrivateFunction: _handleError\n     *  _Private_ function that properly logs an error to the console\n     */\n    _handleError: function (e) {\n        if (typeof e.stack !== \"undefined\") {\n            Strophe.fatal(e.stack);\n        }\n        if (e.sourceURL) {\n            Strophe.fatal(\"error: \" + this.handler + \" \" + e.sourceURL + \":\" +\n                          e.line + \" - \" + e.name + \": \" + e.message);\n        } else if (e.fileName) {\n            Strophe.fatal(\"error: \" + this.handler + \" \" +\n                          e.fileName + \":\" + e.lineNumber + \" - \" +\n                          e.name + \": \" + e.message);\n        } else {\n            Strophe.fatal(\"error: \" + e.message);\n        }\n    },\n\n    /** Function: log\n     *  User overrideable logging function.\n     *\n     *  This function is called whenever the Strophe library calls any\n     *  of the logging functions.  The default implementation of this\n     *  function logs only fatal errors.  If client code wishes to handle the logging\n     *  messages, it should override this with\n     *  > Strophe.log = function (level, msg) {\n     *  >   (user code here)\n     *  > };\n     *\n     *  Please note that data sent and received over the wire is logged\n     *  via Strophe.Connection.rawInput() and Strophe.Connection.rawOutput().\n     *\n     *  The different levels and their meanings are\n     *\n     *    DEBUG - Messages useful for debugging purposes.\n     *    INFO - Informational messages.  This is mostly information like\n     *      'disconnect was called' or 'SASL auth succeeded'.\n     *    WARN - Warnings about potential problems.  This is mostly used\n     *      to report transient connection errors like request timeouts.\n     *    ERROR - Some error occurred.\n     *    FATAL - A non-recoverable fatal error occurred.\n     *\n     *  Parameters:\n     *    (Integer) level - The log level of the log message.  This will\n     *      be one of the values in Strophe.LogLevel.\n     *    (String) msg - The log message.\n     */\n    log: function (level, msg) {\n        if (level === this.LogLevel.FATAL &&\n            typeof window.console === 'object' &&\n            typeof window.console.error === 'function') {\n            window.console.error(msg);\n        }\n    },\n\n    /** Function: debug\n     *  Log a message at the Strophe.LogLevel.DEBUG level.\n     *\n     *  Parameters:\n     *    (String) msg - The log message.\n     */\n    debug: function(msg) {\n        this.log(this.LogLevel.DEBUG, msg);\n    },\n\n    /** Function: info\n     *  Log a message at the Strophe.LogLevel.INFO level.\n     *\n     *  Parameters:\n     *    (String) msg - The log message.\n     */\n    info: function (msg) {\n        this.log(this.LogLevel.INFO, msg);\n    },\n\n    /** Function: warn\n     *  Log a message at the Strophe.LogLevel.WARN level.\n     *\n     *  Parameters:\n     *    (String) msg - The log message.\n     */\n    warn: function (msg) {\n        this.log(this.LogLevel.WARN, msg);\n    },\n\n    /** Function: error\n     *  Log a message at the Strophe.LogLevel.ERROR level.\n     *\n     *  Parameters:\n     *    (String) msg - The log message.\n     */\n    error: function (msg) {\n        this.log(this.LogLevel.ERROR, msg);\n    },\n\n    /** Function: fatal\n     *  Log a message at the Strophe.LogLevel.FATAL level.\n     *\n     *  Parameters:\n     *    (String) msg - The log message.\n     */\n    fatal: function (msg) {\n        this.log(this.LogLevel.FATAL, msg);\n    },\n\n    /** Function: serialize\n     *  Render a DOM element and all descendants to a String.\n     *\n     *  Parameters:\n     *    (XMLElement) elem - A DOM element.\n     *\n     *  Returns:\n     *    The serialized element tree as a String.\n     */\n    serialize: function (elem) {\n        if (!elem) { return null; }\n        if (typeof(elem.tree) === \"function\") {\n            elem = elem.tree();\n        }\n        const names = [...Array(elem.attributes.length).keys()].map(i => elem.attributes[i].nodeName);\n        names.sort();\n        let result = names.reduce(\n            (a, n) => `${a} ${n}=\"${Strophe.xmlescape(elem.attributes.getNamedItem(n).value)}\"`,\n            `<${elem.nodeName}`\n        );\n\n        if (elem.childNodes.length > 0) {\n            result += \">\";\n            for (let i=0; i < elem.childNodes.length; i++) {\n                const child = elem.childNodes[i];\n                switch (child.nodeType) {\n                    case Strophe.ElementType.NORMAL:\n                        // normal element, so recurse\n                        result += Strophe.serialize(child);\n                        break;\n                    case Strophe.ElementType.TEXT:\n                        // text element to escape values\n                        result += Strophe.xmlescape(child.nodeValue);\n                        break;\n                    case Strophe.ElementType.CDATA:\n                        // cdata section so don't escape values\n                        result += \"<![CDATA[\"+child.nodeValue+\"]]>\";\n                }\n            }\n            result += \"</\" + elem.nodeName + \">\";\n        } else {\n            result += \"/>\";\n        }\n        return result;\n    },\n\n    /** PrivateVariable: _requestId\n     *  _Private_ variable that keeps track of the request ids for\n     *  connections.\n     */\n    _requestId: 0,\n\n    /** PrivateVariable: Strophe.connectionPlugins\n     *  _Private_ variable Used to store plugin names that need\n     *  initialization on Strophe.Connection construction.\n     */\n    _connectionPlugins: {},\n\n    /** Function: addConnectionPlugin\n     *  Extends the Strophe.Connection object with the given plugin.\n     *\n     *  Parameters:\n     *    (String) name - The name of the extension.\n     *    (Object) ptype - The plugin's prototype.\n     */\n    addConnectionPlugin: function (name, ptype) {\n        Strophe._connectionPlugins[name] = ptype;\n    }\n};\n\n/** Class: Strophe.Builder\n *  XML DOM builder.\n *\n *  This object provides an interface similar to JQuery but for building\n *  DOM elements easily and rapidly.  All the functions except for toString()\n *  and tree() return the object, so calls can be chained.  Here's an\n *  example using the $iq() builder helper.\n *  > $iq({to: 'you', from: 'me', type: 'get', id: '1'})\n *  >     .c('query', {xmlns: 'strophe:example'})\n *  >     .c('example')\n *  >     .toString()\n *\n *  The above generates this XML fragment\n *  > <iq to='you' from='me' type='get' id='1'>\n *  >   <query xmlns='strophe:example'>\n *  >     <example/>\n *  >   </query>\n *  > </iq>\n *  The corresponding DOM manipulations to get a similar fragment would be\n *  a lot more tedious and probably involve several helper variables.\n *\n *  Since adding children makes new operations operate on the child, up()\n *  is provided to traverse up the tree.  To add two children, do\n *  > builder.c('child1', ...).up().c('child2', ...)\n *  The next operation on the Builder will be relative to the second child.\n */\n\n/** Constructor: Strophe.Builder\n *  Create a Strophe.Builder object.\n *\n *  The attributes should be passed in object notation.  For example\n *  > let b = new Builder('message', {to: 'you', from: 'me'});\n *  or\n *  > let b = new Builder('messsage', {'xml:lang': 'en'});\n *\n *  Parameters:\n *    (String) name - The name of the root element.\n *    (Object) attrs - The attributes for the root element in object notation.\n *\n *  Returns:\n *    A new Strophe.Builder.\n */\nStrophe.Builder = function (name, attrs) {\n    // Set correct namespace for jabber:client elements\n    if (name === \"presence\" || name === \"message\" || name === \"iq\") {\n        if (attrs && !attrs.xmlns) {\n            attrs.xmlns = Strophe.NS.CLIENT;\n        } else if (!attrs) {\n            attrs = {xmlns: Strophe.NS.CLIENT};\n        }\n    }\n    // Holds the tree being built.\n    this.nodeTree = Strophe.xmlElement(name, attrs);\n    // Points to the current operation node.\n    this.node = this.nodeTree;\n};\n\nStrophe.Builder.prototype = {\n    /** Function: tree\n     *  Return the DOM tree.\n     *\n     *  This function returns the current DOM tree as an element object.  This\n     *  is suitable for passing to functions like Strophe.Connection.send().\n     *\n     *  Returns:\n     *    The DOM tree as a element object.\n     */\n    tree: function () {\n        return this.nodeTree;\n    },\n\n    /** Function: toString\n     *  Serialize the DOM tree to a String.\n     *\n     *  This function returns a string serialization of the current DOM\n     *  tree.  It is often used internally to pass data to a\n     *  Strophe.Request object.\n     *\n     *  Returns:\n     *    The serialized DOM tree in a String.\n     */\n    toString: function () {\n        return Strophe.serialize(this.nodeTree);\n    },\n\n    /** Function: up\n     *  Make the current parent element the new current element.\n     *\n     *  This function is often used after c() to traverse back up the tree.\n     *  For example, to add two children to the same element\n     *  > builder.c('child1', {}).up().c('child2', {});\n     *\n     *  Returns:\n     *    The Stophe.Builder object.\n     */\n    up: function () {\n        this.node = this.node.parentNode;\n        return this;\n    },\n\n    /** Function: root\n     *  Make the root element the new current element.\n     *\n     *  When at a deeply nested element in the tree, this function can be used\n     *  to jump back to the root of the tree, instead of having to repeatedly\n     *  call up().\n     *\n     *  Returns:\n     *    The Stophe.Builder object.\n     */\n    root: function () {\n        this.node = this.nodeTree;\n        return this;\n    },\n\n    /** Function: attrs\n     *  Add or modify attributes of the current element.\n     *\n     *  The attributes should be passed in object notation.  This function\n     *  does not move the current element pointer.\n     *\n     *  Parameters:\n     *    (Object) moreattrs - The attributes to add/modify in object notation.\n     *\n     *  Returns:\n     *    The Strophe.Builder object.\n     */\n    attrs: function (moreattrs) {\n        for (const k in moreattrs) {\n            if (Object.prototype.hasOwnProperty.call(moreattrs, k)) {\n                if (moreattrs[k] === undefined) {\n                    this.node.removeAttribute(k);\n                } else {\n                    this.node.setAttribute(k, moreattrs[k]);\n                }\n            }\n        }\n        return this;\n    },\n\n    /** Function: c\n     *  Add a child to the current element and make it the new current\n     *  element.\n     *\n     *  This function moves the current element pointer to the child,\n     *  unless text is provided.  If you need to add another child, it\n     *  is necessary to use up() to go back to the parent in the tree.\n     *\n     *  Parameters:\n     *    (String) name - The name of the child.\n     *    (Object) attrs - The attributes of the child in object notation.\n     *    (String) text - The text to add to the child.\n     *\n     *  Returns:\n     *    The Strophe.Builder object.\n     */\n    c: function (name, attrs, text) {\n        const child = Strophe.xmlElement(name, attrs, text);\n        this.node.appendChild(child);\n        if (typeof text !== \"string\" && typeof text !==\"number\") {\n            this.node = child;\n        }\n        return this;\n    },\n\n    /** Function: cnode\n     *  Add a child to the current element and make it the new current\n     *  element.\n     *\n     *  This function is the same as c() except that instead of using a\n     *  name and an attributes object to create the child it uses an\n     *  existing DOM element object.\n     *\n     *  Parameters:\n     *    (XMLElement) elem - A DOM element.\n     *\n     *  Returns:\n     *    The Strophe.Builder object.\n     */\n    cnode: function (elem) {\n        let impNode;\n        const xmlGen = Strophe.xmlGenerator();\n        try {\n            impNode = (xmlGen.importNode !== undefined);\n        } catch (e) {\n            impNode = false;\n        }\n        const newElem = impNode ? xmlGen.importNode(elem, true) : Strophe.copyElement(elem);\n        this.node.appendChild(newElem);\n        this.node = newElem;\n        return this;\n    },\n\n    /** Function: t\n     *  Add a child text element.\n     *\n     *  This *does not* make the child the new current element since there\n     *  are no children of text elements.\n     *\n     *  Parameters:\n     *    (String) text - The text data to append to the current element.\n     *\n     *  Returns:\n     *    The Strophe.Builder object.\n     */\n    t: function (text) {\n        const child = Strophe.xmlTextNode(text);\n        this.node.appendChild(child);\n        return this;\n    },\n\n    /** Function: h\n     *  Replace current element contents with the HTML passed in.\n     *\n     *  This *does not* make the child the new current element\n     *\n     *  Parameters:\n     *    (String) html - The html to insert as contents of current element.\n     *\n     *  Returns:\n     *    The Strophe.Builder object.\n     */\n    h: function (html) {\n        const fragment = document.createElement('body');\n        // force the browser to try and fix any invalid HTML tags\n        fragment.innerHTML = html;\n        // copy cleaned html into an xml dom\n        const xhtml = Strophe.createHtml(fragment);\n        while (xhtml.childNodes.length > 0) {\n            this.node.appendChild(xhtml.childNodes[0]);\n        }\n        return this;\n    }\n};\n\n/** PrivateClass: Strophe.Handler\n *  _Private_ helper class for managing stanza handlers.\n *\n *  A Strophe.Handler encapsulates a user provided callback function to be\n *  executed when matching stanzas are received by the connection.\n *  Handlers can be either one-off or persistant depending on their\n *  return value. Returning true will cause a Handler to remain active, and\n *  returning false will remove the Handler.\n *\n *  Users will not use Strophe.Handler objects directly, but instead they\n *  will use Strophe.Connection.addHandler() and\n *  Strophe.Connection.deleteHandler().\n */\n\n/** PrivateConstructor: Strophe.Handler\n *  Create and initialize a new Strophe.Handler.\n *\n *  Parameters:\n *    (Function) handler - A function to be executed when the handler is run.\n *    (String) ns - The namespace to match.\n *    (String) name - The element name to match.\n *    (String) type - The element type to match.\n *    (String) id - The element id attribute to match.\n *    (String) from - The element from attribute to match.\n *    (Object) options - Handler options\n *\n *  Returns:\n *    A new Strophe.Handler object.\n */\nStrophe.Handler = function (handler, ns, name, type, id, from, options) {\n    this.handler = handler;\n    this.ns = ns;\n    this.name = name;\n    this.type = type;\n    this.id = id;\n    this.options = options || {'matchBareFromJid': false, 'ignoreNamespaceFragment': false};\n    // BBB: Maintain backward compatibility with old `matchBare` option\n    if (this.options.matchBare) {\n        Strophe.warn('The \"matchBare\" option is deprecated, use \"matchBareFromJid\" instead.');\n        this.options.matchBareFromJid = this.options.matchBare;\n        delete this.options.matchBare;\n    }\n    if (this.options.matchBareFromJid) {\n        this.from = from ? Strophe.getBareJidFromJid(from) : null;\n    } else {\n        this.from = from;\n    }\n    // whether the handler is a user handler or a system handler\n    this.user = true;\n};\n\nStrophe.Handler.prototype = {\n    /** PrivateFunction: getNamespace\n     *  Returns the XML namespace attribute on an element.\n     *  If `ignoreNamespaceFragment` was passed in for this handler, then the\n     *  URL fragment will be stripped.\n     *\n     *  Parameters:\n     *    (XMLElement) elem - The XML element with the namespace.\n     *\n     *  Returns:\n     *    The namespace, with optionally the fragment stripped.\n     */\n    getNamespace: function (elem) {\n        let elNamespace = elem.getAttribute(\"xmlns\");\n        if (elNamespace && this.options.ignoreNamespaceFragment) {\n            elNamespace = elNamespace.split('#')[0];\n        }\n        return elNamespace;\n    },\n\n    /** PrivateFunction: namespaceMatch\n     *  Tests if a stanza matches the namespace set for this Strophe.Handler.\n     *\n     *  Parameters:\n     *    (XMLElement) elem - The XML element to test.\n     *\n     *  Returns:\n     *    true if the stanza matches and false otherwise.\n     */\n    namespaceMatch: function (elem) {\n        let nsMatch = false;\n        if (!this.ns) {\n            return true;\n        } else {\n            Strophe.forEachChild(elem, null, (elem) => {\n                if (this.getNamespace(elem) === this.ns) {\n                    nsMatch = true;\n                }\n            });\n            return nsMatch || this.getNamespace(elem) === this.ns;\n        }\n    },\n\n    /** PrivateFunction: isMatch\n     *  Tests if a stanza matches the Strophe.Handler.\n     *\n     *  Parameters:\n     *    (XMLElement) elem - The XML element to test.\n     *\n     *  Returns:\n     *    true if the stanza matches and false otherwise.\n     */\n    isMatch: function (elem) {\n        let from = elem.getAttribute('from');\n        if (this.options.matchBareFromJid) {\n            from = Strophe.getBareJidFromJid(from);\n        }\n        const elem_type = elem.getAttribute(\"type\");\n        if (this.namespaceMatch(elem) &&\n            (!this.name || Strophe.isTagEqual(elem, this.name)) &&\n            (!this.type || (Array.isArray(this.type) ? this.type.indexOf(elem_type) !== -1 : elem_type === this.type)) &&\n            (!this.id || elem.getAttribute(\"id\") === this.id) &&\n            (!this.from || from === this.from)) {\n                return true;\n        }\n        return false;\n    },\n\n    /** PrivateFunction: run\n     *  Run the callback on a matching stanza.\n     *\n     *  Parameters:\n     *    (XMLElement) elem - The DOM element that triggered the\n     *      Strophe.Handler.\n     *\n     *  Returns:\n     *    A boolean indicating if the handler should remain active.\n     */\n    run: function (elem) {\n        let result = null;\n        try {\n            result = this.handler(elem);\n        } catch (e) {\n            Strophe._handleError(e);\n            throw e;\n        }\n        return result;\n    },\n\n    /** PrivateFunction: toString\n     *  Get a String representation of the Strophe.Handler object.\n     *\n     *  Returns:\n     *    A String.\n     */\n    toString: function () {\n        return \"{Handler: \" + this.handler + \"(\" + this.name + \",\" +\n            this.id + \",\" + this.ns + \")}\";\n    }\n};\n\n/** PrivateClass: Strophe.TimedHandler\n *  _Private_ helper class for managing timed handlers.\n *\n *  A Strophe.TimedHandler encapsulates a user provided callback that\n *  should be called after a certain period of time or at regular\n *  intervals.  The return value of the callback determines whether the\n *  Strophe.TimedHandler will continue to fire.\n *\n *  Users will not use Strophe.TimedHandler objects directly, but instead\n *  they will use Strophe.Connection.addTimedHandler() and\n *  Strophe.Connection.deleteTimedHandler().\n */\n\n/** PrivateConstructor: Strophe.TimedHandler\n *  Create and initialize a new Strophe.TimedHandler object.\n *\n *  Parameters:\n *    (Integer) period - The number of milliseconds to wait before the\n *      handler is called.\n *    (Function) handler - The callback to run when the handler fires.  This\n *      function should take no arguments.\n *\n *  Returns:\n *    A new Strophe.TimedHandler object.\n */\nStrophe.TimedHandler = function (period, handler) {\n    this.period = period;\n    this.handler = handler;\n    this.lastCalled = new Date().getTime();\n    this.user = true;\n};\n\nStrophe.TimedHandler.prototype = {\n    /** PrivateFunction: run\n     *  Run the callback for the Strophe.TimedHandler.\n     *\n     *  Returns:\n     *    true if the Strophe.TimedHandler should be called again, and false\n     *      otherwise.\n     */\n    run: function () {\n        this.lastCalled = new Date().getTime();\n        return this.handler();\n    },\n\n    /** PrivateFunction: reset\n     *  Reset the last called time for the Strophe.TimedHandler.\n     */\n    reset: function () {\n        this.lastCalled = new Date().getTime();\n    },\n\n    /** PrivateFunction: toString\n     *  Get a string representation of the Strophe.TimedHandler object.\n     *\n     *  Returns:\n     *    The string representation.\n     */\n    toString: function () {\n        return \"{TimedHandler: \" + this.handler + \"(\" + this.period +\")}\";\n    }\n};\n\n/** Class: Strophe.Connection\n *  XMPP Connection manager.\n *\n *  This class is the main part of Strophe.  It manages a BOSH or websocket\n *  connection to an XMPP server and dispatches events to the user callbacks\n *  as data arrives. It supports SASL PLAIN, SASL DIGEST-MD5, SASL SCRAM-SHA1\n *  and legacy authentication.\n *\n *  After creating a Strophe.Connection object, the user will typically\n *  call connect() with a user supplied callback to handle connection level\n *  events like authentication failure, disconnection, or connection\n *  complete.\n *\n *  The user will also have several event handlers defined by using\n *  addHandler() and addTimedHandler().  These will allow the user code to\n *  respond to interesting stanzas or do something periodically with the\n *  connection. These handlers will be active once authentication is\n *  finished.\n *\n *  To send data to the connection, use send().\n */\n\n/** Constructor: Strophe.Connection\n *  Create and initialize a Strophe.Connection object.\n *\n *  The transport-protocol for this connection will be chosen automatically\n *  based on the given service parameter. URLs starting with \"ws://\" or\n *  \"wss://\" will use WebSockets, URLs starting with \"http://\", \"https://\"\n *  or without a protocol will use BOSH.\n *\n *  To make Strophe connect to the current host you can leave out the protocol\n *  and host part and just pass the path, e.g.\n *\n *  > let conn = new Strophe.Connection(\"/http-bind/\");\n *\n *  Options common to both Websocket and BOSH:\n *  ------------------------------------------\n *\n *  cookies:\n *\n *  The *cookies* option allows you to pass in cookies to be added to the\n *  document. These cookies will then be included in the BOSH XMLHttpRequest\n *  or in the websocket connection.\n *\n *  The passed in value must be a map of cookie names and string values.\n *\n *  > { \"myCookie\": {\n *  >     \"value\": \"1234\",\n *  >     \"domain\": \".example.org\",\n *  >     \"path\": \"/\",\n *  >     \"expires\": expirationDate\n *  >     }\n *  > }\n *\n *  Note that cookies can't be set in this way for other domains (i.e. cross-domain).\n *  Those cookies need to be set under those domains, for example they can be\n *  set server-side by making a XHR call to that domain to ask it to set any\n *  necessary cookies.\n *\n *  mechanisms:\n *\n *  The *mechanisms* option allows you to specify the SASL mechanisms that this\n *  instance of Strophe.Connection (and therefore your XMPP client) will\n *  support.\n *\n *  The value must be an array of objects with Strophe.SASLMechanism\n *  prototypes.\n *\n *  If nothing is specified, then the following mechanisms (and their\n *  priorities) are registered:\n *\n *      SCRAM-SHA1 - 70\n *      DIGEST-MD5 - 60\n *      PLAIN - 50\n *      OAUTH-BEARER - 40\n *      OAUTH-2 - 30\n *      ANONYMOUS - 20\n *      EXTERNAL - 10\n *\n *  WebSocket options:\n *  ------------------\n *\n *  If you want to connect to the current host with a WebSocket connection you\n *  can tell Strophe to use WebSockets through a \"protocol\" attribute in the\n *  optional options parameter. Valid values are \"ws\" for WebSocket and \"wss\"\n *  for Secure WebSocket.\n *  So to connect to \"wss://CURRENT_HOSTNAME/xmpp-websocket\" you would call\n *\n *  > let conn = new Strophe.Connection(\"/xmpp-websocket/\", {protocol: \"wss\"});\n *\n *  Note that relative URLs _NOT_ starting with a \"/\" will also include the path\n *  of the current site.\n *\n *  Also because downgrading security is not permitted by browsers, when using\n *  relative URLs both BOSH and WebSocket connections will use their secure\n *  variants if the current connection to the site is also secure (https).\n *\n *  BOSH options:\n *  -------------\n *\n *  By adding \"sync\" to the options, you can control if requests will\n *  be made synchronously or not. The default behaviour is asynchronous.\n *  If you want to make requests synchronous, make \"sync\" evaluate to true.\n *  > let conn = new Strophe.Connection(\"/http-bind/\", {sync: true});\n *\n *  You can also toggle this on an already established connection.\n *  > conn.options.sync = true;\n *\n *  The *customHeaders* option can be used to provide custom HTTP headers to be\n *  included in the XMLHttpRequests made.\n *\n *  The *keepalive* option can be used to instruct Strophe to maintain the\n *  current BOSH session across interruptions such as webpage reloads.\n *\n *  It will do this by caching the sessions tokens in sessionStorage, and when\n *  \"restore\" is called it will check whether there are cached tokens with\n *  which it can resume an existing session.\n *\n *  The *withCredentials* option should receive a Boolean value and is used to\n *  indicate wether cookies should be included in ajax requests (by default\n *  they're not).\n *  Set this value to true if you are connecting to a BOSH service\n *  and for some reason need to send cookies to it.\n *  In order for this to work cross-domain, the server must also enable\n *  credentials by setting the Access-Control-Allow-Credentials response header\n *  to \"true\". For most usecases however this setting should be false (which\n *  is the default).\n *  Additionally, when using Access-Control-Allow-Credentials, the\n *  Access-Control-Allow-Origin header can't be set to the wildcard \"*\", but\n *  instead must be restricted to actual domains.\n *\n *  The *contentType* option can be set to change the default Content-Type\n *  of \"text/xml; charset=utf-8\", which can be useful to reduce the amount of\n *  CORS preflight requests that are sent to the server.\n *\n *  Parameters:\n *    (String) service - The BOSH or WebSocket service URL.\n *    (Object) options - A hash of configuration options\n *\n *  Returns:\n *    A new Strophe.Connection object.\n */\nStrophe.Connection = function (service, options) {\n    // The service URL\n    this.service = service;\n    // Configuration options\n    this.options = options || {};\n    const proto = this.options.protocol || \"\";\n\n    // Select protocal based on service or options\n    if (service.indexOf(\"ws:\") === 0 || service.indexOf(\"wss:\") === 0 ||\n            proto.indexOf(\"ws\") === 0) {\n        this._proto = new Strophe.Websocket(this);\n    } else {\n        this._proto = new Strophe.Bosh(this);\n    }\n\n    /* The connected JID. */\n    this.jid = \"\";\n    /* the JIDs domain */\n    this.domain = null;\n    /* stream:features */\n    this.features = null;\n\n    // SASL\n    this._sasl_data = {};\n    this.do_session = false;\n    this.do_bind = false;\n\n    // handler lists\n    this.timedHandlers = [];\n    this.handlers = [];\n    this.removeTimeds = [];\n    this.removeHandlers = [];\n    this.addTimeds = [];\n    this.addHandlers = [];\n    this.protocolErrorHandlers = {\n        'HTTP': {},\n        'websocket': {}\n    };\n\n    this._idleTimeout = null;\n    this._disconnectTimeout = null;\n\n    this.authenticated = false;\n    this.connected = false;\n    this.disconnecting = false;\n    this.do_authentication = true;\n    this.paused = false;\n    this.restored = false;\n\n    this._data = [];\n    this._uniqueId = 0;\n\n    this._sasl_success_handler = null;\n    this._sasl_failure_handler = null;\n    this._sasl_challenge_handler = null;\n\n    // Max retries before disconnecting\n    this.maxRetries = 5;\n\n    // Call onIdle callback every 1/10th of a second\n    this._idleTimeout = setTimeout(() => this._onIdle(), 100);\n\n    utils.addCookies(this.options.cookies);\n    this.registerSASLMechanisms(this.options.mechanisms);\n\n    // initialize plugins\n    for (const k in Strophe._connectionPlugins) {\n        if (Object.prototype.hasOwnProperty.call(Strophe._connectionPlugins, k)) {\n            const F = function () {};\n            F.prototype = Strophe._connectionPlugins[k];\n            this[k] = new F();\n            this[k].init(this);\n        }\n    }\n};\n\nStrophe.Connection.prototype = {\n    /** Function: reset\n     *  Reset the connection.\n     *\n     *  This function should be called after a connection is disconnected\n     *  before that connection is reused.\n     */\n    reset: function () {\n        this._proto._reset();\n\n        // SASL\n        this.do_session = false;\n        this.do_bind = false;\n\n        // handler lists\n        this.timedHandlers = [];\n        this.handlers = [];\n        this.removeTimeds = [];\n        this.removeHandlers = [];\n        this.addTimeds = [];\n        this.addHandlers = [];\n\n        this.authenticated = false;\n        this.connected = false;\n        this.disconnecting = false;\n        this.restored = false;\n\n        this._data = [];\n        this._requests = [];\n        this._uniqueId = 0;\n    },\n\n    /** Function: pause\n     *  Pause the request manager.\n     *\n     *  This will prevent Strophe from sending any more requests to the\n     *  server.  This is very useful for temporarily pausing\n     *  BOSH-Connections while a lot of send() calls are happening quickly.\n     *  This causes Strophe to send the data in a single request, saving\n     *  many request trips.\n     */\n    pause: function () {\n        this.paused = true;\n    },\n\n    /** Function: resume\n     *  Resume the request manager.\n     *\n     *  This resumes after pause() has been called.\n     */\n    resume: function () {\n        this.paused = false;\n    },\n\n    /** Function: getUniqueId\n     *  Generate a unique ID for use in <iq/> elements.\n     *\n     *  All <iq/> stanzas are required to have unique id attributes.  This\n     *  function makes creating these easy.  Each connection instance has\n     *  a counter which starts from zero, and the value of this counter\n     *  plus a colon followed by the suffix becomes the unique id. If no\n     *  suffix is supplied, the counter is used as the unique id.\n     *\n     *  Suffixes are used to make debugging easier when reading the stream\n     *  data, and their use is recommended.  The counter resets to 0 for\n     *  every new connection for the same reason.  For connections to the\n     *  same server that authenticate the same way, all the ids should be\n     *  the same, which makes it easy to see changes.  This is useful for\n     *  automated testing as well.\n     *\n     *  Parameters:\n     *    (String) suffix - A optional suffix to append to the id.\n     *\n     *  Returns:\n     *    A unique string to be used for the id attribute.\n     */\n    getUniqueId: function (suffix) {\n        const uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n            const r = Math.random() * 16 | 0,\n                  v = c === 'x' ? r : r & 0x3 | 0x8;\n            return v.toString(16);\n        });\n        if (typeof(suffix) === \"string\" || typeof(suffix) === \"number\") {\n            return uuid + \":\" + suffix;\n        } else {\n            return uuid + \"\";\n        }\n    },\n\n    /** Function: addProtocolErrorHandler\n     *  Register a handler function for when a protocol (websocker or HTTP)\n     *  error occurs.\n     *\n     *  NOTE: Currently only HTTP errors for BOSH requests are handled.\n     *  Patches that handle websocket errors would be very welcome.\n     *\n     *  Parameters:\n     *    (String) protocol - 'HTTP' or 'websocket'\n     *    (Integer) status_code - Error status code (e.g 500, 400 or 404)\n     *    (Function) callback - Function that will fire on Http error\n     *\n     *  Example:\n     *  function onError(err_code){\n     *    //do stuff\n     *  }\n     *\n     *  let conn = Strophe.connect('http://example.com/http-bind');\n     *  conn.addProtocolErrorHandler('HTTP', 500, onError);\n     *  // Triggers HTTP 500 error and onError handler will be called\n     *  conn.connect('user_jid@incorrect_jabber_host', 'secret', onConnect);\n     */\n    addProtocolErrorHandler: function (protocol, status_code, callback){\n        this.protocolErrorHandlers[protocol][status_code] = callback;\n    },\n\n\n    /** Function: connect\n     *  Starts the connection process.\n     *\n     *  As the connection process proceeds, the user supplied callback will\n     *  be triggered multiple times with status updates.  The callback\n     *  should take two arguments - the status code and the error condition.\n     *\n     *  The status code will be one of the values in the Strophe.Status\n     *  constants.  The error condition will be one of the conditions\n     *  defined in RFC 3920 or the condition 'strophe-parsererror'.\n     *\n     *  The Parameters _wait_, _hold_ and _route_ are optional and only relevant\n     *  for BOSH connections. Please see XEP 124 for a more detailed explanation\n     *  of the optional parameters.\n     *\n     *  Parameters:\n     *    (String) jid - The user's JID.  This may be a bare JID,\n     *      or a full JID.  If a node is not supplied, SASL OAUTHBEARER or\n     *      SASL ANONYMOUS authentication will be attempted (OAUTHBEARER will\n     *      process the provided password value as an access token).\n     *    (String) pass - The user's password.\n     *    (Function) callback - The connect callback function.\n     *    (Integer) wait - The optional HTTPBIND wait value.  This is the\n     *      time the server will wait before returning an empty result for\n     *      a request.  The default setting of 60 seconds is recommended.\n     *    (Integer) hold - The optional HTTPBIND hold value.  This is the\n     *      number of connections the server will hold at one time.  This\n     *      should almost always be set to 1 (the default).\n     *    (String) route - The optional route value.\n     *    (String) authcid - The optional alternative authentication identity\n     *      (username) if intending to impersonate another user.\n     *      When using the SASL-EXTERNAL authentication mechanism, for example\n     *      with client certificates, then the authcid value is used to\n     *      determine whether an authorization JID (authzid) should be sent to\n     *      the server. The authzid should not be sent to the server if the\n     *      authzid and authcid are the same. So to prevent it from being sent\n     *      (for example when the JID is already contained in the client\n     *      certificate), set authcid to that same JID. See XEP-178 for more\n     *      details.\n     */\n    connect: function (jid, pass, callback, wait, hold, route, authcid) {\n        this.jid = jid;\n        /** Variable: authzid\n         *  Authorization identity.\n         */\n        this.authzid = Strophe.getBareJidFromJid(this.jid);\n\n        /** Variable: authcid\n         *  Authentication identity (User name).\n         */\n        this.authcid = authcid || Strophe.getNodeFromJid(this.jid);\n\n        /** Variable: pass\n         *  Authentication identity (User password).\n         */\n        this.pass = pass;\n\n        /** Variable: servtype\n         *  Digest MD5 compatibility.\n         */\n        this.servtype = \"xmpp\";\n\n        this.connect_callback = callback;\n        this.disconnecting = false;\n        this.connected = false;\n        this.authenticated = false;\n        this.restored = false;\n\n        // parse jid for domain\n        this.domain = Strophe.getDomainFromJid(this.jid);\n\n        this._changeConnectStatus(Strophe.Status.CONNECTING, null);\n\n        this._proto._connect(wait, hold, route);\n    },\n\n    /** Function: attach\n     *  Attach to an already created and authenticated BOSH session.\n     *\n     *  This function is provided to allow Strophe to attach to BOSH\n     *  sessions which have been created externally, perhaps by a Web\n     *  application.  This is often used to support auto-login type features\n     *  without putting user credentials into the page.\n     *\n     *  Parameters:\n     *    (String) jid - The full JID that is bound by the session.\n     *    (String) sid - The SID of the BOSH session.\n     *    (String) rid - The current RID of the BOSH session.  This RID\n     *      will be used by the next request.\n     *    (Function) callback The connect callback function.\n     *    (Integer) wait - The optional HTTPBIND wait value.  This is the\n     *      time the server will wait before returning an empty result for\n     *      a request.  The default setting of 60 seconds is recommended.\n     *      Other settings will require tweaks to the Strophe.TIMEOUT value.\n     *    (Integer) hold - The optional HTTPBIND hold value.  This is the\n     *      number of connections the server will hold at one time.  This\n     *      should almost always be set to 1 (the default).\n     *    (Integer) wind - The optional HTTBIND window value.  This is the\n     *      allowed range of request ids that are valid.  The default is 5.\n     */\n    attach: function (jid, sid, rid, callback, wait, hold, wind) {\n        if (this._proto instanceof Strophe.Bosh) {\n            this._proto._attach(jid, sid, rid, callback, wait, hold, wind);\n        } else {\n            const error = new Error('The \"attach\" method can only be used with a BOSH connection.');\n            error.name = 'StropheSessionError';\n            throw error;\n        }\n    },\n\n    /** Function: restore\n     *  Attempt to restore a cached BOSH session.\n     *\n     *  This function is only useful in conjunction with providing the\n     *  \"keepalive\":true option when instantiating a new Strophe.Connection.\n     *\n     *  When \"keepalive\" is set to true, Strophe will cache the BOSH tokens\n     *  RID (Request ID) and SID (Session ID) and then when this function is\n     *  called, it will attempt to restore the session from those cached\n     *  tokens.\n     *\n     *  This function must therefore be called instead of connect or attach.\n     *\n     *  For an example on how to use it, please see examples/restore.js\n     *\n     *  Parameters:\n     *    (String) jid - The user's JID.  This may be a bare JID or a full JID.\n     *    (Function) callback - The connect callback function.\n     *    (Integer) wait - The optional HTTPBIND wait value.  This is the\n     *      time the server will wait before returning an empty result for\n     *      a request.  The default setting of 60 seconds is recommended.\n     *    (Integer) hold - The optional HTTPBIND hold value.  This is the\n     *      number of connections the server will hold at one time.  This\n     *      should almost always be set to 1 (the default).\n     *    (Integer) wind - The optional HTTBIND window value.  This is the\n     *      allowed range of request ids that are valid.  The default is 5.\n     */\n    restore: function (jid, callback, wait, hold, wind) {\n        if (this._sessionCachingSupported()) {\n            this._proto._restore(jid, callback, wait, hold, wind);\n        } else {\n            const error = new Error('The \"restore\" method can only be used with a BOSH connection.');\n            error.name = 'StropheSessionError';\n            throw error;\n        }\n    },\n\n    /** PrivateFunction: _sessionCachingSupported\n     * Checks whether sessionStorage and JSON are supported and whether we're\n     * using BOSH.\n     */\n    _sessionCachingSupported: function () {\n        if (this._proto instanceof Strophe.Bosh) {\n            if (!JSON) { return false; }\n            try {\n                sessionStorage.setItem('_strophe_', '_strophe_');\n                sessionStorage.removeItem('_strophe_');\n            } catch (e) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    },\n\n    /** Function: xmlInput\n     *  User overrideable function that receives XML data coming into the\n     *  connection.\n     *\n     *  The default function does nothing.  User code can override this with\n     *  > Strophe.Connection.xmlInput = function (elem) {\n     *  >   (user code)\n     *  > };\n     *\n     *  Due to limitations of current Browsers' XML-Parsers the opening and closing\n     *  <stream> tag for WebSocket-Connoctions will be passed as selfclosing here.\n     *\n     *  BOSH-Connections will have all stanzas wrapped in a <body> tag. See\n     *  <Strophe.Bosh.strip> if you want to strip this tag.\n     *\n     *  Parameters:\n     *    (XMLElement) elem - The XML data received by the connection.\n     */\n    /* jshint unused:false */\n    xmlInput: function (elem) {\n        return;\n    },\n    /* jshint unused:true */\n\n    /** Function: xmlOutput\n     *  User overrideable function that receives XML data sent to the\n     *  connection.\n     *\n     *  The default function does nothing.  User code can override this with\n     *  > Strophe.Connection.xmlOutput = function (elem) {\n     *  >   (user code)\n     *  > };\n     *\n     *  Due to limitations of current Browsers' XML-Parsers the opening and closing\n     *  <stream> tag for WebSocket-Connoctions will be passed as selfclosing here.\n     *\n     *  BOSH-Connections will have all stanzas wrapped in a <body> tag. See\n     *  <Strophe.Bosh.strip> if you want to strip this tag.\n     *\n     *  Parameters:\n     *    (XMLElement) elem - The XMLdata sent by the connection.\n     */\n    /* jshint unused:false */\n    xmlOutput: function (elem) {\n        return;\n    },\n    /* jshint unused:true */\n\n    /** Function: rawInput\n     *  User overrideable function that receives raw data coming into the\n     *  connection.\n     *\n     *  The default function does nothing.  User code can override this with\n     *  > Strophe.Connection.rawInput = function (data) {\n     *  >   (user code)\n     *  > };\n     *\n     *  Parameters:\n     *    (String) data - The data received by the connection.\n     */\n    /* jshint unused:false */\n    rawInput: function (data) {\n        return;\n    },\n    /* jshint unused:true */\n\n    /** Function: rawOutput\n     *  User overrideable function that receives raw data sent to the\n     *  connection.\n     *\n     *  The default function does nothing.  User code can override this with\n     *  > Strophe.Connection.rawOutput = function (data) {\n     *  >   (user code)\n     *  > };\n     *\n     *  Parameters:\n     *    (String) data - The data sent by the connection.\n     */\n    /* jshint unused:false */\n    rawOutput: function (data) {\n        return;\n    },\n    /* jshint unused:true */\n\n    /** Function: nextValidRid\n     *  User overrideable function that receives the new valid rid.\n     *\n     *  The default function does nothing. User code can override this with\n     *  > Strophe.Connection.nextValidRid = function (rid) {\n     *  >    (user code)\n     *  > };\n     *\n     *  Parameters:\n     *    (Number) rid - The next valid rid\n     */\n    /* jshint unused:false */\n    nextValidRid: function (rid) {\n        return;\n    },\n    /* jshint unused:true */\n\n    /** Function: send\n     *  Send a stanza.\n     *\n     *  This function is called to push data onto the send queue to\n     *  go out over the wire.  Whenever a request is sent to the BOSH\n     *  server, all pending data is sent and the queue is flushed.\n     *\n     *  Parameters:\n     *    (XMLElement |\n     *     [XMLElement] |\n     *     Strophe.Builder) elem - The stanza to send.\n     */\n    send: function (elem) {\n        if (elem === null) { return ; }\n        if (typeof(elem.sort) === \"function\") {\n            for (let i=0; i < elem.length; i++) {\n                this._queueData(elem[i]);\n            }\n        } else if (typeof(elem.tree) === \"function\") {\n            this._queueData(elem.tree());\n        } else {\n            this._queueData(elem);\n        }\n        this._proto._send();\n    },\n\n    /** Function: flush\n     *  Immediately send any pending outgoing data.\n     *\n     *  Normally send() queues outgoing data until the next idle period\n     *  (100ms), which optimizes network use in the common cases when\n     *  several send()s are called in succession. flush() can be used to\n     *  immediately send all pending data.\n     */\n    flush: function () {\n        // cancel the pending idle period and run the idle function\n        // immediately\n        clearTimeout(this._idleTimeout);\n        this._onIdle();\n    },\n\n    /** Function: sendPresence\n     *  Helper function to send presence stanzas. The main benefit is for\n     *  sending presence stanzas for which you expect a responding presence\n     *  stanza with the same id (for example when leaving a chat room).\n     *\n     *  Parameters:\n     *    (XMLElement) elem - The stanza to send.\n     *    (Function) callback - The callback function for a successful request.\n     *    (Function) errback - The callback function for a failed or timed\n     *      out request.  On timeout, the stanza will be null.\n     *    (Integer) timeout - The time specified in milliseconds for a\n     *      timeout to occur.\n     *\n     *  Returns:\n     *    The id used to send the presence.\n     */\n    sendPresence: function(elem, callback, errback, timeout) {\n        let timeoutHandler = null;\n        if (typeof(elem.tree) === \"function\") {\n            elem = elem.tree();\n        }\n        let id = elem.getAttribute('id');\n        if (!id) { // inject id if not found\n            id = this.getUniqueId(\"sendPresence\");\n            elem.setAttribute(\"id\", id);\n        }\n\n        if (typeof callback === \"function\" || typeof errback === \"function\") {\n            const handler = this.addHandler(stanza => {\n                // remove timeout handler if there is one\n                if (timeoutHandler) {\n                    this.deleteTimedHandler(timeoutHandler);\n                }\n                if (stanza.getAttribute('type') === 'error') {\n                    if (errback) {\n                        errback(stanza);\n                    }\n                } else if (callback) {\n                    callback(stanza);\n                }\n            }, null, 'presence', null, id);\n\n            // if timeout specified, set up a timeout handler.\n            if (timeout) {\n                timeoutHandler = this.addTimedHandler(timeout, () => {\n                    // get rid of normal handler\n                    this.deleteHandler(handler);\n                    // call errback on timeout with null stanza\n                    if (errback) {\n                        errback(null);\n                    }\n                    return false;\n                });\n            }\n        }\n        this.send(elem);\n        return id;\n    },\n\n    /** Function: sendIQ\n     *  Helper function to send IQ stanzas.\n     *\n     *  Parameters:\n     *    (XMLElement) elem - The stanza to send.\n     *    (Function) callback - The callback function for a successful request.\n     *    (Function) errback - The callback function for a failed or timed\n     *      out request.  On timeout, the stanza will be null.\n     *    (Integer) timeout - The time specified in milliseconds for a\n     *      timeout to occur.\n     *\n     *  Returns:\n     *    The id used to send the IQ.\n    */\n    sendIQ: function(elem, callback, errback, timeout) {\n        let timeoutHandler = null;\n        if (typeof(elem.tree) === \"function\") {\n            elem = elem.tree();\n        }\n        let id = elem.getAttribute('id');\n        if (!id) { // inject id if not found\n            id = this.getUniqueId(\"sendIQ\");\n            elem.setAttribute(\"id\", id);\n        }\n\n        if (typeof callback === \"function\" || typeof errback === \"function\") {\n            const handler = this.addHandler(stanza => {\n                // remove timeout handler if there is one\n                if (timeoutHandler) {\n                    this.deleteTimedHandler(timeoutHandler);\n                }\n                const iqtype = stanza.getAttribute('type');\n                if (iqtype === 'result') {\n                    if (callback) {\n                        callback(stanza);\n                    }\n                } else if (iqtype === 'error') {\n                    if (errback) {\n                        errback(stanza);\n                    }\n                } else {\n                    const error = new Error(`Got bad IQ type of ${iqtype}`);\n                    error.name = \"StropheError\";\n                    throw(error);\n                }\n            }, null, 'iq', ['error', 'result'], id);\n\n            // if timeout specified, set up a timeout handler.\n            if (timeout) {\n                timeoutHandler = this.addTimedHandler(timeout, () => {\n                    // get rid of normal handler\n                    this.deleteHandler(handler);\n                    // call errback on timeout with null stanza\n                    if (errback) {\n                        errback(null);\n                    }\n                    return false;\n                });\n            }\n        }\n        this.send(elem);\n        return id;\n    },\n\n    /** PrivateFunction: _queueData\n     *  Queue outgoing data for later sending.  Also ensures that the data\n     *  is a DOMElement.\n     */\n    _queueData: function (element) {\n        if (element === null ||\n                !element.tagName ||\n                !element.childNodes) {\n            const error = new Error(\"Cannot queue non-DOMElement.\");\n            error.name = \"StropheError\";\n            throw(error);\n        }\n        this._data.push(element);\n    },\n\n    /** PrivateFunction: _sendRestart\n     *  Send an xmpp:restart stanza.\n     */\n    _sendRestart: function () {\n        this._data.push(\"restart\");\n        this._proto._sendRestart();\n        this._idleTimeout = setTimeout(() => this._onIdle(), 100);\n    },\n\n    /** Function: addTimedHandler\n     *  Add a timed handler to the connection.\n     *\n     *  This function adds a timed handler.  The provided handler will\n     *  be called every period milliseconds until it returns false,\n     *  the connection is terminated, or the handler is removed.  Handlers\n     *  that wish to continue being invoked should return true.\n     *\n     *  Because of method binding it is necessary to save the result of\n     *  this function if you wish to remove a handler with\n     *  deleteTimedHandler().\n     *\n     *  Note that user handlers are not active until authentication is\n     *  successful.\n     *\n     *  Parameters:\n     *    (Integer) period - The period of the handler.\n     *    (Function) handler - The callback function.\n     *\n     *  Returns:\n     *    A reference to the handler that can be used to remove it.\n     */\n    addTimedHandler: function (period, handler) {\n        const thand = new Strophe.TimedHandler(period, handler);\n        this.addTimeds.push(thand);\n        return thand;\n    },\n\n    /** Function: deleteTimedHandler\n     *  Delete a timed handler for a connection.\n     *\n     *  This function removes a timed handler from the connection.  The\n     *  handRef parameter is *not* the function passed to addTimedHandler(),\n     *  but is the reference returned from addTimedHandler().\n     *\n     *  Parameters:\n     *    (Strophe.TimedHandler) handRef - The handler reference.\n     */\n    deleteTimedHandler: function (handRef) {\n        // this must be done in the Idle loop so that we don't change\n        // the handlers during iteration\n        this.removeTimeds.push(handRef);\n    },\n\n    /** Function: addHandler\n     *  Add a stanza handler for the connection.\n     *\n     *  This function adds a stanza handler to the connection.  The\n     *  handler callback will be called for any stanza that matches\n     *  the parameters.  Note that if multiple parameters are supplied,\n     *  they must all match for the handler to be invoked.\n     *\n     *  The handler will receive the stanza that triggered it as its argument.\n     *  *The handler should return true if it is to be invoked again;\n     *  returning false will remove the handler after it returns.*\n     *\n     *  As a convenience, the ns parameters applies to the top level element\n     *  and also any of its immediate children.  This is primarily to make\n     *  matching /iq/query elements easy.\n     *\n     *  Options\n     *  ~~~~~~~\n     *  With the options argument, you can specify boolean flags that affect how\n     *  matches are being done.\n     *\n     *  Currently two flags exist:\n     *\n     *  - matchBareFromJid:\n     *      When set to true, the from parameter and the\n     *      from attribute on the stanza will be matched as bare JIDs instead\n     *      of full JIDs. To use this, pass {matchBareFromJid: true} as the\n     *      value of options. The default value for matchBareFromJid is false.\n     *\n     *  - ignoreNamespaceFragment:\n     *      When set to true, a fragment specified on the stanza's namespace\n     *      URL will be ignored when it's matched with the one configured for\n     *      the handler.\n     *\n     *      This means that if you register like this:\n     *      >   connection.addHandler(\n     *      >       handler,\n     *      >       'http://jabber.org/protocol/muc',\n     *      >       null, null, null, null,\n     *      >       {'ignoreNamespaceFragment': true}\n     *      >   );\n     *\n     *      Then a stanza with XML namespace of\n     *      'http://jabber.org/protocol/muc#user' will also be matched. If\n     *      'ignoreNamespaceFragment' is false, then only stanzas with\n     *      'http://jabber.org/protocol/muc' will be matched.\n     *\n     *  Deleting the handler\n     *  ~~~~~~~~~~~~~~~~~~~~\n     *  The return value should be saved if you wish to remove the handler\n     *  with deleteHandler().\n     *\n     *  Parameters:\n     *    (Function) handler - The user callback.\n     *    (String) ns - The namespace to match.\n     *    (String) name - The stanza name to match.\n     *    (String|Array) type - The stanza type (or types if an array) to match.\n     *    (String) id - The stanza id attribute to match.\n     *    (String) from - The stanza from attribute to match.\n     *    (String) options - The handler options\n     *\n     *  Returns:\n     *    A reference to the handler that can be used to remove it.\n     */\n    addHandler: function (handler, ns, name, type, id, from, options) {\n        const hand = new Strophe.Handler(handler, ns, name, type, id, from, options);\n        this.addHandlers.push(hand);\n        return hand;\n    },\n\n    /** Function: deleteHandler\n     *  Delete a stanza handler for a connection.\n     *\n     *  This function removes a stanza handler from the connection.  The\n     *  handRef parameter is *not* the function passed to addHandler(),\n     *  but is the reference returned from addHandler().\n     *\n     *  Parameters:\n     *    (Strophe.Handler) handRef - The handler reference.\n     */\n    deleteHandler: function (handRef) {\n        // this must be done in the Idle loop so that we don't change\n        // the handlers during iteration\n        this.removeHandlers.push(handRef);\n        // If a handler is being deleted while it is being added,\n        // prevent it from getting added\n        const i = this.addHandlers.indexOf(handRef);\n        if (i >= 0) {\n            this.addHandlers.splice(i, 1);\n        }\n    },\n\n    /** Function: registerSASLMechanisms\n     *\n     * Register the SASL mechanisms which will be supported by this instance of\n     * Strophe.Connection (i.e. which this XMPP client will support).\n     *\n     *  Parameters:\n     *    (Array) mechanisms - Array of objects with Strophe.SASLMechanism prototypes\n     *\n     */\n    registerSASLMechanisms: function (mechanisms) {\n        this.mechanisms = {};\n        mechanisms = mechanisms || [\n            Strophe.SASLAnonymous,\n            Strophe.SASLExternal,\n            Strophe.SASLMD5,\n            Strophe.SASLOAuthBearer,\n            Strophe.SASLXOAuth2,\n            Strophe.SASLPlain,\n            Strophe.SASLSHA1\n        ];\n        mechanisms.forEach(this.registerSASLMechanism.bind(this));\n    },\n\n    /** Function: registerSASLMechanism\n     *\n     * Register a single SASL mechanism, to be supported by this client.\n     *\n     *  Parameters:\n     *    (Object) mechanism - Object with a Strophe.SASLMechanism prototype\n     *\n     */\n    registerSASLMechanism: function (mechanism) {\n        this.mechanisms[mechanism.prototype.name] = mechanism;\n    },\n\n    /** Function: disconnect\n     *  Start the graceful disconnection process.\n     *\n     *  This function starts the disconnection process.  This process starts\n     *  by sending unavailable presence and sending BOSH body of type\n     *  terminate.  A timeout handler makes sure that disconnection happens\n     *  even if the BOSH server does not respond.\n     *  If the Connection object isn't connected, at least tries to abort all pending requests\n     *  so the connection object won't generate successful requests (which were already opened).\n     *\n     *  The user supplied connection callback will be notified of the\n     *  progress as this process happens.\n     *\n     *  Parameters:\n     *    (String) reason - The reason the disconnect is occuring.\n     */\n    disconnect: function (reason) {\n        this._changeConnectStatus(Strophe.Status.DISCONNECTING, reason);\n        Strophe.warn(\"Disconnect was called because: \" + reason);\n        if (this.connected) {\n            let pres = false;\n            this.disconnecting = true;\n            if (this.authenticated) {\n                pres = $pres({\n                    'xmlns': Strophe.NS.CLIENT,\n                    'type': 'unavailable'\n                });\n            }\n            // setup timeout handler\n            this._disconnectTimeout = this._addSysTimedHandler(\n                3000, this._onDisconnectTimeout.bind(this));\n            this._proto._disconnect(pres);\n        } else {\n            Strophe.warn(\"Disconnect was called before Strophe connected to the server\");\n            this._proto._abortAllRequests();\n            this._doDisconnect();\n        }\n    },\n\n    /** PrivateFunction: _changeConnectStatus\n     *  _Private_ helper function that makes sure plugins and the user's\n     *  callback are notified of connection status changes.\n     *\n     *  Parameters:\n     *    (Integer) status - the new connection status, one of the values\n     *      in Strophe.Status\n     *    (String) condition - the error condition or null\n     *    (XMLElement) elem - The triggering stanza.\n     */\n    _changeConnectStatus: function (status, condition, elem) {\n        // notify all plugins listening for status changes\n        for (const k in Strophe._connectionPlugins) {\n            if (Object.prototype.hasOwnProperty.call(Strophe._connectionPlugins, k)) {\n                const plugin = this[k];\n                if (plugin.statusChanged) {\n                    try {\n                        plugin.statusChanged(status, condition);\n                    } catch (err) {\n                        Strophe.error(`${k} plugin caused an exception changing status: ${err}`);\n                    }\n                }\n            }\n        }\n        // notify the user's callback\n        if (this.connect_callback) {\n            try {\n                this.connect_callback(status, condition, elem);\n            } catch (e) {\n                Strophe._handleError(e);\n                Strophe.error(`User connection callback caused an exception: ${e}`);\n            }\n        }\n    },\n\n    /** PrivateFunction: _doDisconnect\n     *  _Private_ function to disconnect.\n     *\n     *  This is the last piece of the disconnection logic.  This resets the\n     *  connection and alerts the user's connection callback.\n     */\n    _doDisconnect: function (condition) {\n        if (typeof this._idleTimeout === \"number\") {\n            clearTimeout(this._idleTimeout);\n        }\n\n        // Cancel Disconnect Timeout\n        if (this._disconnectTimeout !== null) {\n            this.deleteTimedHandler(this._disconnectTimeout);\n            this._disconnectTimeout = null;\n        }\n\n        Strophe.debug(\"_doDisconnect was called\");\n        this._proto._doDisconnect();\n\n        this.authenticated = false;\n        this.disconnecting = false;\n        this.restored = false;\n\n        // delete handlers\n        this.handlers = [];\n        this.timedHandlers = [];\n        this.removeTimeds = [];\n        this.removeHandlers = [];\n        this.addTimeds = [];\n        this.addHandlers = [];\n\n        // tell the parent we disconnected\n        this._changeConnectStatus(Strophe.Status.DISCONNECTED, condition);\n        this.connected = false;\n    },\n\n    /** PrivateFunction: _dataRecv\n     *  _Private_ handler to processes incoming data from the the connection.\n     *\n     *  Except for _connect_cb handling the initial connection request,\n     *  this function handles the incoming data for all requests.  This\n     *  function also fires stanza handlers that match each incoming\n     *  stanza.\n     *\n     *  Parameters:\n     *    (Strophe.Request) req - The request that has data ready.\n     *    (string) req - The stanza a raw string (optiona).\n     */\n    _dataRecv: function (req, raw) {\n        Strophe.debug(\"_dataRecv called\");\n        const elem = this._proto._reqToData(req);\n        if (elem === null) { return; }\n\n        if (this.xmlInput !== Strophe.Connection.prototype.xmlInput) {\n            if (elem.nodeName === this._proto.strip && elem.childNodes.length) {\n                this.xmlInput(elem.childNodes[0]);\n            } else {\n                this.xmlInput(elem);\n            }\n        }\n        if (this.rawInput !== Strophe.Connection.prototype.rawInput) {\n            if (raw) {\n                this.rawInput(raw);\n            } else {\n                this.rawInput(Strophe.serialize(elem));\n            }\n        }\n\n        // remove handlers scheduled for deletion\n        while (this.removeHandlers.length > 0) {\n            const hand = this.removeHandlers.pop();\n            const i = this.handlers.indexOf(hand);\n            if (i >= 0) {\n                this.handlers.splice(i, 1);\n            }\n        }\n\n        // add handlers scheduled for addition\n        while (this.addHandlers.length > 0) {\n            this.handlers.push(this.addHandlers.pop());\n        }\n\n        // handle graceful disconnect\n        if (this.disconnecting && this._proto._emptyQueue()) {\n            this._doDisconnect();\n            return;\n        }\n\n        const type = elem.getAttribute(\"type\");\n        if (type !== null && type === \"terminate\") {\n            // Don't process stanzas that come in after disconnect\n            if (this.disconnecting) {\n                return;\n            }\n            // an error occurred\n            let cond = elem.getAttribute(\"condition\");\n            const conflict = elem.getElementsByTagName(\"conflict\");\n            if (cond !== null) {\n                if (cond === \"remote-stream-error\" && conflict.length > 0) {\n                    cond = \"conflict\";\n                }\n                this._changeConnectStatus(Strophe.Status.CONNFAIL, cond);\n            } else {\n                this._changeConnectStatus(\n                    Strophe.Status.CONNFAIL,\n                    Strophe.ErrorCondition.UNKOWN_REASON\n                );\n            }\n            this._doDisconnect(cond);\n            return;\n        }\n\n        // send each incoming stanza through the handler chain\n        Strophe.forEachChild(elem, null, child => {\n            // process handlers\n            const newList = this.handlers;\n            this.handlers = [];\n            for (let i=0; i < newList.length; i++) {\n                const hand = newList[i];\n                // encapsulate 'handler.run' not to lose the whole handler list if\n                // one of the handlers throws an exception\n                try {\n                    if (hand.isMatch(child) &&\n                        (this.authenticated || !hand.user)) {\n                        if (hand.run(child)) {\n                            this.handlers.push(hand);\n                        }\n                    } else {\n                        this.handlers.push(hand);\n                    }\n                } catch(e) {\n                    // if the handler throws an exception, we consider it as false\n                    Strophe.warn('Removing Strophe handlers due to uncaught exception: '+e.message);\n                }\n            }\n        });\n    },\n\n\n    /** Attribute: mechanisms\n     *  SASL Mechanisms available for Connection.\n     */\n    mechanisms: {},\n\n    /** PrivateFunction: _connect_cb\n     *  _Private_ handler for initial connection request.\n     *\n     *  This handler is used to process the initial connection request\n     *  response from the BOSH server. It is used to set up authentication\n     *  handlers and start the authentication process.\n     *\n     *  SASL authentication will be attempted if available, otherwise\n     *  the code will fall back to legacy authentication.\n     *\n     *  Parameters:\n     *    (Strophe.Request) req - The current request.\n     *    (Function) _callback - low level (xmpp) connect callback function.\n     *      Useful for plugins with their own xmpp connect callback (when they\n     *      want to do something special).\n     */\n    _connect_cb: function (req, _callback, raw) {\n        Strophe.debug(\"_connect_cb was called\");\n        this.connected = true;\n\n        let bodyWrap;\n        try {\n            bodyWrap = this._proto._reqToData(req);\n        } catch (e) {\n            if (e.name !== Strophe.ErrorCondition.BAD_FORMAT) { throw e; }\n            this._changeConnectStatus(\n                Strophe.Status.CONNFAIL,\n                Strophe.ErrorCondition.BAD_FORMAT\n            );\n            this._doDisconnect(Strophe.ErrorCondition.BAD_FORMAT);\n        }\n        if (!bodyWrap) { return; }\n\n        if (this.xmlInput !== Strophe.Connection.prototype.xmlInput) {\n            if (bodyWrap.nodeName === this._proto.strip && bodyWrap.childNodes.length) {\n                this.xmlInput(bodyWrap.childNodes[0]);\n            } else {\n                this.xmlInput(bodyWrap);\n            }\n        }\n        if (this.rawInput !== Strophe.Connection.prototype.rawInput) {\n            if (raw) {\n                this.rawInput(raw);\n            } else {\n                this.rawInput(Strophe.serialize(bodyWrap));\n            }\n        }\n\n        const conncheck = this._proto._connect_cb(bodyWrap);\n        if (conncheck === Strophe.Status.CONNFAIL) {\n            return;\n        }\n\n        // Check for the stream:features tag\n        let hasFeatures;\n        if (bodyWrap.getElementsByTagNameNS) {\n            hasFeatures = bodyWrap.getElementsByTagNameNS(Strophe.NS.STREAM, \"features\").length > 0;\n        } else {\n            hasFeatures = bodyWrap.getElementsByTagName(\"stream:features\").length > 0 ||\n                            bodyWrap.getElementsByTagName(\"features\").length > 0;\n        }\n        if (!hasFeatures) {\n            this._proto._no_auth_received(_callback);\n            return;\n        }\n\n        const matched = [];\n        const mechanisms = bodyWrap.getElementsByTagName(\"mechanism\");\n        if (mechanisms.length > 0) {\n            for (let i=0; i < mechanisms.length; i++) {\n                const mech = Strophe.getText(mechanisms[i]);\n                if (this.mechanisms[mech]) matched.push(this.mechanisms[mech]);\n            }\n        }\n        if (matched.length === 0) {\n            if (bodyWrap.getElementsByTagName(\"auth\").length === 0) {\n                // There are no matching SASL mechanisms and also no legacy\n                // auth available.\n                this._proto._no_auth_received(_callback);\n                return;\n            }\n        }\n        if (this.do_authentication !== false) {\n            this.authenticate(matched);\n        }\n    },\n\n    /** Function: sortMechanismsByPriority\n     *\n     *  Sorts an array of objects with prototype SASLMechanism according to\n     *  their priorities.\n     *\n     *  Parameters:\n     *    (Array) mechanisms - Array of SASL mechanisms.\n     *\n     */\n    sortMechanismsByPriority: function (mechanisms) {\n        // Sorting mechanisms according to priority.\n        for (let i=0; i < mechanisms.length - 1; ++i) {\n            let higher = i;\n            for (let j=i + 1; j < mechanisms.length; ++j) {\n                if (mechanisms[j].prototype.priority > mechanisms[higher].prototype.priority) {\n                    higher = j;\n                }\n            }\n            if (higher !== i) {\n                const swap = mechanisms[i];\n                mechanisms[i] = mechanisms[higher];\n                mechanisms[higher] = swap;\n            }\n        }\n        return mechanisms;\n    },\n\n    /** PrivateFunction: _attemptSASLAuth\n     *\n     *  Iterate through an array of SASL mechanisms and attempt authentication\n     *  with the highest priority (enabled) mechanism.\n     *\n     *  Parameters:\n     *    (Array) mechanisms - Array of SASL mechanisms.\n     *\n     *  Returns:\n     *    (Boolean) mechanism_found - true or false, depending on whether a\n     *          valid SASL mechanism was found with which authentication could be\n     *          started.\n     */\n    _attemptSASLAuth: function (mechanisms) {\n        mechanisms = this.sortMechanismsByPriority(mechanisms || []);\n        let mechanism_found = false;\n        for (let i=0; i < mechanisms.length; ++i) {\n            if (!mechanisms[i].prototype.test(this)) {\n                continue;\n            }\n            this._sasl_success_handler = this._addSysHandler(\n                this._sasl_success_cb.bind(this), null,\n                \"success\", null, null);\n            this._sasl_failure_handler = this._addSysHandler(\n                this._sasl_failure_cb.bind(this), null,\n                \"failure\", null, null);\n            this._sasl_challenge_handler = this._addSysHandler(\n                this._sasl_challenge_cb.bind(this), null,\n                \"challenge\", null, null);\n\n            this._sasl_mechanism = new mechanisms[i]();\n            this._sasl_mechanism.onStart(this);\n\n            const request_auth_exchange = $build(\"auth\", {\n                'xmlns': Strophe.NS.SASL,\n                'mechanism': this._sasl_mechanism.name\n            });\n            if (this._sasl_mechanism.isClientFirst) {\n                const response = this._sasl_mechanism.onChallenge(this, null);\n                request_auth_exchange.t(btoa(response));\n            }\n            this.send(request_auth_exchange.tree());\n            mechanism_found = true;\n            break;\n        }\n        return mechanism_found;\n    },\n\n    /** PrivateFunction: _attemptLegacyAuth\n     *\n     *  Attempt legacy (i.e. non-SASL) authentication.\n     *\n     */\n    _attemptLegacyAuth: function () {\n        if (Strophe.getNodeFromJid(this.jid) === null) {\n            // we don't have a node, which is required for non-anonymous\n            // client connections\n            this._changeConnectStatus(\n                Strophe.Status.CONNFAIL,\n                Strophe.ErrorCondition.MISSING_JID_NODE\n            );\n            this.disconnect(Strophe.ErrorCondition.MISSING_JID_NODE);\n        } else {\n            // Fall back to legacy authentication\n            this._changeConnectStatus(Strophe.Status.AUTHENTICATING, null);\n            this._addSysHandler(\n                this._auth1_cb.bind(this),\n                null, null, null, \"_auth_1\"\n            );\n            this.send($iq({\n                    'type': \"get\",\n                    'to': this.domain,\n                    'id': \"_auth_1\"\n                }).c(\"query\", {xmlns: Strophe.NS.AUTH})\n                .c(\"username\", {}).t(Strophe.getNodeFromJid(this.jid))\n                .tree());\n        }\n    },\n\n    /** Function: authenticate\n     * Set up authentication\n     *\n     *  Continues the initial connection request by setting up authentication\n     *  handlers and starting the authentication process.\n     *\n     *  SASL authentication will be attempted if available, otherwise\n     *  the code will fall back to legacy authentication.\n     *\n     *  Parameters:\n     *    (Array) matched - Array of SASL mechanisms supported.\n     *\n     */\n    authenticate: function (matched) {\n        if (!this._attemptSASLAuth(matched)) {\n            this._attemptLegacyAuth();\n        }\n    },\n\n    /** PrivateFunction: _sasl_challenge_cb\n     *  _Private_ handler for the SASL challenge\n     *\n     */\n    _sasl_challenge_cb: function(elem) {\n      const challenge = atob(Strophe.getText(elem));\n      const response = this._sasl_mechanism.onChallenge(this, challenge);\n      const stanza = $build('response', {'xmlns': Strophe.NS.SASL});\n      if (response !== \"\") {\n        stanza.t(btoa(response));\n      }\n      this.send(stanza.tree());\n      return true;\n    },\n\n    /** PrivateFunction: _auth1_cb\n     *  _Private_ handler for legacy authentication.\n     *\n     *  This handler is called in response to the initial <iq type='get'/>\n     *  for legacy authentication.  It builds an authentication <iq/> and\n     *  sends it, creating a handler (calling back to _auth2_cb()) to\n     *  handle the result\n     *\n     *  Parameters:\n     *    (XMLElement) elem - The stanza that triggered the callback.\n     *\n     *  Returns:\n     *    false to remove the handler.\n     */\n    /* jshint unused:false */\n    _auth1_cb: function (elem) {\n        // build plaintext auth iq\n        const iq = $iq({type: \"set\", id: \"_auth_2\"})\n            .c('query', {xmlns: Strophe.NS.AUTH})\n            .c('username', {}).t(Strophe.getNodeFromJid(this.jid))\n            .up()\n            .c('password').t(this.pass);\n\n        if (!Strophe.getResourceFromJid(this.jid)) {\n            // since the user has not supplied a resource, we pick\n            // a default one here.  unlike other auth methods, the server\n            // cannot do this for us.\n            this.jid = Strophe.getBareJidFromJid(this.jid) + '/strophe';\n        }\n        iq.up().c('resource', {}).t(Strophe.getResourceFromJid(this.jid));\n\n        this._addSysHandler(this._auth2_cb.bind(this), null, null, null, \"_auth_2\");\n        this.send(iq.tree());\n        return false;\n    },\n    /* jshint unused:true */\n\n    /** PrivateFunction: _sasl_success_cb\n     *  _Private_ handler for succesful SASL authentication.\n     *\n     *  Parameters:\n     *    (XMLElement) elem - The matching stanza.\n     *\n     *  Returns:\n     *    false to remove the handler.\n     */\n    _sasl_success_cb: function (elem) {\n        if (this._sasl_data[\"server-signature\"]) {\n            let serverSignature;\n            const success = atob(Strophe.getText(elem));\n            const attribMatch = /([a-z]+)=([^,]+)(,|$)/;\n            const matches = success.match(attribMatch);\n            if (matches[1] === \"v\") {\n                serverSignature = matches[2];\n            }\n            if (serverSignature !== this._sasl_data[\"server-signature\"]) {\n                // remove old handlers\n                this.deleteHandler(this._sasl_failure_handler);\n                this._sasl_failure_handler = null;\n                if (this._sasl_challenge_handler) {\n                    this.deleteHandler(this._sasl_challenge_handler);\n                    this._sasl_challenge_handler = null;\n                }\n                this._sasl_data = {};\n                return this._sasl_failure_cb(null);\n            }\n        }\n        Strophe.info(\"SASL authentication succeeded.\");\n\n        if (this._sasl_mechanism) {\n            this._sasl_mechanism.onSuccess();\n        }\n        // remove old handlers\n        this.deleteHandler(this._sasl_failure_handler);\n        this._sasl_failure_handler = null;\n        if (this._sasl_challenge_handler) {\n            this.deleteHandler(this._sasl_challenge_handler);\n            this._sasl_challenge_handler = null;\n        }\n        const streamfeature_handlers = [];\n        const wrapper = (handlers, elem) => {\n            while (handlers.length) {\n                this.deleteHandler(handlers.pop());\n            }\n            this._sasl_auth1_cb(elem);\n            return false;\n        };\n        streamfeature_handlers.push(\n            this._addSysHandler(elem => wrapper(streamfeature_handlers, elem),\n            null, \"stream:features\", null, null)\n        );\n\n        streamfeature_handlers.push(\n            this._addSysHandler(elem => wrapper(streamfeature_handlers, elem),\n            Strophe.NS.STREAM, \"features\", null, null)\n        );\n\n        // we must send an xmpp:restart now\n        this._sendRestart();\n        return false;\n    },\n\n    /** PrivateFunction: _sasl_auth1_cb\n     *  _Private_ handler to start stream binding.\n     *\n     *  Parameters:\n     *    (XMLElement) elem - The matching stanza.\n     *\n     *  Returns:\n     *    false to remove the handler.\n     */\n    _sasl_auth1_cb: function (elem) {\n        // save stream:features for future usage\n        this.features = elem;\n        for (let i=0; i < elem.childNodes.length; i++) {\n            const child = elem.childNodes[i];\n            if (child.nodeName === 'bind') {\n                this.do_bind = true;\n            }\n            if (child.nodeName === 'session') {\n                this.do_session = true;\n            }\n        }\n\n        if (!this.do_bind) {\n            this._changeConnectStatus(Strophe.Status.AUTHFAIL, null);\n            return false;\n        } else {\n            this._addSysHandler(this._sasl_bind_cb.bind(this), null, null,\n                                null, \"_bind_auth_2\");\n\n            const resource = Strophe.getResourceFromJid(this.jid);\n            if (resource) {\n                this.send($iq({type: \"set\", id: \"_bind_auth_2\"})\n                          .c('bind', {xmlns: Strophe.NS.BIND})\n                          .c('resource', {}).t(resource).tree());\n            } else {\n                this.send($iq({type: \"set\", id: \"_bind_auth_2\"})\n                          .c('bind', {xmlns: Strophe.NS.BIND})\n                          .tree());\n            }\n        }\n        return false;\n    },\n\n    /** PrivateFunction: _sasl_bind_cb\n     *  _Private_ handler for binding result and session start.\n     *\n     *  Parameters:\n     *    (XMLElement) elem - The matching stanza.\n     *\n     *  Returns:\n     *    false to remove the handler.\n     */\n    _sasl_bind_cb: function (elem) {\n        if (elem.getAttribute(\"type\") === \"error\") {\n            Strophe.warn(\"SASL binding failed.\");\n            const conflict = elem.getElementsByTagName(\"conflict\");\n            let condition;\n            if (conflict.length > 0) {\n                condition = Strophe.ErrorCondition.CONFLICT;\n            }\n            this._changeConnectStatus(Strophe.Status.AUTHFAIL, condition, elem);\n            return false;\n        }\n\n        // TODO - need to grab errors\n        const bind = elem.getElementsByTagName(\"bind\");\n        if (bind.length > 0) {\n            const jidNode = bind[0].getElementsByTagName(\"jid\");\n            if (jidNode.length > 0) {\n                this.jid = Strophe.getText(jidNode[0]);\n\n                if (this.do_session) {\n                    this._addSysHandler(this._sasl_session_cb.bind(this),\n                                        null, null, null, \"_session_auth_2\");\n\n                    this.send($iq({type: \"set\", id: \"_session_auth_2\"})\n                                  .c('session', {xmlns: Strophe.NS.SESSION})\n                                  .tree());\n                } else {\n                    this.authenticated = true;\n                    this._changeConnectStatus(Strophe.Status.CONNECTED, null);\n                }\n            }\n        } else {\n            Strophe.warn(\"SASL binding failed.\");\n            this._changeConnectStatus(Strophe.Status.AUTHFAIL, null, elem);\n            return false;\n        }\n    },\n\n    /** PrivateFunction: _sasl_session_cb\n     *  _Private_ handler to finish successful SASL connection.\n     *\n     *  This sets Connection.authenticated to true on success, which\n     *  starts the processing of user handlers.\n     *\n     *  Parameters:\n     *    (XMLElement) elem - The matching stanza.\n     *\n     *  Returns:\n     *    false to remove the handler.\n     */\n    _sasl_session_cb: function (elem) {\n        if (elem.getAttribute(\"type\") === \"result\") {\n            this.authenticated = true;\n            this._changeConnectStatus(Strophe.Status.CONNECTED, null);\n        } else if (elem.getAttribute(\"type\") === \"error\") {\n            Strophe.warn(\"Session creation failed.\");\n            this._changeConnectStatus(Strophe.Status.AUTHFAIL, null, elem);\n            return false;\n        }\n        return false;\n    },\n\n    /** PrivateFunction: _sasl_failure_cb\n     *  _Private_ handler for SASL authentication failure.\n     *\n     *  Parameters:\n     *    (XMLElement) elem - The matching stanza.\n     *\n     *  Returns:\n     *    false to remove the handler.\n     */\n    /* jshint unused:false */\n    _sasl_failure_cb: function (elem) {\n        // delete unneeded handlers\n        if (this._sasl_success_handler) {\n            this.deleteHandler(this._sasl_success_handler);\n            this._sasl_success_handler = null;\n        }\n        if (this._sasl_challenge_handler) {\n            this.deleteHandler(this._sasl_challenge_handler);\n            this._sasl_challenge_handler = null;\n        }\n\n        if(this._sasl_mechanism)\n          this._sasl_mechanism.onFailure();\n        this._changeConnectStatus(Strophe.Status.AUTHFAIL, null, elem);\n        return false;\n    },\n    /* jshint unused:true */\n\n    /** PrivateFunction: _auth2_cb\n     *  _Private_ handler to finish legacy authentication.\n     *\n     *  This handler is called when the result from the jabber:iq:auth\n     *  <iq/> stanza is returned.\n     *\n     *  Parameters:\n     *    (XMLElement) elem - The stanza that triggered the callback.\n     *\n     *  Returns:\n     *    false to remove the handler.\n     */\n    _auth2_cb: function (elem) {\n        if (elem.getAttribute(\"type\") === \"result\") {\n            this.authenticated = true;\n            this._changeConnectStatus(Strophe.Status.CONNECTED, null);\n        } else if (elem.getAttribute(\"type\") === \"error\") {\n            this._changeConnectStatus(Strophe.Status.AUTHFAIL, null, elem);\n            this.disconnect('authentication failed');\n        }\n        return false;\n    },\n\n    /** PrivateFunction: _addSysTimedHandler\n     *  _Private_ function to add a system level timed handler.\n     *\n     *  This function is used to add a Strophe.TimedHandler for the\n     *  library code.  System timed handlers are allowed to run before\n     *  authentication is complete.\n     *\n     *  Parameters:\n     *    (Integer) period - The period of the handler.\n     *    (Function) handler - The callback function.\n     */\n    _addSysTimedHandler: function (period, handler) {\n        const thand = new Strophe.TimedHandler(period, handler);\n        thand.user = false;\n        this.addTimeds.push(thand);\n        return thand;\n    },\n\n    /** PrivateFunction: _addSysHandler\n     *  _Private_ function to add a system level stanza handler.\n     *\n     *  This function is used to add a Strophe.Handler for the\n     *  library code.  System stanza handlers are allowed to run before\n     *  authentication is complete.\n     *\n     *  Parameters:\n     *    (Function) handler - The callback function.\n     *    (String) ns - The namespace to match.\n     *    (String) name - The stanza name to match.\n     *    (String) type - The stanza type attribute to match.\n     *    (String) id - The stanza id attribute to match.\n     */\n    _addSysHandler: function (handler, ns, name, type, id) {\n        const hand = new Strophe.Handler(handler, ns, name, type, id);\n        hand.user = false;\n        this.addHandlers.push(hand);\n        return hand;\n    },\n\n    /** PrivateFunction: _onDisconnectTimeout\n     *  _Private_ timeout handler for handling non-graceful disconnection.\n     *\n     *  If the graceful disconnect process does not complete within the\n     *  time allotted, this handler finishes the disconnect anyway.\n     *\n     *  Returns:\n     *    false to remove the handler.\n     */\n    _onDisconnectTimeout: function () {\n        Strophe.debug(\"_onDisconnectTimeout was called\");\n        this._changeConnectStatus(Strophe.Status.CONNTIMEOUT, null);\n        this._proto._onDisconnectTimeout();\n        // actually disconnect\n        this._doDisconnect();\n        return false;\n    },\n\n    /** PrivateFunction: _onIdle\n     *  _Private_ handler to process events during idle cycle.\n     *\n     *  This handler is called every 100ms to fire timed handlers that\n     *  are ready and keep poll requests going.\n     */\n    _onIdle: function () {\n        // add timed handlers scheduled for addition\n        // NOTE: we add before remove in the case a timed handler is\n        // added and then deleted before the next _onIdle() call.\n        while (this.addTimeds.length > 0) {\n            this.timedHandlers.push(this.addTimeds.pop());\n        }\n\n        // remove timed handlers that have been scheduled for deletion\n        while (this.removeTimeds.length > 0) {\n            const thand = this.removeTimeds.pop();\n            const i = this.timedHandlers.indexOf(thand);\n            if (i >= 0) {\n                this.timedHandlers.splice(i, 1);\n            }\n        }\n\n        // call ready timed handlers\n        const now = new Date().getTime();\n        const newList = [];\n        for (let i=0; i < this.timedHandlers.length; i++) {\n            const thand = this.timedHandlers[i];\n            if (this.authenticated || !thand.user) {\n                const since = thand.lastCalled + thand.period;\n                if (since - now <= 0) {\n                    if (thand.run()) {\n                        newList.push(thand);\n                    }\n                } else {\n                    newList.push(thand);\n                }\n            }\n        }\n        this.timedHandlers = newList;\n        clearTimeout(this._idleTimeout);\n        this._proto._onIdle();\n\n        // reactivate the timer only if connected\n        if (this.connected) {\n            this._idleTimeout = setTimeout(() => this._onIdle(), 100);\n        }\n    }\n};\n\n/** Class: Strophe.SASLMechanism\n *\n *  encapsulates SASL authentication mechanisms.\n *\n *  User code may override the priority for each mechanism or disable it completely.\n *  See <priority> for information about changing priority and <test> for informatian on\n *  how to disable a mechanism.\n *\n *  By default, all mechanisms are enabled and the priorities are\n *\n *      OAUTHBEARER - 60\n *      SCRAM-SHA1 - 50\n *      DIGEST-MD5 - 40\n *      PLAIN - 30\n *      ANONYMOUS - 20\n *      EXTERNAL - 10\n *\n *  See: Strophe.Connection.addSupportedSASLMechanisms\n */\n\n/**\n * PrivateConstructor: Strophe.SASLMechanism\n * SASL auth mechanism abstraction.\n *\n *  Parameters:\n *    (String) name - SASL Mechanism name.\n *    (Boolean) isClientFirst - If client should send response first without challenge.\n *    (Number) priority - Priority.\n *\n *  Returns:\n *    A new Strophe.SASLMechanism object.\n */\nStrophe.SASLMechanism = function(name, isClientFirst, priority) {\n  /** PrivateVariable: name\n   *  Mechanism name.\n   */\n  this.name = name;\n  /** PrivateVariable: isClientFirst\n   *  If client sends response without initial server challenge.\n   */\n  this.isClientFirst = isClientFirst;\n  /** Variable: priority\n   *  Determines which <SASLMechanism> is chosen for authentication (Higher is better).\n   *  Users may override this to prioritize mechanisms differently.\n   *\n   *  In the default configuration the priorities are\n   *\n   *  SCRAM-SHA1 - 40\n   *  DIGEST-MD5 - 30\n   *  Plain - 20\n   *\n   *  Example: (This will cause Strophe to choose the mechanism that the server sent first)\n   *\n   *  > Strophe.SASLMD5.priority = Strophe.SASLSHA1.priority;\n   *\n   *  See <SASL mechanisms> for a list of available mechanisms.\n   *\n   */\n  this.priority = priority;\n};\n\nStrophe.SASLMechanism.prototype = {\n    /**\n     *  Function: test\n     *  Checks if mechanism able to run.\n     *  To disable a mechanism, make this return false;\n     *\n     *  To disable plain authentication run\n     *  > Strophe.SASLPlain.test = function() {\n     *  >   return false;\n     *  > }\n     *\n     *  See <SASL mechanisms> for a list of available mechanisms.\n     *\n     *  Parameters:\n     *    (Strophe.Connection) connection - Target Connection.\n     *\n     *  Returns:\n     *    (Boolean) If mechanism was able to run.\n     */\n    /* jshint unused:false */\n    test: function(connection) {\n        return true;\n    },\n    /* jshint unused:true */\n\n    /** PrivateFunction: onStart\n     *  Called before starting mechanism on some connection.\n     *\n     *  Parameters:\n     *    (Strophe.Connection) connection - Target Connection.\n     */\n    onStart: function(connection) {\n        this._connection = connection;\n    },\n\n    /** PrivateFunction: onChallenge\n     *  Called by protocol implementation on incoming challenge. If client is\n     *  first (isClientFirst === true) challenge will be null on the first call.\n     *\n     *  Parameters:\n     *    (Strophe.Connection) connection - Target Connection.\n     *    (String) challenge - current challenge to handle.\n     *\n     *  Returns:\n     *    (String) Mechanism response.\n     */\n    /* jshint unused:false */\n    onChallenge: function (connection, challenge) {\n        throw new Error(\"You should implement challenge handling!\");\n    },\n    /* jshint unused:true */\n\n    /** PrivateFunction: onFailure\n     *  Protocol informs mechanism implementation about SASL failure.\n     */\n    onFailure: function() {\n        this._connection = null;\n    },\n\n    /** PrivateFunction: onSuccess\n     *  Protocol informs mechanism implementation about SASL success.\n     */\n    onSuccess: function() {\n        this._connection = null;\n    }\n};\n\n/** Constants: SASL mechanisms\n *  Available authentication mechanisms\n *\n *  Strophe.SASLAnonymous - SASL ANONYMOUS authentication.\n *  Strophe.SASLPlain - SASL PLAIN authentication.\n *  Strophe.SASLMD5 - SASL DIGEST-MD5 authentication\n *  Strophe.SASLSHA1 - SASL SCRAM-SHA1 authentication\n *  Strophe.SASLOAuthBearer - SASL OAuth Bearer authentication\n *  Strophe.SASLExternal - SASL EXTERNAL authentication\n *  Strophe.SASLXOAuth2 - SASL X-OAuth2 authentication\n */\n\n// Building SASL callbacks\n\n/** PrivateConstructor: SASLAnonymous\n *  SASL ANONYMOUS authentication.\n */\nStrophe.SASLAnonymous = function() {};\nStrophe.SASLAnonymous.prototype = new Strophe.SASLMechanism(\"ANONYMOUS\", false, 20);\n\nStrophe.SASLAnonymous.prototype.test = function(connection) {\n    return connection.authcid === null;\n};\n\n\n/** PrivateConstructor: SASLPlain\n *  SASL PLAIN authentication.\n */\nStrophe.SASLPlain = function() {};\nStrophe.SASLPlain.prototype = new Strophe.SASLMechanism(\"PLAIN\", true, 50);\n\nStrophe.SASLPlain.prototype.test = function(connection) {\n    return connection.authcid !== null;\n};\n\nStrophe.SASLPlain.prototype.onChallenge = function(connection) {\n    let auth_str = connection.authzid;\n    auth_str = auth_str + \"\\u0000\";\n    auth_str = auth_str + connection.authcid;\n    auth_str = auth_str + \"\\u0000\";\n    auth_str = auth_str + connection.pass;\n    return utils.utf16to8(auth_str);\n};\n\n\n/** PrivateConstructor: SASLSHA1\n *  SASL SCRAM SHA 1 authentication.\n */\nStrophe.SASLSHA1 = function() {};\nStrophe.SASLSHA1.prototype = new Strophe.SASLMechanism(\"SCRAM-SHA-1\", true, 70);\n\nStrophe.SASLSHA1.prototype.test = function(connection) {\n    return connection.authcid !== null;\n};\n\nStrophe.SASLSHA1.prototype.onChallenge = function(connection, challenge, test_cnonce) {\n    const cnonce = test_cnonce || MD5.hexdigest(\"\" + (Math.random() * 1234567890));\n    let auth_str = \"n=\" + utils.utf16to8(connection.authcid);\n    auth_str += \",r=\";\n    auth_str += cnonce;\n    connection._sasl_data.cnonce = cnonce;\n    connection._sasl_data[\"client-first-message-bare\"] = auth_str;\n    auth_str = \"n,,\" + auth_str;\n\n    this.onChallenge = (connection, challenge) => {\n        let nonce, salt, iter, Hi, U, U_old, i, k;\n        let responseText = \"c=biws,\";\n        let authMessage = `${connection._sasl_data[\"client-first-message-bare\"]},${challenge},`;\n        const cnonce = connection._sasl_data.cnonce;\n        const attribMatch = /([a-z]+)=([^,]+)(,|$)/;\n\n        while (challenge.match(attribMatch)) {\n            const matches = challenge.match(attribMatch);\n            challenge = challenge.replace(matches[0], \"\");\n            switch (matches[1]) {\n            case \"r\":\n                nonce = matches[2];\n                break;\n            case \"s\":\n                salt = matches[2];\n                break;\n            case \"i\":\n                iter = matches[2];\n                break;\n            }\n        }\n\n        if (nonce.substr(0, cnonce.length) !== cnonce) {\n            connection._sasl_data = {};\n            return connection._sasl_failure_cb();\n        }\n\n        responseText += \"r=\" + nonce;\n        authMessage += responseText;\n\n        salt = atob(salt);\n        salt += \"\\x00\\x00\\x00\\x01\";\n\n        const pass = utils.utf16to8(connection.pass);\n        Hi = U_old = SHA1.core_hmac_sha1(pass, salt);\n        for (i=1; i<iter; i++) {\n            U = SHA1.core_hmac_sha1(pass, SHA1.binb2str(U_old));\n            for (k = 0; k < 5; k++) {\n                Hi[k] ^= U[k];\n            }\n            U_old = U;\n        }\n        Hi = SHA1.binb2str(Hi);\n\n        const clientKey = SHA1.core_hmac_sha1(Hi, \"Client Key\");\n        const serverKey = SHA1.str_hmac_sha1(Hi, \"Server Key\");\n        const clientSignature = SHA1.core_hmac_sha1(SHA1.str_sha1(SHA1.binb2str(clientKey)), authMessage);\n        connection._sasl_data[\"server-signature\"] = SHA1.b64_hmac_sha1(serverKey, authMessage);\n\n        for (k = 0; k < 5; k++) {\n            clientKey[k] ^= clientSignature[k];\n        }\n        responseText += \",p=\" + btoa(SHA1.binb2str(clientKey));\n        return responseText;\n    }\n    return auth_str;\n};\n\n\n/** PrivateConstructor: SASLMD5\n *  SASL DIGEST MD5 authentication.\n */\nStrophe.SASLMD5 = function() {};\nStrophe.SASLMD5.prototype = new Strophe.SASLMechanism(\"DIGEST-MD5\", false, 60);\n\nStrophe.SASLMD5.prototype.test = function(connection) {\n    return connection.authcid !== null;\n};\n\n/** PrivateFunction: _quote\n *  _Private_ utility function to backslash escape and quote strings.\n *\n *  Parameters:\n *    (String) str - The string to be quoted.\n *\n *  Returns:\n *    quoted string\n */\nStrophe.SASLMD5.prototype._quote = function (str) {\n    return '\"' + str.replace(/\\\\/g, \"\\\\\\\\\").replace(/\"/g, '\\\\\"') + '\"';\n    //\" end string workaround for emacs\n};\n\nStrophe.SASLMD5.prototype.onChallenge = function(connection, challenge, test_cnonce) {\n    const attribMatch = /([a-z]+)=(\"[^\"]+\"|[^,\"]+)(?:,|$)/;\n    const cnonce = test_cnonce || MD5.hexdigest(\"\" + (Math.random() * 1234567890));\n    let realm = \"\";\n    let host = null;\n    let nonce = \"\";\n    let qop = \"\";\n\n    while (challenge.match(attribMatch)) {\n        const matches = challenge.match(attribMatch);\n        challenge = challenge.replace(matches[0], \"\");\n        matches[2] = matches[2].replace(/^\"(.+)\"$/, \"$1\");\n        switch (matches[1]) {\n        case \"realm\":\n           realm = matches[2];\n           break;\n        case \"nonce\":\n           nonce = matches[2];\n           break;\n        case \"qop\":\n           qop = matches[2];\n           break;\n        case \"host\":\n           host = matches[2];\n           break;\n        }\n    }\n    let digest_uri = connection.servtype + \"/\" + connection.domain;\n    if (host !== null) {\n        digest_uri = digest_uri + \"/\" + host;\n    }\n\n    const cred = utils.utf16to8(connection.authcid + \":\" + realm + \":\" + this._connection.pass);\n    const A1 = MD5.hash(cred) + \":\" + nonce + \":\" + cnonce;\n    const A2 = 'AUTHENTICATE:' + digest_uri;\n\n    let responseText = \"\";\n    responseText += 'charset=utf-8,';\n    responseText += 'username=' + this._quote(utils.utf16to8(connection.authcid)) + ',';\n    responseText += 'realm=' + this._quote(realm) + ',';\n    responseText += 'nonce=' + this._quote(nonce) + ',';\n    responseText += 'nc=00000001,';\n    responseText += 'cnonce=' + this._quote(cnonce) + ',';\n    responseText += 'digest-uri=' + this._quote(digest_uri) + ',';\n    responseText += 'response=' + MD5.hexdigest(MD5.hexdigest(A1) + \":\" +\n                                                nonce + \":00000001:\" +\n                                                cnonce + \":auth:\" +\n                                                MD5.hexdigest(A2)) + \",\";\n    responseText += 'qop=auth';\n    this.onChallenge = () => \"\";\n    return responseText;\n};\n\n\n/** PrivateConstructor: SASLOAuthBearer\n *  SASL OAuth Bearer authentication.\n */\nStrophe.SASLOAuthBearer = function() {};\nStrophe.SASLOAuthBearer.prototype = new Strophe.SASLMechanism(\"OAUTHBEARER\", true, 40);\n\nStrophe.SASLOAuthBearer.prototype.test = function(connection) {\n    return connection.pass !== null;\n};\n\nStrophe.SASLOAuthBearer.prototype.onChallenge = function(connection) {\n    let auth_str = 'n,';\n    if (connection.authcid !== null) {\n        auth_str = auth_str + 'a=' + connection.authzid;\n    }\n    auth_str = auth_str + ',';\n    auth_str = auth_str + \"\\u0001\";\n    auth_str = auth_str + 'auth=Bearer ';\n    auth_str = auth_str + connection.pass;\n    auth_str = auth_str + \"\\u0001\";\n    auth_str = auth_str + \"\\u0001\";\n    return utils.utf16to8(auth_str);\n};\n\n\n/** PrivateConstructor: SASLExternal\n *  SASL EXTERNAL authentication.\n *\n *  The EXTERNAL mechanism allows a client to request the server to use\n *  credentials established by means external to the mechanism to\n *  authenticate the client. The external means may be, for instance,\n *  TLS services.\n */\nStrophe.SASLExternal = function() {};\nStrophe.SASLExternal.prototype = new Strophe.SASLMechanism(\"EXTERNAL\", true, 10);\n\nStrophe.SASLExternal.prototype.onChallenge = function(connection) {\n    /** According to XEP-178, an authzid SHOULD NOT be presented when the\n     * authcid contained or implied in the client certificate is the JID (i.e.\n     * authzid) with which the user wants to log in as.\n     *\n     * To NOT send the authzid, the user should therefore set the authcid equal\n     * to the JID when instantiating a new Strophe.Connection object.\n     */\n    return connection.authcid === connection.authzid ? '' : connection.authzid;\n};\n\n\n/** PrivateConstructor: SASLXOAuth2\n *  SASL X-OAuth2 authentication.\n */\nStrophe.SASLXOAuth2 = function () { };\nStrophe.SASLXOAuth2.prototype = new Strophe.SASLMechanism(\"X-OAUTH2\", true, 30);\n\nStrophe.SASLXOAuth2.prototype.test = function (connection) {\n    return connection.pass !== null;\n};\n\nStrophe.SASLXOAuth2.prototype.onChallenge = function (connection) {\n    let auth_str = '\\u0000';\n    if (connection.authcid !== null) {\n        auth_str = auth_str + connection.authzid;\n    }\n    auth_str = auth_str + \"\\u0000\";\n    auth_str = auth_str + connection.pass;\n    return utils.utf16to8(auth_str);\n};\n\nexport { Strophe, $build, $iq, $msg, $pres, SHA1, MD5 };\n\nexport default {\n    'Strophe':         Strophe,\n    '$build':          $build,\n    '$iq':             $iq,\n    '$msg':            $msg,\n    '$pres':           $pres,\n    'SHA1':            SHA1,\n    'MD5':             MD5,\n    'b64_hmac_sha1':   SHA1.b64_hmac_sha1,\n    'b64_sha1':        SHA1.b64_sha1,\n    'str_hmac_sha1':   SHA1.str_hmac_sha1,\n    'str_sha1':        SHA1.str_sha1\n};\n","/*\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.1 Copyright (C) Paul Johnston 1999 - 2002.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\n/*\n * Everything that isn't used by Strophe has been stripped here!\n */\n\n/*\n * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n * to work around bugs in some JS interpreters.\n */\nconst safe_add = function (x, y) {\n    const lsw = (x & 0xFFFF) + (y & 0xFFFF);\n    const msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n    return (msw << 16) | (lsw & 0xFFFF);\n};\n\n/*\n * Bitwise rotate a 32-bit number to the left.\n */\nconst bit_rol = function (num, cnt) {\n    return (num << cnt) | (num >>> (32 - cnt));\n};\n\n/*\n * Convert a string to an array of little-endian words\n */\nconst str2binl = function (str) {\n    if (typeof str !== \"string\") {\n        throw new Error(\"str2binl was passed a non-string\");\n    }\n    const bin = [];\n    for(let i = 0; i < str.length * 8; i += 8)\n    {\n        bin[i>>5] |= (str.charCodeAt(i / 8) & 255) << (i%32);\n    }\n    return bin;\n};\n\n/*\n * Convert an array of little-endian words to a string\n */\nconst binl2str = function (bin) {\n    let str = \"\";\n    for(let i = 0; i < bin.length * 32; i += 8)\n    {\n        str += String.fromCharCode((bin[i>>5] >>> (i % 32)) & 255);\n    }\n    return str;\n};\n\n/*\n * Convert an array of little-endian words to a hex string.\n */\nconst binl2hex = function (binarray) {\n    const hex_tab = \"0123456789abcdef\";\n    let str = \"\";\n    for(let i = 0; i < binarray.length * 4; i++)\n    {\n        str += hex_tab.charAt((binarray[i>>2] >> ((i%4)*8+4)) & 0xF) +\n            hex_tab.charAt((binarray[i>>2] >> ((i%4)*8  )) & 0xF);\n    }\n    return str;\n};\n\n/*\n * These functions implement the four basic operations the algorithm uses.\n */\nconst md5_cmn = function (q, a, b, x, s, t) {\n    return safe_add(bit_rol(safe_add(safe_add(a, q),safe_add(x, t)), s),b);\n};\n\nconst md5_ff = function (a, b, c, d, x, s, t) {\n    return md5_cmn((b & c) | ((~b) & d), a, b, x, s, t);\n};\n\nconst md5_gg = function (a, b, c, d, x, s, t) {\n    return md5_cmn((b & d) | (c & (~d)), a, b, x, s, t);\n};\n\nconst md5_hh = function (a, b, c, d, x, s, t) {\n    return md5_cmn(b ^ c ^ d, a, b, x, s, t);\n};\n\nconst md5_ii = function (a, b, c, d, x, s, t) {\n    return md5_cmn(c ^ (b | (~d)), a, b, x, s, t);\n};\n\n/*\n * Calculate the MD5 of an array of little-endian words, and a bit length\n */\nconst core_md5 = function (x, len) {\n    /* append padding */\n    x[len >> 5] |= 0x80 << ((len) % 32);\n    x[(((len + 64) >>> 9) << 4) + 14] = len;\n\n    let a =  1732584193;\n    let b = -271733879;\n    let c = -1732584194;\n    let d =  271733878;\n\n    let olda, oldb, oldc, oldd;\n    for (let i = 0; i < x.length; i += 16)\n    {\n        olda = a;\n        oldb = b;\n        oldc = c;\n        oldd = d;\n\n        a = md5_ff(a, b, c, d, x[i+ 0], 7 , -680876936);\n        d = md5_ff(d, a, b, c, x[i+ 1], 12, -389564586);\n        c = md5_ff(c, d, a, b, x[i+ 2], 17,  606105819);\n        b = md5_ff(b, c, d, a, x[i+ 3], 22, -1044525330);\n        a = md5_ff(a, b, c, d, x[i+ 4], 7 , -176418897);\n        d = md5_ff(d, a, b, c, x[i+ 5], 12,  1200080426);\n        c = md5_ff(c, d, a, b, x[i+ 6], 17, -1473231341);\n        b = md5_ff(b, c, d, a, x[i+ 7], 22, -45705983);\n        a = md5_ff(a, b, c, d, x[i+ 8], 7 ,  1770035416);\n        d = md5_ff(d, a, b, c, x[i+ 9], 12, -1958414417);\n        c = md5_ff(c, d, a, b, x[i+10], 17, -42063);\n        b = md5_ff(b, c, d, a, x[i+11], 22, -1990404162);\n        a = md5_ff(a, b, c, d, x[i+12], 7 ,  1804603682);\n        d = md5_ff(d, a, b, c, x[i+13], 12, -40341101);\n        c = md5_ff(c, d, a, b, x[i+14], 17, -1502002290);\n        b = md5_ff(b, c, d, a, x[i+15], 22,  1236535329);\n\n        a = md5_gg(a, b, c, d, x[i+ 1], 5 , -165796510);\n        d = md5_gg(d, a, b, c, x[i+ 6], 9 , -1069501632);\n        c = md5_gg(c, d, a, b, x[i+11], 14,  643717713);\n        b = md5_gg(b, c, d, a, x[i+ 0], 20, -373897302);\n        a = md5_gg(a, b, c, d, x[i+ 5], 5 , -701558691);\n        d = md5_gg(d, a, b, c, x[i+10], 9 ,  38016083);\n        c = md5_gg(c, d, a, b, x[i+15], 14, -660478335);\n        b = md5_gg(b, c, d, a, x[i+ 4], 20, -405537848);\n        a = md5_gg(a, b, c, d, x[i+ 9], 5 ,  568446438);\n        d = md5_gg(d, a, b, c, x[i+14], 9 , -1019803690);\n        c = md5_gg(c, d, a, b, x[i+ 3], 14, -187363961);\n        b = md5_gg(b, c, d, a, x[i+ 8], 20,  1163531501);\n        a = md5_gg(a, b, c, d, x[i+13], 5 , -1444681467);\n        d = md5_gg(d, a, b, c, x[i+ 2], 9 , -51403784);\n        c = md5_gg(c, d, a, b, x[i+ 7], 14,  1735328473);\n        b = md5_gg(b, c, d, a, x[i+12], 20, -1926607734);\n\n        a = md5_hh(a, b, c, d, x[i+ 5], 4 , -378558);\n        d = md5_hh(d, a, b, c, x[i+ 8], 11, -2022574463);\n        c = md5_hh(c, d, a, b, x[i+11], 16,  1839030562);\n        b = md5_hh(b, c, d, a, x[i+14], 23, -35309556);\n        a = md5_hh(a, b, c, d, x[i+ 1], 4 , -1530992060);\n        d = md5_hh(d, a, b, c, x[i+ 4], 11,  1272893353);\n        c = md5_hh(c, d, a, b, x[i+ 7], 16, -155497632);\n        b = md5_hh(b, c, d, a, x[i+10], 23, -1094730640);\n        a = md5_hh(a, b, c, d, x[i+13], 4 ,  681279174);\n        d = md5_hh(d, a, b, c, x[i+ 0], 11, -358537222);\n        c = md5_hh(c, d, a, b, x[i+ 3], 16, -722521979);\n        b = md5_hh(b, c, d, a, x[i+ 6], 23,  76029189);\n        a = md5_hh(a, b, c, d, x[i+ 9], 4 , -640364487);\n        d = md5_hh(d, a, b, c, x[i+12], 11, -421815835);\n        c = md5_hh(c, d, a, b, x[i+15], 16,  530742520);\n        b = md5_hh(b, c, d, a, x[i+ 2], 23, -995338651);\n\n        a = md5_ii(a, b, c, d, x[i+ 0], 6 , -198630844);\n        d = md5_ii(d, a, b, c, x[i+ 7], 10,  1126891415);\n        c = md5_ii(c, d, a, b, x[i+14], 15, -1416354905);\n        b = md5_ii(b, c, d, a, x[i+ 5], 21, -57434055);\n        a = md5_ii(a, b, c, d, x[i+12], 6 ,  1700485571);\n        d = md5_ii(d, a, b, c, x[i+ 3], 10, -1894986606);\n        c = md5_ii(c, d, a, b, x[i+10], 15, -1051523);\n        b = md5_ii(b, c, d, a, x[i+ 1], 21, -2054922799);\n        a = md5_ii(a, b, c, d, x[i+ 8], 6 ,  1873313359);\n        d = md5_ii(d, a, b, c, x[i+15], 10, -30611744);\n        c = md5_ii(c, d, a, b, x[i+ 6], 15, -1560198380);\n        b = md5_ii(b, c, d, a, x[i+13], 21,  1309151649);\n        a = md5_ii(a, b, c, d, x[i+ 4], 6 , -145523070);\n        d = md5_ii(d, a, b, c, x[i+11], 10, -1120210379);\n        c = md5_ii(c, d, a, b, x[i+ 2], 15,  718787259);\n        b = md5_ii(b, c, d, a, x[i+ 9], 21, -343485551);\n\n        a = safe_add(a, olda);\n        b = safe_add(b, oldb);\n        c = safe_add(c, oldc);\n        d = safe_add(d, oldd);\n    }\n    return [a, b, c, d];\n};\n\n/*\n * These are the functions you'll usually want to call.\n * They take string arguments and return either hex or base-64 encoded\n * strings.\n */\nconst MD5 = {\n    hexdigest: function (s) {\n        return binl2hex(core_md5(str2binl(s), s.length * 8));\n    },\n    hash: function (s) {\n        return binl2str(core_md5(str2binl(s), s.length * 8));\n    }\n};\nexport { MD5 as default };\n","/*\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-1, as defined\n * in FIPS PUB 180-1\n * Version 2.1a Copyright Paul Johnston 2000 - 2002.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for details.\n */\n\n/* jshint undef: true, unused: true:, noarg: true, latedef: false */\n/* global define */\n\n/* Some functions and variables have been stripped for use with Strophe */\n\n/*\n * Calculate the SHA-1 of an array of big-endian words, and a bit length\n */\nfunction core_sha1(x, len) {\n    /* append padding */\n    x[len >> 5] |= 0x80 << (24 - len % 32);\n    x[((len + 64 >> 9) << 4) + 15] = len;\n\n    var w = new Array(80);\n    var a =  1732584193;\n    var b = -271733879;\n    var c = -1732584194;\n    var d =  271733878;\n    var e = -1009589776;\n\n    var i, j, t, olda, oldb, oldc, oldd, olde;\n    for (i = 0; i < x.length; i += 16) {\n        olda = a;\n        oldb = b;\n        oldc = c;\n        oldd = d;\n        olde = e;\n\n        for (j = 0; j < 80; j++) {\n            if (j < 16) {\n                w[j] = x[i + j];\n            } else {\n                w[j] = rol(w[j-3] ^ w[j-8] ^ w[j-14] ^ w[j-16], 1);\n            }\n\n            t = safe_add(safe_add(rol(a, 5), sha1_ft(j, b, c, d)),\n                         safe_add(safe_add(e, w[j]), sha1_kt(j)));\n            e = d;\n            d = c;\n            c = rol(b, 30);\n            b = a;\n            a = t;\n        }\n\n        a = safe_add(a, olda);\n        b = safe_add(b, oldb);\n        c = safe_add(c, oldc);\n        d = safe_add(d, oldd);\n        e = safe_add(e, olde);\n    }\n    return [a, b, c, d, e];\n}\n\n/*\n * Perform the appropriate triplet combination function for the current\n * iteration\n */\nfunction sha1_ft (t, b, c, d) {\n    if (t < 20) { return (b & c) | ((~b) & d); }\n    if (t < 40) { return b ^ c ^ d; }\n    if (t < 60) { return (b & c) | (b & d) | (c & d); }\n    return b ^ c ^ d;\n}\n\n/*\n * Determine the appropriate additive constant for the current iteration\n */\nfunction sha1_kt(t) {\n    return (t < 20) ?  1518500249 : (t < 40) ?  1859775393 : (t < 60) ? -1894007588 : -899497514;\n}\n\n/*\n * Calculate the HMAC-SHA1 of a key and some data\n */\nfunction core_hmac_sha1(key, data) {\n    var bkey = str2binb(key);\n    if (bkey.length > 16) {\n        bkey = core_sha1(bkey, key.length * 8);\n    }\n\n    var ipad = new Array(16), opad = new Array(16);\n    for (var i = 0; i < 16; i++) {\n        ipad[i] = bkey[i] ^ 0x36363636;\n        opad[i] = bkey[i] ^ 0x5C5C5C5C;\n    }\n\n    var hash = core_sha1(ipad.concat(str2binb(data)), 512 + data.length * 8);\n    return core_sha1(opad.concat(hash), 512 + 160);\n}\n\n/*\n * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n * to work around bugs in some JS interpreters.\n */\nfunction safe_add(x, y) {\n    var lsw = (x & 0xFFFF) + (y & 0xFFFF);\n    var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n    return (msw << 16) | (lsw & 0xFFFF);\n}\n\n/*\n * Bitwise rotate a 32-bit number to the left.\n */\nfunction rol(num, cnt) {\n    return (num << cnt) | (num >>> (32 - cnt));\n}\n\n/*\n * Convert an 8-bit or 16-bit string to an array of big-endian words\n * In 8-bit function, characters >255 have their hi-byte silently ignored.\n */\nfunction str2binb(str) {\n    var bin = [];\n    var mask = 255;\n    for (var i = 0; i < str.length * 8; i += 8) {\n        bin[i>>5] |= (str.charCodeAt(i / 8) & mask) << (24 - i%32);\n    }\n    return bin;\n}\n\n/*\n * Convert an array of big-endian words to a base-64 string\n */\nfunction binb2b64 (binarray) {\n    var tab = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n    var str = \"\";\n    var triplet, j;\n    for (var i = 0; i < binarray.length * 4; i += 3) {\n        triplet = (((binarray[i   >> 2] >> 8 * (3 -  i   %4)) & 0xFF) << 16) |\n                  (((binarray[i+1 >> 2] >> 8 * (3 - (i+1)%4)) & 0xFF) << 8 ) |\n                  ((binarray[i+2 >> 2] >> 8 * (3 - (i+2)%4)) & 0xFF);\n\n        for (j = 0; j < 4; j++) {\n            if (i * 8 + j * 6 > binarray.length * 32) { str += \"=\"; }\n            else { str += tab.charAt((triplet >> 6*(3-j)) & 0x3F); }\n        }\n    }\n    return str;\n}\n\n/*\n * Convert an array of big-endian words to a string\n */\nfunction binb2str(bin) {\n    var str = \"\";\n    var mask = 255;\n    for (var i = 0; i < bin.length * 32; i += 8) {\n        str += String.fromCharCode((bin[i>>5] >>> (24 - i%32)) & mask);\n    }\n    return str;\n}\n\n/*\n * These are the functions you'll usually want to call\n * They take string arguments and return either hex or base-64 encoded strings\n */\nconst SHA1 = {\n    b64_hmac_sha1:  function (key, data){ return binb2b64(core_hmac_sha1(key, data)); },\n    b64_sha1:       function (s) { return binb2b64(core_sha1(str2binb(s),s.length * 8)); },\n    binb2str:       binb2str,\n    core_hmac_sha1: core_hmac_sha1,\n    str_hmac_sha1:  function (key, data){ return binb2str(core_hmac_sha1(key, data)); },\n    str_sha1:       function (s) { return binb2str(core_sha1(str2binb(s),s.length * 8)); },\n};\nexport { SHA1 as default };\n","/*global global*/\n\nimport * as Strophe from 'core';\nimport * as bosh from 'bosh';\nimport * as websocket from 'websocket';\n\nglobal.Strophe = Strophe.default.Strophe;\nglobal.$build = Strophe.default.$build;\nglobal.$iq = Strophe.default.$iq;\nglobal.$msg = Strophe.default.$msg;\nglobal.$pres = Strophe.default.$pres;\n\nexport { default } from 'core';\n","const utils = {\n\n    utf16to8: function (str) {\n        var i, c;\n        var out = \"\";\n        var len = str.length;\n        for (i = 0; i < len; i++) {\n            c = str.charCodeAt(i);\n            if ((c >= 0x0000) && (c <= 0x007F)) {\n                out += str.charAt(i);\n            } else if (c > 0x07FF) {\n                out += String.fromCharCode(0xE0 | ((c >> 12) & 0x0F));\n                out += String.fromCharCode(0x80 | ((c >>  6) & 0x3F));\n                out += String.fromCharCode(0x80 | ((c >>  0) & 0x3F));\n            } else {\n                out += String.fromCharCode(0xC0 | ((c >>  6) & 0x1F));\n                out += String.fromCharCode(0x80 | ((c >>  0) & 0x3F));\n            }\n        }\n        return out;\n    },\n\n    addCookies: function (cookies) {\n        /* Parameters:\n         *  (Object) cookies - either a map of cookie names\n         *    to string values or to maps of cookie values.\n         *\n         * For example:\n         * { \"myCookie\": \"1234\" }\n         *\n         * or:\n         * { \"myCookie\": {\n         *      \"value\": \"1234\",\n         *      \"domain\": \".example.org\",\n         *      \"path\": \"/\",\n         *      \"expires\": expirationDate\n         *      }\n         *  }\n         *\n         *  These values get passed to Strophe.Connection via\n         *   options.cookies\n         */\n        cookies = cookies || {};\n        for (const cookieName in cookies) {\n            if (Object.prototype.hasOwnProperty.call(cookies, cookieName)) {\n                let expires = '';\n                let domain = '';\n                let path = '';\n                const cookieObj = cookies[cookieName];\n                const isObj = typeof cookieObj === \"object\";\n                const cookieValue = escape(unescape(isObj ? cookieObj.value : cookieObj));\n                if (isObj) {\n                    expires = cookieObj.expires ? \";expires=\"+cookieObj.expires : '';\n                    domain = cookieObj.domain ? \";domain=\"+cookieObj.domain : '';\n                    path = cookieObj.path ? \";path=\"+cookieObj.path : '';\n                }\n                document.cookie =\n                    cookieName+'='+cookieValue + expires + domain + path;\n            }\n        }\n    }\n};\n\nexport { utils as default };\n","/*\n    This program is distributed under the terms of the MIT license.\n    Please see the LICENSE file for details.\n\n    Copyright 2006-2008, OGG, LLC\n*/\n\n/* global window, clearTimeout, WebSocket, DOMParser */\n\nimport core from 'core';\n\nconst Strophe = core.Strophe;\nconst $build = core.$build;\n\n\n/** Class: Strophe.WebSocket\n *  _Private_ helper class that handles WebSocket Connections\n *\n *  The Strophe.WebSocket class is used internally by Strophe.Connection\n *  to encapsulate WebSocket sessions. It is not meant to be used from user's code.\n */\n\n/** File: websocket.js\n *  A JavaScript library to enable XMPP over Websocket in Strophejs.\n *\n *  This file implements XMPP over WebSockets for Strophejs.\n *  If a Connection is established with a Websocket url (ws://...)\n *  Strophe will use WebSockets.\n *  For more information on XMPP-over-WebSocket see RFC 7395:\n *  http://tools.ietf.org/html/rfc7395\n *\n *  WebSocket support implemented by Andreas Guth (andreas.guth@rwth-aachen.de)\n */\n\n/** PrivateConstructor: Strophe.Websocket\n *  Create and initialize a Strophe.WebSocket object.\n *  Currently only sets the connection Object.\n *\n *  Parameters:\n *    (Strophe.Connection) connection - The Strophe.Connection that will use WebSockets.\n *\n *  Returns:\n *    A new Strophe.WebSocket object.\n */\nStrophe.Websocket = function(connection) {\n    this._conn = connection;\n    this.strip = \"wrapper\";\n\n    const service = connection.service;\n    if (service.indexOf(\"ws:\") !== 0 && service.indexOf(\"wss:\") !== 0) {\n        // If the service is not an absolute URL, assume it is a path and put the absolute\n        // URL together from options, current URL and the path.\n        let new_service = \"\";\n        if (connection.options.protocol === \"ws\" && window.location.protocol !== \"https:\") {\n            new_service += \"ws\";\n        } else {\n            new_service += \"wss\";\n        }\n\n        new_service += \"://\" + window.location.host;\n        if (service.indexOf(\"/\") !== 0) {\n            new_service += window.location.pathname + service;\n        } else {\n            new_service += service;\n        }\n        connection.service = new_service;\n    }\n};\n\nStrophe.Websocket.prototype = {\n    /** PrivateFunction: _buildStream\n     *  _Private_ helper function to generate the <stream> start tag for WebSockets\n     *\n     *  Returns:\n     *    A Strophe.Builder with a <stream> element.\n     */\n    _buildStream: function () {\n        return $build(\"open\", {\n            \"xmlns\": Strophe.NS.FRAMING,\n            \"to\": this._conn.domain,\n            \"version\": '1.0'\n        });\n    },\n\n    /** PrivateFunction: _check_streamerror\n     * _Private_ checks a message for stream:error\n     *\n     *  Parameters:\n     *    (Strophe.Request) bodyWrap - The received stanza.\n     *    connectstatus - The ConnectStatus that will be set on error.\n     *  Returns:\n     *     true if there was a streamerror, false otherwise.\n     */\n    _check_streamerror: function (bodyWrap, connectstatus) {\n        let errors;\n        if (bodyWrap.getElementsByTagNameNS) {\n            errors = bodyWrap.getElementsByTagNameNS(Strophe.NS.STREAM, \"error\");\n        } else {\n            errors = bodyWrap.getElementsByTagName(\"stream:error\");\n        }\n        if (errors.length === 0) {\n            return false;\n        }\n        const error = errors[0];\n\n        let condition = \"\";\n        let text = \"\";\n\n        const ns = \"urn:ietf:params:xml:ns:xmpp-streams\";\n        for (let i=0; i<error.childNodes.length; i++) {\n            const e = error.childNodes[i];\n            if (e.getAttribute(\"xmlns\") !== ns) {\n                break;\n            } if (e.nodeName === \"text\") {\n                text = e.textContent;\n            } else {\n                condition = e.nodeName;\n            }\n        }\n\n        let errorString = \"WebSocket stream error: \";\n        if (condition) {\n            errorString += condition;\n        } else {\n            errorString += \"unknown\";\n        }\n        if (text) {\n            errorString += \" - \" + text;\n        }\n        Strophe.error(errorString);\n\n        // close the connection on stream_error\n        this._conn._changeConnectStatus(connectstatus, condition);\n        this._conn._doDisconnect();\n        return true;\n    },\n\n    /** PrivateFunction: _reset\n     *  Reset the connection.\n     *\n     *  This function is called by the reset function of the Strophe Connection.\n     *  Is not needed by WebSockets.\n     */\n    _reset: function () {\n        return;\n    },\n\n    /** PrivateFunction: _connect\n     *  _Private_ function called by Strophe.Connection.connect\n     *\n     *  Creates a WebSocket for a connection and assigns Callbacks to it.\n     *  Does nothing if there already is a WebSocket.\n     */\n    _connect: function () {\n        // Ensure that there is no open WebSocket from a previous Connection.\n        this._closeSocket();\n\n        // Create the new WobSocket\n        this.socket = new WebSocket(this._conn.service, \"xmpp\");\n        this.socket.onopen = this._onOpen.bind(this);\n        this.socket.onerror = this._onError.bind(this);\n        this.socket.onclose = this._onClose.bind(this);\n        this.socket.onmessage = this._connect_cb_wrapper.bind(this);\n    },\n\n    /** PrivateFunction: _connect_cb\n     *  _Private_ function called by Strophe.Connection._connect_cb\n     *\n     * checks for stream:error\n     *\n     *  Parameters:\n     *    (Strophe.Request) bodyWrap - The received stanza.\n     */\n    _connect_cb: function(bodyWrap) {\n        const error = this._check_streamerror(bodyWrap, Strophe.Status.CONNFAIL);\n        if (error) {\n            return Strophe.Status.CONNFAIL;\n        }\n    },\n\n    /** PrivateFunction: _handleStreamStart\n     * _Private_ function that checks the opening <open /> tag for errors.\n     *\n     * Disconnects if there is an error and returns false, true otherwise.\n     *\n     *  Parameters:\n     *    (Node) message - Stanza containing the <open /> tag.\n     */\n    _handleStreamStart: function(message) {\n        let error = false;\n\n        // Check for errors in the <open /> tag\n        const ns = message.getAttribute(\"xmlns\");\n        if (typeof ns !== \"string\") {\n            error = \"Missing xmlns in <open />\";\n        } else if (ns !== Strophe.NS.FRAMING) {\n            error = \"Wrong xmlns in <open />: \" + ns;\n        }\n\n        const ver = message.getAttribute(\"version\");\n        if (typeof ver !== \"string\") {\n            error = \"Missing version in <open />\";\n        } else if (ver !== \"1.0\") {\n            error = \"Wrong version in <open />: \" + ver;\n        }\n\n        if (error) {\n            this._conn._changeConnectStatus(Strophe.Status.CONNFAIL, error);\n            this._conn._doDisconnect();\n            return false;\n        }\n        return true;\n    },\n\n    /** PrivateFunction: _connect_cb_wrapper\n     * _Private_ function that handles the first connection messages.\n     *\n     * On receiving an opening stream tag this callback replaces itself with the real\n     * message handler. On receiving a stream error the connection is terminated.\n     */\n    _connect_cb_wrapper: function(message) {\n        if (message.data.indexOf(\"<open \") === 0 || message.data.indexOf(\"<?xml\") === 0) {\n            // Strip the XML Declaration, if there is one\n            const data = message.data.replace(/^(<\\?.*?\\?>\\s*)*/, \"\");\n            if (data === '') return;\n\n            const streamStart = new DOMParser().parseFromString(data, \"text/xml\").documentElement;\n            this._conn.xmlInput(streamStart);\n            this._conn.rawInput(message.data);\n\n            //_handleStreamSteart will check for XML errors and disconnect on error\n            if (this._handleStreamStart(streamStart)) {\n                //_connect_cb will check for stream:error and disconnect on error\n                this._connect_cb(streamStart);\n            }\n        } else if (message.data.indexOf(\"<close \") === 0) { // <close xmlns=\"urn:ietf:params:xml:ns:xmpp-framing />\n            // Parse the raw string to an XML element\n            const parsedMessage = new DOMParser().parseFromString(message.data, \"text/xml\").documentElement;\n            // Report this input to the raw and xml handlers\n            this._conn.xmlInput(parsedMessage);\n            this._conn.rawInput(message.data);\n            const see_uri = parsedMessage.getAttribute(\"see-other-uri\");\n            if (see_uri) {\n                const service = this._conn.service;\n                // Valid scenarios: WSS->WSS, WS->ANY\n                const isSecureRedirect = (service.indexOf(\"wss:\") >= 0 && see_uri.indexOf(\"wss:\") >= 0) || (service.indexOf(\"ws:\") >= 0);\n                if (isSecureRedirect) {\n                    this._conn._changeConnectStatus(\n                        Strophe.Status.REDIRECT,\n                        \"Received see-other-uri, resetting connection\"\n                    );\n                    this._conn.reset();\n                    this._conn.service = see_uri;\n                    this._connect();\n                }\n            } else {\n                this._conn._changeConnectStatus(\n                    Strophe.Status.CONNFAIL,\n                    \"Received closing stream\"\n                );\n                this._conn._doDisconnect();\n            }\n        } else {\n            const string = this._streamWrap(message.data);\n            const elem = new DOMParser().parseFromString(string, \"text/xml\").documentElement;\n            this.socket.onmessage = this._onMessage.bind(this);\n            this._conn._connect_cb(elem, null, message.data);\n        }\n    },\n\n    /** PrivateFunction: _disconnect\n     *  _Private_ function called by Strophe.Connection.disconnect\n     *\n     *  Disconnects and sends a last stanza if one is given\n     *\n     *  Parameters:\n     *    (Request) pres - This stanza will be sent before disconnecting.\n     */\n    _disconnect: function (pres) {\n        if (this.socket && this.socket.readyState !== WebSocket.CLOSED) {\n            if (pres) {\n                this._conn.send(pres);\n            }\n            const close = $build(\"close\", { \"xmlns\": Strophe.NS.FRAMING });\n            this._conn.xmlOutput(close.tree());\n            const closeString = Strophe.serialize(close);\n            this._conn.rawOutput(closeString);\n            try {\n                this.socket.send(closeString);\n            } catch (e) {\n                Strophe.warn(\"Couldn't send <close /> tag.\");\n            }\n        }\n        this._conn._doDisconnect();\n    },\n\n    /** PrivateFunction: _doDisconnect\n     *  _Private_ function to disconnect.\n     *\n     *  Just closes the Socket for WebSockets\n     */\n    _doDisconnect: function () {\n        Strophe.debug(\"WebSockets _doDisconnect was called\");\n        this._closeSocket();\n    },\n\n    /** PrivateFunction _streamWrap\n     *  _Private_ helper function to wrap a stanza in a <stream> tag.\n     *  This is used so Strophe can process stanzas from WebSockets like BOSH\n     */\n    _streamWrap: function (stanza) {\n        return \"<wrapper>\" + stanza + '</wrapper>';\n    },\n\n\n    /** PrivateFunction: _closeSocket\n     *  _Private_ function to close the WebSocket.\n     *\n     *  Closes the socket if it is still open and deletes it\n     */\n    _closeSocket: function () {\n        if (this.socket) {\n            try {\n                this.socket.onerror = null;\n                this.socket.close();\n            } catch (e) {\n                Strophe.debug(e.message);\n            }\n        }\n        this.socket = null;\n    },\n\n    /** PrivateFunction: _emptyQueue\n     * _Private_ function to check if the message queue is empty.\n     *\n     *  Returns:\n     *    True, because WebSocket messages are send immediately after queueing.\n     */\n    _emptyQueue: function () {\n        return true;\n    },\n\n    /** PrivateFunction: _onClose\n     * _Private_ function to handle websockets closing.\n     *\n     * Nothing to do here for WebSockets\n     */\n    _onClose: function(e) {\n        if (this._conn.connected && !this._conn.disconnecting) {\n            Strophe.error(\"Websocket closed unexpectedly\");\n            this._conn._doDisconnect();\n        } else if (e && e.code === 1006 && !this._conn.connected && this.socket) {\n            // in case the onError callback was not called (Safari 10 does not\n            // call onerror when the initial connection fails) we need to\n            // dispatch a CONNFAIL status update to be consistent with the\n            // behavior on other browsers.\n            Strophe.error(\"Websocket closed unexcectedly\");\n            this._conn._changeConnectStatus(\n                Strophe.Status.CONNFAIL,\n                \"The WebSocket connection could not be established or was disconnected.\"\n            );\n            this._conn._doDisconnect();\n        } else {\n            Strophe.debug(\"Websocket closed\");\n        }\n    },\n\n    /** PrivateFunction: _no_auth_received\n     *\n     * Called on stream start/restart when no stream:features\n     * has been received.\n     */\n    _no_auth_received: function (callback) {\n        Strophe.error(\"Server did not offer a supported authentication mechanism\");\n        this._changeConnectStatus(\n            Strophe.Status.CONNFAIL,\n            Strophe.ErrorCondition.NO_AUTH_MECH\n        );\n        if (callback) {\n            callback.call(this._conn);\n        }\n        this._conn._doDisconnect();\n    },\n\n    /** PrivateFunction: _onDisconnectTimeout\n     *  _Private_ timeout handler for handling non-graceful disconnection.\n     *\n     *  This does nothing for WebSockets\n     */\n    _onDisconnectTimeout: function () {},\n\n    /** PrivateFunction: _abortAllRequests\n     *  _Private_ helper function that makes sure all pending requests are aborted.\n     */\n    _abortAllRequests: function () {},\n\n    /** PrivateFunction: _onError\n     * _Private_ function to handle websockets errors.\n     *\n     * Parameters:\n     * (Object) error - The websocket error.\n     */\n    _onError: function(error) {\n        Strophe.error(\"Websocket error \" + error);\n        this._conn._changeConnectStatus(\n            Strophe.Status.CONNFAIL,\n            \"The WebSocket connection could not be established or was disconnected.\"\n        );\n        this._disconnect();\n    },\n\n    /** PrivateFunction: _onIdle\n     *  _Private_ function called by Strophe.Connection._onIdle\n     *\n     *  sends all queued stanzas\n     */\n    _onIdle: function () {\n        const data = this._conn._data;\n        if (data.length > 0 && !this._conn.paused) {\n            for (let i=0; i<data.length; i++) {\n                if (data[i] !== null) {\n                    let stanza;\n                    if (data[i] === \"restart\") {\n                        stanza = this._buildStream().tree();\n                    } else {\n                        stanza = data[i];\n                    }\n                    const rawStanza = Strophe.serialize(stanza);\n                    this._conn.xmlOutput(stanza);\n                    this._conn.rawOutput(rawStanza);\n                    this.socket.send(rawStanza);\n                }\n            }\n            this._conn._data = [];\n        }\n    },\n\n    /** PrivateFunction: _onMessage\n     * _Private_ function to handle websockets messages.\n     *\n     * This function parses each of the messages as if they are full documents.\n     * [TODO : We may actually want to use a SAX Push parser].\n     *\n     * Since all XMPP traffic starts with\n     *  <stream:stream version='1.0'\n     *                 xml:lang='en'\n     *                 xmlns='jabber:client'\n     *                 xmlns:stream='http://etherx.jabber.org/streams'\n     *                 id='3697395463'\n     *                 from='SERVER'>\n     *\n     * The first stanza will always fail to be parsed.\n     *\n     * Additionally, the seconds stanza will always be <stream:features> with\n     * the stream NS defined in the previous stanza, so we need to 'force'\n     * the inclusion of the NS in this stanza.\n     *\n     * Parameters:\n     * (string) message - The websocket message.\n     */\n    _onMessage: function(message) {\n        let elem;\n        // check for closing stream\n        const close = '<close xmlns=\"urn:ietf:params:xml:ns:xmpp-framing\" />';\n        if (message.data === close) {\n            this._conn.rawInput(close);\n            this._conn.xmlInput(message);\n            if (!this._conn.disconnecting) {\n                this._conn._doDisconnect();\n            }\n            return;\n        } else if (message.data.search(\"<open \") === 0) {\n            // This handles stream restarts\n            elem = new DOMParser().parseFromString(message.data, \"text/xml\").documentElement;\n            if (!this._handleStreamStart(elem)) {\n                return;\n            }\n        } else {\n            const data = this._streamWrap(message.data);\n            elem = new DOMParser().parseFromString(data, \"text/xml\").documentElement;\n        }\n\n        if (this._check_streamerror(elem, Strophe.Status.ERROR)) {\n            return;\n        }\n\n        //handle unavailable presence stanza before disconnecting\n        if (this._conn.disconnecting &&\n                elem.firstChild.nodeName === \"presence\" &&\n                elem.firstChild.getAttribute(\"type\") === \"unavailable\") {\n            this._conn.xmlInput(elem);\n            this._conn.rawInput(Strophe.serialize(elem));\n            // if we are already disconnecting we will ignore the unavailable stanza and\n            // wait for the </stream:stream> tag before we close the connection\n            return;\n        }\n        this._conn._dataRecv(elem, message.data);\n    },\n\n    /** PrivateFunction: _onOpen\n     * _Private_ function to handle websockets connection setup.\n     *\n     * The opening stream tag is sent here.\n     */\n    _onOpen: function() {\n        Strophe.debug(\"Websocket open\");\n        const start = this._buildStream();\n        this._conn.xmlOutput(start.tree());\n\n        const startString = Strophe.serialize(start);\n        this._conn.rawOutput(startString);\n        this.socket.send(startString);\n    },\n\n    /** PrivateFunction: _reqToData\n     * _Private_ function to get a stanza out of a request.\n     *\n     * WebSockets don't use requests, so the passed argument is just returned.\n     *\n     *  Parameters:\n     *    (Object) stanza - The stanza.\n     *\n     *  Returns:\n     *    The stanza that was passed.\n     */\n    _reqToData: function (stanza) {\n        return stanza;\n    },\n\n    /** PrivateFunction: _send\n     *  _Private_ part of the Connection.send function for WebSocket\n     *\n     * Just flushes the messages that are in the queue\n     */\n    _send: function () {\n        this._conn.flush();\n    },\n\n    /** PrivateFunction: _sendRestart\n     *\n     *  Send an xmpp:restart stanza.\n     */\n    _sendRestart: function () {\n        clearTimeout(this._conn._idleTimeout);\n        this._conn._onIdle.bind(this._conn)();\n    }\n};\n"],"sourceRoot":""}