{"version":3,"sources":["utils.ts"],"names":["InternetReachability","NativeInterface","convertState","input","isInternetReachable","currentState","getCurrentState"],"mappings":"+DAWA,MAAOA,CAAAA,oBAAP,KAAiC,wBAAjC,CACA,MAAOC,CAAAA,eAAP,KAA4B,mBAA5B,CAEA,MAAO,SAASC,CAAAA,YAAT,CACLC,KADK,CAEe,CACpB,GAAI,MAAOA,CAAAA,KAAK,CAACC,mBAAb,GAAqC,SAAzC,CAAoD,CAClD,MAAOD,CAAAA,KAAP,CACD,CAFD,IAEO,CACL,wBACKA,KADL,EAEEC,mBAAmB,CAAEJ,oBAAoB,CAACK,YAArB,EAFvB,GAID,CACF,CAED,MAAO,SAASA,CAAAA,YAAT,EAAwE,CAC7E,MAAOJ,CAAAA,eAAe,CAACK,eAAhB,EAAP,CACD,CAED,cAAe,CACbJ,YAAY,CAAZA,YADa,CAEbG,YAAY,CAAZA,YAFa,CAAf","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\nimport * as PrivateTypes from './privateTypes';\nimport * as Types from './types';\nimport InternetReachability from './internetReachability';\nimport NativeInterface from './nativeInterface';\n\nexport function convertState(\n  input: PrivateTypes.NetInfoNativeModuleState,\n): Types.NetInfoState {\n  if (typeof input.isInternetReachable === 'boolean') {\n    return input as Types.NetInfoState;\n  } else {\n    return {\n      ...input,\n      isInternetReachable: InternetReachability.currentState(),\n    } as Types.NetInfoState;\n  }\n}\n\nexport function currentState(): Promise<PrivateTypes.NetInfoNativeModuleState> {\n  return NativeInterface.getCurrentState();\n}\n\nexport default {\n  convertState,\n  currentState,\n};\n"]}