{"version":3,"sources":["../../src/rules/checkTagNames.js"],"names":["jsdoc","report","utils","_","forEach","tags","jsdocTag","isValidTag","tag","preferredTagName","getPreferredTagName"],"mappings":";;;;;;AAAA;;;;AACA;;;;;;kBAEe,4BAAa,gBAItB;AAAA,MAHJA,KAGI,QAHJA,KAGI;AAAA,MAFJC,MAEI,QAFJA,MAEI;AAAA,MADJC,KACI,QADJA,KACI;;AACJC,mBAAEC,OAAF,CAAUJ,MAAMK,IAAhB,EAAsB,UAACC,QAAD,EAAc;AAClC,QAAIJ,MAAMK,UAAN,CAAiBD,SAASE,GAA1B,CAAJ,EAAoC;AAClC,UAAMC,mBAAmBP,MAAMQ,mBAAN,CAA0BJ,SAASE,GAAnC,CAAzB;;AAEA,UAAIC,qBAAqBH,SAASE,GAAlC,EAAuC;AACrCP,eAAO,8CAA8CK,SAASE,GAAvD,GAA6D,oBAA7D,GAAoFC,gBAApF,GAAuG,IAA9G;AACD;AACF,KAND,MAMO;AACLR,aAAO,6BAA6BK,SAASE,GAAtC,GAA4C,IAAnD;AACD;AACF,GAVD;AAWD,CAhBc,C","file":"checkTagNames.js","sourcesContent":["import _ from 'lodash';\nimport iterateJsdoc from '../iterateJsdoc';\n\nexport default iterateJsdoc(({\n  jsdoc,\n  report,\n  utils\n}) => {\n  _.forEach(jsdoc.tags, (jsdocTag) => {\n    if (utils.isValidTag(jsdocTag.tag)) {\n      const preferredTagName = utils.getPreferredTagName(jsdocTag.tag);\n\n      if (preferredTagName !== jsdocTag.tag) {\n        report('Invalid JSDoc tag (preference). Replace \"' + jsdocTag.tag + '\" JSDoc tag with \"' + preferredTagName + '\".');\n      }\n    } else {\n      report('Invalid JSDoc tag name \"' + jsdocTag.tag + '\".');\n    }\n  });\n});\n"]}