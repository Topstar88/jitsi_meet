import { __makeTemplateObject } from "tslib";
/** @jsx jsx */
import React from 'react';
import { css, jsx, keyframes } from '@emotion/core';
import { DN500, DN900, N0, N500 } from '@atlaskit/theme/colors';
import GlobalTheme from '@atlaskit/theme/components';
import { presetSizes } from './constants';
var rotate = keyframes(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  to { transform: rotate(360deg); }\n"], ["\n  to { transform: rotate(360deg); }\n"])));
// There are three parts to the load in animation:
// 1. Fade in
// 2. Accelerated spin
// 3. Stretch the spinner line
var loadIn = keyframes(templateObject_2 || (templateObject_2 = __makeTemplateObject(["\n  from {\n    transform: rotate(50deg);\n    opacity: 0;\n    stroke-dashoffset: 60;\n  }\n  to {\n    transform: rotate(230deg);\n    opacity: 1;\n    stroke-dashoffset: 50;\n  }\n"], ["\n  from {\n    transform: rotate(50deg);\n    opacity: 0;\n    stroke-dashoffset: 60;\n  }\n  to {\n    transform: rotate(230deg);\n    opacity: 1;\n    stroke-dashoffset: 50;\n  }\n"])));
function getStrokeColor(_a) {
    var mode = _a.mode, appearance = _a.appearance;
    if (mode === 'light') {
        return appearance === 'inherit' ? N500 : N0;
    }
    // Dark mode: colours provided by Jake Miller
    return appearance === 'inherit' ? DN900 : DN500;
}
export default React.memo(React.forwardRef(function Spinner(_a, ref) {
    var testId = _a.testId, _b = _a.appearance, appearance = _b === void 0 ? 'inherit' : _b, _c = _a.delay, delay = _c === void 0 ? 0 : _c, _d = _a.size, providedSize = _d === void 0 ? 'medium' : _d;
    var size = typeof providedSize === 'number'
        ? providedSize
        : presetSizes[providedSize];
    return (jsx(GlobalTheme.Consumer, null, function (tokens) {
        var strokeColor = getStrokeColor({
            mode: tokens.mode,
            appearance: appearance,
        });
        // The Spinner animation uses a combination of two
        // css animations on two separate elements.
        return (jsx("svg", { focusable: "false", height: size, width: size, viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", "data-testid": testId, ref: ref, css: css(templateObject_3 || (templateObject_3 = __makeTemplateObject(["\n                /* align better inline with text */\n                vertical-align: middle;\n                /* We are going to animate this in */\n                opacity: 0;\n\n                animation: ", " 1s ease-in-out;\n                /* When the animation completes, stay at the last frame of the animation */\n                animation-fill-mode: forwards;\n                animation-delay: ", "ms;\n              "], ["\n                /* align better inline with text */\n                vertical-align: middle;\n                /* We are going to animate this in */\n                opacity: 0;\n\n                animation: ", " 1s ease-in-out;\n                /* When the animation completes, stay at the last frame of the animation */\n                animation-fill-mode: forwards;\n                animation-delay: ", "ms;\n              "])), loadIn, delay) },
            jsx("circle", { cx: "8", cy: "8", r: "7", css: css(templateObject_4 || (templateObject_4 = __makeTemplateObject(["\n                  fill: none;\n                  stroke: ", ";\n                  stroke-width: 1.5;\n                  stroke-linecap: round;\n                  stroke-dasharray: 60;\n                  stroke-dashoffset: inherit;\n                  transform-origin: center;\n                  animation: ", " 0.86s infinite;\n                  animation-delay: ", "ms;\n                  animation-timing-function: cubic-bezier(0.4, 0.15, 0.6, 0.85);\n                "], ["\n                  fill: none;\n                  stroke: ", ";\n                  stroke-width: 1.5;\n                  stroke-linecap: round;\n                  stroke-dasharray: 60;\n                  stroke-dashoffset: inherit;\n                  transform-origin: center;\n                  animation: ", " 0.86s infinite;\n                  animation-delay: ", "ms;\n                  animation-timing-function: cubic-bezier(0.4, 0.15, 0.6, 0.85);\n                "])), strokeColor, rotate, delay) })));
    }));
}));
var templateObject_1, templateObject_2, templateObject_3, templateObject_4;
//# sourceMappingURL=spinner.js.map