/** @jsx jsx */
import React from 'react';
import { jsx } from '@emotion/core';
import Spinner from '@atlaskit/spinner';
const appearances = ['primary', 'danger'];
export default class LoadingSpinner extends React.Component {
    constructor() {
        super(...arguments);
        this.invertSpinner = () => {
            const { appearance, isSelected, isDisabled } = this.props;
            if (isSelected) {
                return true;
            }
            if (isDisabled) {
                return false;
            }
            if (appearance !== undefined) {
                if (appearances.indexOf(appearance) !== -1) {
                    return true;
                }
            }
            return false;
        };
    }
    render() {
        const { spacing, styles } = this.props;
        let spinnerSize = spacing !== 'default' ? 'small' : 'medium';
        return (jsx("div", { css: styles },
            jsx(Spinner, { size: spinnerSize, appearance: this.invertSpinner() ? 'invert' : 'inherit' })));
    }
}
//# sourceMappingURL=LoadingSpinner.js.map