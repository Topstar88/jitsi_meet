import { __read, __spread } from "tslib";
import React, { useCallback, useMemo } from 'react';
import { default as AnalyticsReactContext } from '@atlaskit/analytics-next-stable-react-context';
import { useAnalyticsContext } from './useAnalyticsContext';
import { useTrackedRef } from './useTrackedRef';
var AnalyticsContext = function (_a) {
    var data = _a.data, children = _a.children;
    var dataRef = useTrackedRef(data);
    var analyticsContext = useAnalyticsContext();
    var getAtlaskitAnalyticsContext = useCallback(function () {
        return __spread(analyticsContext.getAtlaskitAnalyticsContext(), [dataRef.current]);
    }, [analyticsContext, dataRef]);
    var value = useMemo(function () { return ({
        getAtlaskitAnalyticsContext: getAtlaskitAnalyticsContext,
        getAtlaskitAnalyticsEventHandlers: analyticsContext.getAtlaskitAnalyticsEventHandlers,
    }); }, [analyticsContext, getAtlaskitAnalyticsContext]);
    return (React.createElement(AnalyticsReactContext.Provider, { value: value }, children));
};
export default AnalyticsContext;
//# sourceMappingURL=ModernAnalyticsContext.js.map