import React, { Component } from 'react';
import AnalyticsContext from './AnalyticsContext';
import withAnalyticsEvents from './withAnalyticsEvents';
// eslint-disable-next-line @repo/internal/react/no-class-components
export class BaseAnalyticsErrorBoundary extends Component {
    constructor() {
        super(...arguments);
        this.fireAnalytics = (analyticsErrorPayload) => {
            const { createAnalyticsEvent, channel, data } = this.props;
            createAnalyticsEvent({
                action: 'UnhandledError',
                eventType: 'ui',
                attributes: {
                    browserInfo: window && window.navigator && window.navigator.userAgent
                        ? window.navigator.userAgent
                        : 'unknown',
                    ...data,
                    ...analyticsErrorPayload,
                },
            }).fire(channel);
        };
    }
    componentDidCatch(error, info) {
        const payload = {
            error,
            info,
        };
        this.fireAnalytics(payload);
    }
    render() {
        const { data, children } = this.props;
        return React.createElement(AnalyticsContext, { data: data }, children);
    }
}
const AnalyticsErrorBoundary = withAnalyticsEvents()(BaseAnalyticsErrorBoundary);
export default AnalyticsErrorBoundary;
//# sourceMappingURL=AnalyticsErrorBoundary.js.map