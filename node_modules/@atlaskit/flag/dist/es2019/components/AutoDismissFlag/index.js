import React, { Component } from 'react';
import Flag from '../Flag';
export const AUTO_DISMISS_SECONDS = 8;
export default class AutoDismissFlag extends Component {
    constructor() {
        super(...arguments);
        this.startAutoDismissTimer = () => {
            if (!this.isAutoDismissAllowed()) {
                return;
            }
            this.stopAutoDismissTimer();
            this.autoDismissTimer = window.setTimeout(this.handleAutoDismissTimerEnd, AUTO_DISMISS_SECONDS * 1000);
        };
        this.stopAutoDismissTimer = () => {
            if (this.autoDismissTimer) {
                clearTimeout(this.autoDismissTimer);
                this.autoDismissTimer = null;
            }
        };
        this.dismissFlag = () => {
            if (this.isAutoDismissAllowed() && this.props.onDismissed) {
                this.props.onDismissed(this.props.id);
            }
        };
        this.handleAutoDismissTimerEnd = () => {
            this.dismissFlag();
        };
        this.handleInteractionStart = () => {
            this.stopAutoDismissTimer();
        };
        this.isAutoDismissAllowed = () => this.props.isDismissAllowed && this.props.onDismissed;
        this.handleInteractionEnd = () => {
            this.startAutoDismissTimer();
        };
    }
    componentDidMount() {
        this.startAutoDismissTimer();
    }
    componentWillUnmount() {
        this.stopAutoDismissTimer();
    }
    componentDidUpdate(prevProps) {
        if (this.props.isDismissAllowed && !prevProps.isDismissAllowed) {
            this.startAutoDismissTimer();
        }
        else if (!this.props.isDismissAllowed && prevProps.isDismissAllowed) {
            this.stopAutoDismissTimer();
        }
    }
    render() {
        return (React.createElement(Flag, Object.assign({ onMouseOver: this.handleInteractionStart, onFocus: this.handleInteractionStart, onMouseOut: this.handleInteractionEnd, onBlur: this.handleInteractionEnd }, this.props)));
    }
}
//# sourceMappingURL=index.js.map