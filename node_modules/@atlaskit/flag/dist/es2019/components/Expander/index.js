import React, { Component } from 'react';
import ExpanderInternal from './styledExpander';
export default class Expander extends Component {
    constructor() {
        super(...arguments);
        this.state = { isAnimating: false };
        this.handleTransitionEnd = () => {
            this.setState({ isAnimating: false });
        };
    }
    UNSAFE_componentWillReceiveProps(nextProps) {
        if (this.props.isExpanded !== nextProps.isExpanded) {
            this.setState({ isAnimating: true });
        }
    }
    render() {
        const { children, isExpanded } = this.props;
        const { isAnimating } = this.state;
        // Need to always render the ExpanderInternal otherwise the
        // reveal transiton doesn't happen. We can't use CSS animation for
        // the the reveal because we don't know the height of the content.
        const childrenIfExpanded = isAnimating || isExpanded ? children : null;
        return (React.createElement(ExpanderInternal, { "aria-hidden": !isExpanded, isExpanded: isExpanded, onTransitionEnd: this.handleTransitionEnd }, childrenIfExpanded));
    }
}
// eslint-disable-line react/sort-comp
Expander.defaultProps = { isExpanded: false };
//# sourceMappingURL=index.js.map