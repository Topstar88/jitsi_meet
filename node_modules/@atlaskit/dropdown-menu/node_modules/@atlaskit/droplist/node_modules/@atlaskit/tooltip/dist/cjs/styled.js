"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Target = exports.Tooltip = exports.TooltipPrimitive = void 0;

var _styledComponents = _interopRequireWildcard(require("styled-components"));

var _theme = require("@atlaskit/theme");

var backgroundColor = (0, _theme.themed)({
  light: _theme.colors.N800,
  dark: _theme.colors.DN0
});
var textColor = (0, _theme.themed)({
  light: _theme.colors.N0,
  dark: _theme.colors.DN600
});

var truncate = function truncate(p) {
  return p.truncate ? (0, _styledComponents.css)(["\n        max-width: 420px;\n        overflow: hidden;\n        text-overflow: ellipsis;\n        white-space: nowrap;\n      "]) : '';
};

var TooltipPrimitive = _styledComponents.default.div.withConfig({
  displayName: "styled__TooltipPrimitive",
  componentId: "fadon5-0"
})(["\n  z-index: ", ";\n  pointer-events: none;\n  position: fixed;\n"], _theme.layers.tooltip);

exports.TooltipPrimitive = TooltipPrimitive;
var Tooltip = (0, _styledComponents.default)(TooltipPrimitive).withConfig({
  displayName: "styled__Tooltip",
  componentId: "fadon5-1"
})(["\n  background-color: ", ";\n  border-radius: ", "px;\n  box-sizing: border-box;\n  color: ", ";\n  font-size: 12px;\n  left: 0;\n  line-height: 1.3;\n  max-width: 240px;\n  padding: 2px 6px;\n  top: 0;\n  /* Edge does not support overflow-wrap */\n  word-wrap: break-word;\n  overflow-wrap: break-word;\n  ", ";\n"], backgroundColor, _theme.borderRadius, textColor, truncate); // The inline-block here is needed to keep the tooltip appearing in the correct position
// when nested inside a wider parent (see position: relative example).

exports.Tooltip = Tooltip;

var Target = _styledComponents.default.div.withConfig({
  displayName: "styled__Target",
  componentId: "fadon5-2"
})(["\n  display: inline-block;\n"]);

exports.Target = Target;