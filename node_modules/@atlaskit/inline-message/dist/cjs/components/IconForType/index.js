"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _react = _interopRequireWildcard(require("react"));

var _styledIconForType = _interopRequireDefault(require("./styledIconForType"));

var _constants = require("../../constants");

var SelectedIconForType =
/*#__PURE__*/
function (_Component) {
  (0, _inherits2.default)(SelectedIconForType, _Component);

  function SelectedIconForType() {
    (0, _classCallCheck2.default)(this, SelectedIconForType);
    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(SelectedIconForType).apply(this, arguments));
  }

  (0, _createClass2.default)(SelectedIconForType, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          type = _this$props.type,
          isHovered = _this$props.isHovered,
          isOpen = _this$props.isOpen;
      var _typesMapping$type = _constants.typesMapping[type],
          SelectedIcon = _typesMapping$type.icon,
          iconSize = _typesMapping$type.iconSize;
      return _react.default.createElement(_styledIconForType.default, {
        appearance: type,
        isHovered: isHovered,
        isOpen: isOpen
      }, _react.default.createElement(SelectedIcon, {
        label: "Inline message icon",
        size: iconSize
      }));
    }
  }]);
  return SelectedIconForType;
}(_react.Component);

exports.default = SelectedIconForType;