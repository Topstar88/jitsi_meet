"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _theme = require("@atlaskit/theme");

var _constants = require("../../constants");

// $FlowFixMe - theme is not found in props
var getBaseColor = (0, _theme.themed)('appearance', {
  connectivity: {
    light: _theme.colors.B400,
    dark: _theme.colors.B100
  },
  confirmation: {
    light: _theme.colors.G300,
    dark: _theme.colors.G300
  },
  info: {
    light: _theme.colors.P300,
    dark: _theme.colors.P300
  },
  warning: {
    light: _theme.colors.Y300,
    dark: _theme.colors.Y300
  },
  error: {
    light: _theme.colors.R400,
    dark: _theme.colors.R400
  }
});
var getHoverColor = (0, _theme.themed)('appearance', {
  connectivity: {
    light: _theme.colors.B300,
    dark: _theme.colors.B75
  },
  confirmation: {
    light: _theme.colors.G200,
    dark: _theme.colors.G200
  },
  info: {
    light: _theme.colors.P200,
    dark: _theme.colors.P200
  },
  warning: {
    light: _theme.colors.Y200,
    dark: _theme.colors.Y200
  },
  error: {
    light: _theme.colors.R300,
    dark: _theme.colors.R300
  }
});

var getColor = function getColor(props) {
  if (props.isHovered || props.isOpen) return getHoverColor(props);
  return getBaseColor(props);
};

var IconWrapper = _styledComponents.default.span.withConfig({
  displayName: "styledIconForType__IconWrapper",
  componentId: "sc-1aldrej-0"
})(["\n  align-items: center;\n  display: flex;\n  flex: 0 0 auto;\n  padding: 0 ", ";\n  color: ", ";\n"], _constants.itemSpacing, getColor);

var _default = IconWrapper;
exports.default = _default;