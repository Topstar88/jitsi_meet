"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Text = exports.Title = exports.ButtonContents = exports.Root = void 0;

var _styledComponents = _interopRequireWildcard(require("styled-components"));

var _theme = require("@atlaskit/theme");

var _constants = require("../../constants");

var getFocusColor = (0, _theme.themed)('appearance', {
  connectivity: {
    light: _theme.colors.B500,
    dark: _theme.colors.B200
  },
  confirmation: {
    light: _theme.colors.G400,
    dark: _theme.colors.G400
  },
  info: {
    light: _theme.colors.P500,
    dark: _theme.colors.P300
  },
  warning: {
    light: _theme.colors.Y500,
    dark: _theme.colors.Y500
  },
  error: {
    light: _theme.colors.R500,
    dark: _theme.colors.R500
  }
});

var Root = _styledComponents.default.div.withConfig({
  displayName: "styledInlineMessage__Root",
  componentId: "sc-1o0swkp-0"
})(["\n  display: inline-block;\n  max-width: 100%;\n  &:focus {\n    outline: 1px solid ", ";\n  }\n"], getFocusColor);

exports.Root = Root;

var ButtonContents = _styledComponents.default.div.withConfig({
  displayName: "styledInlineMessage__ButtonContents",
  componentId: "sc-1o0swkp-1"
})(["\n  align-items: center;\n  display: flex;\n  text-decoration: none;\n  ", ";\n"], function (_ref) {
  var isHovered = _ref.isHovered;
  return isHovered && (0, _styledComponents.css)(["\n      color: ", ";\n      text-decoration: underline;\n    "], _theme.colors.N600);
});

exports.ButtonContents = ButtonContents;
var getTitleColor = (0, _theme.themed)({
  light: _theme.colors.N600,
  dark: _theme.colors.DN600
});
var getTextColor = (0, _theme.themed)({
  light: _theme.colors.N300,
  dark: _theme.colors.DN100
});

var Title = _styledComponents.default.span.withConfig({
  displayName: "styledInlineMessage__Title",
  componentId: "sc-1o0swkp-2"
})(["\n  color: ", ";\n  font-weight: 500;\n  padding: 0 ", "px;\n"], getTitleColor, _constants.itemSpacing);

exports.Title = Title;

var Text = _styledComponents.default.span.withConfig({
  displayName: "styledInlineMessage__Text",
  componentId: "sc-1o0swkp-3"
})(["\n  color: ", ";\n  padding: 0 ", "px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n"], getTextColor, _constants.itemSpacing);

exports.Text = Text;