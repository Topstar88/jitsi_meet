"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _styledComponents = _interopRequireWildcard(require("styled-components"));

var _theme = require("@atlaskit/theme");

var _constants = require("./constants");

var colorOptions = {
  bgChecked: (0, _theme.themed)({
    light: _theme.colors.G400,
    dark: _theme.colors.G300
  }),
  bgCheckedHover: (0, _theme.themed)({
    light: _theme.colors.G300,
    dark: _theme.colors.G200
  }),
  // hover go lighter
  bgCheckedDisabled: (0, _theme.themed)({
    light: _theme.colors.N20,
    dark: _theme.colors.DN70
  }),
  bgUnchecked: (0, _theme.themed)({
    light: _theme.colors.N200,
    dark: _theme.colors.DN70
  }),
  bgUncheckedHover: (0, _theme.themed)({
    light: _theme.colors.N70,
    dark: _theme.colors.DN60
  }),
  bgUncheckedDisabled: (0, _theme.themed)({
    light: _theme.colors.N20,
    dark: _theme.colors.DN70
  })
};

var getBgColor = function getBgColor(_ref) {
  var isChecked = _ref.isChecked,
      isDisabled = _ref.isDisabled,
      rest = (0, _objectWithoutProperties2.default)(_ref, ["isChecked", "isDisabled"]);
  var color = colorOptions.bgUnchecked;
  if (isChecked) color = colorOptions.bgChecked;
  if (isDisabled && !isChecked) color = colorOptions.bgUncheckedDisabled;
  if (isDisabled && isChecked) color = colorOptions.bgCheckedDisabled;
  return color(rest);
};

var getHoverStyles = function getHoverStyles(_ref2) {
  var isChecked = _ref2.isChecked,
      isDisabled = _ref2.isDisabled,
      rest = (0, _objectWithoutProperties2.default)(_ref2, ["isChecked", "isDisabled"]);
  var bgcolor;

  if (!isDisabled) {
    bgcolor = isChecked ? colorOptions.bgCheckedHover : colorOptions.bgUncheckedHover;
  }

  return (0, _styledComponents.css)(["\n    &:hover {\n      ", ";\n      cursor: ", ";\n    }\n  "], bgcolor ? (0, _styledComponents.css)(["\n            background-color: ", ";\n          "], bgcolor(rest)) : '', isDisabled ? 'not-allowed' : 'pointer');
};

var getBorderColor = function getBorderColor(_ref3) {
  var isFocused = _ref3.isFocused,
      rest = (0, _objectWithoutProperties2.default)(_ref3, ["isFocused"]);
  return isFocused ? (0, _theme.themed)({
    light: _theme.colors.B100,
    dark: _theme.colors.B75
  })(rest) : 'transparent';
};

var _default = _styledComponents.default.div.withConfig({
  displayName: "Slide",
  componentId: "bnah1s-0"
})(["\n  background-clip: content-box;\n  background-color: ", ";\n  border-radius: ", "px;\n  border: ", " solid ", ";\n  display: block;\n  height: ", "px;\n  padding: ", ";\n  position: relative;\n  transition: ", ";\n  width: ", "px;\n\n  ", ";\n"], getBgColor, _constants.getHeight, _constants.borderWidth, getBorderColor, _constants.getHeight, _constants.borderWidth, _constants.transition, _constants.getWidth, getHoverStyles);

exports.default = _default;