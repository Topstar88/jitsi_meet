"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
var _exportNames = {
  AtlasKitThemeProvider: true,
  borderRadius: true,
  gridSize: true,
  fontSize: true,
  fontSizeSmall: true,
  fontFamily: true,
  codeFontFamily: true,
  layers: true,
  assistive: true,
  colors: true,
  elevation: true,
  typography: true,
  math: true,
  getTheme: true,
  themed: true,
  AtlaskitThemeProvider: true,
  Appearance: true
};
Object.defineProperty(exports, "getTheme", {
  enumerable: true,
  get: function get() {
    return _getTheme.default;
  }
});
Object.defineProperty(exports, "themed", {
  enumerable: true,
  get: function get() {
    return _themed.default;
  }
});
Object.defineProperty(exports, "AtlaskitThemeProvider", {
  enumerable: true,
  get: function get() {
    return _AtlaskitThemeProvider.default;
  }
});
Object.defineProperty(exports, "Appearance", {
  enumerable: true,
  get: function get() {
    return _Appearance.default;
  }
});
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function get() {
    return _Theme.default;
  }
});
exports.math = exports.typography = exports.elevation = exports.colors = exports.assistive = exports.layers = exports.codeFontFamily = exports.fontFamily = exports.fontSizeSmall = exports.fontSize = exports.gridSize = exports.borderRadius = exports.AtlasKitThemeProvider = void 0;

var _styledComponents = require("styled-components");

var colors = _interopRequireWildcard(require("./colors"));

exports.colors = colors;

var elevation = _interopRequireWildcard(require("./elevation"));

exports.elevation = elevation;

var typography = _interopRequireWildcard(require("./typography"));

exports.typography = typography;

var math = _interopRequireWildcard(require("./utils/math"));

exports.math = math;

var _getTheme = _interopRequireDefault(require("./utils/getTheme"));

var _themed = _interopRequireDefault(require("./utils/themed"));

var _AtlaskitThemeProvider = _interopRequireDefault(require("./components/AtlaskitThemeProvider"));

var _Appearance = _interopRequireDefault(require("./components/Appearance"));

var _Reset = require("./components/Reset");

Object.keys(_Reset).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _Reset[key];
    }
  });
});

var _Theme = _interopRequireDefault(require("./components/Theme"));

var _hoc = require("./hoc");

Object.keys(_hoc).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _hoc[key];
    }
  });
});

var _createTheme = require("./utils/createTheme");

Object.keys(_createTheme).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _createTheme[key];
    }
  });
});
// backwards-compatible export with old Atlaskit case
var AtlasKitThemeProvider = _AtlaskitThemeProvider.default;
/*
  These theme values are expressed as functions so that if we decide to make
  them dependent on props in the future, it wouldn't require a significant
  refactor everywhere they are being used.
*/

exports.AtlasKitThemeProvider = AtlasKitThemeProvider;

var borderRadius = function borderRadius() {
  return 3;
};

exports.borderRadius = borderRadius;

var gridSize = function gridSize() {
  return 8;
};

exports.gridSize = gridSize;

var fontSize = function fontSize() {
  return 14;
};

exports.fontSize = fontSize;

var fontSizeSmall = function fontSizeSmall() {
  return 11;
};

exports.fontSizeSmall = fontSizeSmall;

var fontFamily = function fontFamily() {
  return '-apple-system, BlinkMacSystemFont, "Segoe UI", "Roboto", "Oxygen", "Ubuntu", "Fira Sans", "Droid Sans", "Helvetica Neue", sans-serif';
};

exports.fontFamily = fontFamily;

var codeFontFamily = function codeFontFamily() {
  return '"SFMono-Medium", "SF Mono", "Segoe UI Mono", "Roboto Mono", "Ubuntu Mono", Menlo, Consolas, Courier, monospace';
};

exports.codeFontFamily = codeFontFamily;
var layers = {
  card: function card() {
    return 100;
  },
  dialog: function dialog() {
    return 200;
  },
  navigation: function navigation() {
    return 300;
  },
  layer: function layer() {
    return 400;
  },
  blanket: function blanket() {
    return 500;
  },
  modal: function modal() {
    return 510;
  },
  flag: function flag() {
    return 600;
  },
  spotlight: function spotlight() {
    return 700;
  },
  tooltip: function tooltip() {
    return 800;
  }
};
exports.layers = layers;

var assistive = function assistive() {
  return (0, _styledComponents.css)(["\n  border: 0 !important;\n  clip: rect(1px, 1px, 1px, 1px) !important;\n  height: 1px !important;\n  overflow: hidden !important;\n  padding: 0 !important;\n  position: absolute !important;\n  width: 1px !important;\n  white-space: nowrap !important;\n"]);
}; // New API


exports.assistive = assistive;