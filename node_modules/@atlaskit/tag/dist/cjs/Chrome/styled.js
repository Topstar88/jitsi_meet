"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Span = void 0;

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _theme = require("@atlaskit/theme");

var _constants = require("../constants");

var _theme2 = require("../theme");

var gridSizeUnitless = (0, _theme.gridSize)();
var colorRemoval = (0, _theme.themed)({
  light: _theme.colors.R500,
  dark: _theme.colors.DN30
});
var colorRemovalHover = (0, _theme.themed)({
  light: _theme.colors.N700,
  dark: _theme.colors.DN30
});
var backgroundColorRemoval = (0, _theme.themed)({
  light: _theme.colors.R50,
  dark: _theme.colors.R100
});

var Span = _styledComponents.default.span.withConfig({
  displayName: "styled__Span",
  componentId: "sc-19s9he1-0"
})(["\n  &:focus {\n    box-shadow: 0 0 0 2px ", ";\n    outline: none;\n  }\n\n  background-color: ", ";\n  color: ", ";\n  border-radius: ", ";\n  cursor: default;\n  display: flex;\n  height: ", ";\n  line-height: 1;\n  margin: ", "px;\n  padding: 0;\n  overflow: ", ";\n\n  &:hover {\n    box-shadow: none;\n    background-color: ", ";\n    color: ", ";\n  }\n"], _constants.focusRingColor, function (p) {
  return p.markedForRemoval ? backgroundColorRemoval(p) : (0, _theme2.backgroundColor)(p);
}, function (p) {
  return p.markedForRemoval ? colorRemoval(p) : (0, _theme2.textColor)(p);
}, function (_ref) {
  var isRounded = _ref.isRounded;
  return isRounded ? "".concat(_constants.buttonWidthUnitless / 2, "px") : "".concat((0, _theme.borderRadius)(), "px");
}, _constants.tagHeight, gridSizeUnitless / 2, function (_ref2) {
  var isRemoved = _ref2.isRemoved,
      isRemoving = _ref2.isRemoving;
  return isRemoved || isRemoving ? 'hidden' : 'initial';
}, function (p) {
  return p.markedForRemoval ? backgroundColorRemoval(p) : (0, _theme2.backgroundColorHover)(p);
}, function (p) {
  return p.markedForRemoval ? colorRemovalHover(p) : (0, _theme2.textColorHover)(p);
});

exports.Span = Span;