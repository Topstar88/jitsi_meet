"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Link = exports.linkStyles = exports.Text = void 0;

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _styledComponents = _interopRequireWildcard(require("styled-components"));

var _theme = require("@atlaskit/theme");

var _constants = require("../constants");

// Common styles for Text & Link
var COMMON_STYLES = (0, _styledComponents.css)(["\n  font-size: ", "px;\n  font-weight: normal;\n  line-height: 1;\n  margin-left: ", "px;\n  margin-right: ", "px;\n  padding: 2px 0;\n  max-width: ", ";\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n"], _theme.fontSize, _theme.math.divide(_theme.gridSize, 2), _theme.math.divide(_theme.gridSize, 2), function (_ref) {
  var isRemovable = _ref.isRemovable;
  return isRemovable ? "".concat(_constants.maxTextWidthUnitless - _constants.buttonWidthUnitless, "px") : _constants.maxTextWidth;
});

var Text = _styledComponents.default.span.withConfig({
  displayName: "styled__Text",
  componentId: "sc-17jb35i-0"
})(["\n  ", ";\n"], COMMON_STYLES); // Styles exclusive to Link


exports.Text = Text;

var getFocusedStyles = function getFocusedStyles(_ref2) {
  var isFocused = _ref2.isFocused,
      color = _ref2.color,
      rest = (0, _objectWithoutProperties2.default)(_ref2, ["isFocused", "color"]);
  if (color !== 'standard') return (0, _styledComponents.css)(["\n      color: inherit;\n    "]);
  if (isFocused) return (0, _styledComponents.css)(["\n      color: ", ";\n    "], _theme.colors.link(rest));
  return null;
};

var linkStyles = (0, _styledComponents.css)(["\n  ", " ", " text-decoration: ", ";\n\n  &:hover {\n    color: ", ";\n    ", ";\n  }\n"], COMMON_STYLES, getFocusedStyles, function (_ref3) {
  var color = _ref3.color;
  return color === 'standard' ? 'none' : 'underline';
}, _theme.colors.linkHover, function (_ref4) {
  var color = _ref4.color;
  return color === 'standard' ? '' : (0, _styledComponents.css)(["\n            color: inherit;\n          "]);
});
exports.linkStyles = linkStyles;

var Link = _styledComponents.default.a.withConfig({
  displayName: "styled__Link",
  componentId: "sc-17jb35i-1"
})(["\n  ", ";\n"], linkStyles);

exports.Link = Link;