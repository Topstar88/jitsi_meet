"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread"));

var _typeof2 = _interopRequireDefault(require("@babel/runtime/helpers/typeof"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var AnalyticsEvent =
/*#__PURE__*/
function () {
  function AnalyticsEvent(props) {
    var _this = this;

    (0, _classCallCheck2.default)(this, AnalyticsEvent);
    (0, _defineProperty2.default)(this, "payload", void 0);
    (0, _defineProperty2.default)(this, "clone", function () {
      // We stringify and parse here to get a hacky "deep clone" of the object.
      // This has some limitations in that it wont support functions, regexs, Maps, Sets, etc,
      // but none of those need to be represented in our payload, so we consider this fine
      var payload = JSON.parse(JSON.stringify(_this.payload));
      return new AnalyticsEvent({
        payload: payload
      });
    });
    this.payload = props.payload;
  }

  (0, _createClass2.default)(AnalyticsEvent, [{
    key: "update",
    value: function update(updater) {
      if (typeof updater === 'function') {
        this.payload = updater(this.payload);
      } else if ((0, _typeof2.default)(updater) === 'object') {
        this.payload = (0, _objectSpread2.default)({}, this.payload, updater);
      }

      return this;
    }
  }]);
  return AnalyticsEvent;
}();

exports.default = AnalyticsEvent;