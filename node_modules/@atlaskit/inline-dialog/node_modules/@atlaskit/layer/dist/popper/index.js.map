{"version":3,"file":"popper.es5.js.map","sources":["../src/popper/utils/getOffsetParent.js","../src/popper/utils/getStyleComputedProperty.js","../src/popper/utils/getParentNode.js","../src/popper/utils/getScrollParent.js","../src/popper/utils/isFixed.js","../src/popper/utils/getPosition.js","../src/popper/utils/getBordersSize.js","../src/popper/utils/getBoundingClientRect.js","../src/popper/utils/getScroll.js","../src/popper/utils/includeScroll.js","../src/popper/utils/getOffsetRectRelativeToCustomParent.js","../src/popper/utils/getWindowSizes.js","../src/popper/utils/getOffsetRect.js","../src/popper/utils/getOffsetRectRelativeToViewport.js","../src/popper/utils/getTotalScroll.js","../src/popper/utils/getBoundaries.js","../src/popper/utils/computeAutoPlacement.js","../src/popper/utils/debounce.js","../src/popper/utils/find.js","../src/popper/utils/findIndex.js","../src/popper/utils/getClientRect.js","../src/popper/utils/getOuterSizes.js","../src/popper/utils/getOppositePlacement.js","../src/popper/utils/getPopperOffsets.js","../src/popper/utils/getReferenceOffsets.js","../src/popper/utils/getSupportedPropertyName.js","../src/popper/utils/isFunction.js","../src/popper/utils/isModifierEnabled.js","../src/popper/utils/isModifierRequired.js","../src/popper/utils/isNumeric.js","../src/popper/utils/isTransformed.js","../src/popper/utils/removeEventListeners.js","../src/popper/utils/runModifiers.js","../src/popper/utils/setAttributes.js","../src/popper/utils/setStyles.js","../src/popper/utils/setupEventListeners.js","../src/popper/utils/index.js","../src/popper/modifiers/applyStyle.js","../src/popper/modifiers/arrow.js","../src/popper/utils/getOppositeVariation.js","../src/popper/modifiers/flip.js","../src/popper/modifiers/keepTogether.js","../src/popper/modifiers/offset.js","../src/popper/modifiers/preventOverflow.js","../src/popper/modifiers/shift.js","../src/popper/modifiers/hide.js","../src/popper/modifiers/inner.js","../src/popper/modifiers/index.js","../src/popper/index.js"],"sourcesContent":["/**\n * Returns the offset parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} offset parent\n */\nexport default function getOffsetParent(element) {\n    // NOTE: 1 DOM access here\n    const offsetParent = element.offsetParent;\n    const nodeName = offsetParent && offsetParent.nodeName;\n\n    if(!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {\n        return window.document.documentElement;\n    }\n\n    return offsetParent;\n}\n","/**\n * Get CSS computed property of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Eement} element\n * @argument {String} property\n */\nexport default function getStyleComputedProperty(element, property) {\n    if (element.nodeType !== 1) {\n        return [];\n    }\n    // NOTE: 1 DOM access here\n    const css = window.getComputedStyle(element, null);\n    return property ? css[property] : css;\n}\n","/**\n * Returns the parentNode or the host of the element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} parent\n */\nexport default function getParentNode(element) {\n    if (element.nodeName === 'HTML') {\n        return element;\n    }\n    return element.parentNode || element.host;\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport getParentNode from './getParentNode';\n\n/**\n * Returns the scrolling parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} scroll parent\n */\nexport default function getScrollParent(element) {\n    // Return body, `getScroll` will take care to get the correct `scrollTop` from it\n    if (!element || ['HTML', 'BODY', '#document'].indexOf(element.nodeName) !== -1) {\n        return window.document.body;\n    }\n\n    // Firefox want us to check `-x` and `-y` variations as well\n    const { overflow, overflowX, overflowY } = getStyleComputedProperty(element);\n    if (/(auto|scroll)/.test(overflow + overflowY + overflowX)) {\n        return element;\n    }\n\n    return getScrollParent(getParentNode(element));\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport getParentNode from './getParentNode';\n\n/**\n * Check if the given element is fixed or is inside a fixed parent\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {Element} customContainer\n * @returns {Boolean} answer to \"isFixed?\"\n */\nexport default function isFixed(element) {\n    const nodeName = element.nodeName;\n    if (nodeName === 'BODY' || nodeName === 'HTML') {\n        return false;\n    }\n    if (getStyleComputedProperty(element, 'position') === 'fixed') {\n        return true;\n    }\n    return isFixed(getParentNode(element));\n}\n","import getOffsetParent from './getOffsetParent';\nimport isFixed from './isFixed';\n\n/**\n * Helper used to get the position which will be applied to the popper\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} element - popper element\n * @returns {String} position\n */\nexport default function getPosition(element) {\n    const container = getOffsetParent(element);\n\n    // Decide if the popper will be fixed\n    // If the reference element is inside a fixed context, the popper will be fixed as well to allow them to scroll together\n    const isParentFixed = isFixed(container);\n    return isParentFixed ? 'fixed' : 'absolute';\n}\n","/*\n * Helper to detect borders of a given element\n * @method\n * @memberof Popper.Utils\n * @param {CSSStyleDeclaration} styles - result of `getStyleComputedProperty` on the given element\n * @param {String} axis - `x` or `y`\n * @return {Number} borders - the borders size of the given axis\n */\n\nexport default function getBordersSize(styles, axis) {\n    const sideA = axis === 'x' ? 'Left' : 'Top';\n    const sideB = sideA === 'Left' ? 'Right' : 'Bottom';\n\n    return Number(styles[`border${sideA}Width`].split('px')[0]) + Number(styles[`border${sideB}Width`].split('px')[0]);\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport getBordersSize from './getBordersSize';\n\n/**\n * Get bounding client rect of given element\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} element\n * @return {Object} client rect\n */\nexport default function getBoundingClientRect(element) {\n    const isIE10 = navigator.appVersion.indexOf('MSIE 10') !== -1;\n    let rect;\n\n    // IE10 10 FIX: Please, don't ask, the element isn't\n    // considered in DOM in some circumstances...\n    // This isn't reproducible in IE10 compatibility mode of IE11\n    if (isIE10) {\n        try {\n            rect = element.getBoundingClientRect();\n        } catch(err) {\n            rect = {};\n        }\n    } else {\n        rect = element.getBoundingClientRect();\n    }\n\n    const result = {\n        left: rect.left,\n        top: rect.top,\n        right: rect.right,\n        bottom: rect.bottom,\n        width: rect.right - rect.left,\n        height: rect.bottom - rect.top,\n    };\n\n    // IE10 FIX: `getBoundingClientRect`, when executed on `documentElement`\n    // will not take in account the `scrollTop` and `scrollLeft`\n    if (element.nodeName === 'HTML' && isIE10) {\n        const { scrollTop, scrollLeft } = window.document.documentElement;\n        result.top -= scrollTop;\n        result.bottom -= scrollTop;\n        result.left -= scrollLeft;\n        result.right -= scrollLeft;\n    }\n\n    // subtract scrollbar size from sizes\n    let horizScrollbar = rect.width - (element.clientWidth || rect.right - rect.left);\n    let vertScrollbar = rect.height - (element.clientHeight || rect.bottom - rect.top);\n\n    // if an hypothetical scrollbar is detected, we must be sure it's not a `border`\n    // we make this check conditional for performance reasons\n    if (horizScrollbar || vertScrollbar) {\n        const styles = getStyleComputedProperty(element);\n        horizScrollbar -= getBordersSize(styles, 'x');\n        vertScrollbar -= getBordersSize(styles, 'y');\n    }\n\n    result.right -= horizScrollbar;\n    result.width -= horizScrollbar;\n    result.bottom -= vertScrollbar;\n    result.height -= vertScrollbar;\n\n    return result;\n}\n","export default function getScroll(element, side = 'top') {\n    const upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';\n    const nodeName = element.nodeName;\n\n    if (nodeName === 'BODY' || nodeName === 'HTML') {\n        const html = window.document.documentElement;\n        const scrollingElement = window.document.scrollingElement || html;\n        return scrollingElement[upperSide];\n    }\n\n    return element[upperSide];\n}\n","import getScroll from './getScroll';\n\n/*\n * Sum or subtract the element scroll values (left and top) from a given rect object\n * @method\n * @memberof Popper.Utils\n * @param {Object} rect - Rect object you want to change\n * @param {HTMLElement} element - The element from the function reads the scroll values\n * @param {Boolean} subtract - set to true if you want to subtract the scroll values\n * @return {Object} rect - The modifier rect object\n */\nexport default function includeScroll(rect, element, subtract = false) {\n    const scrollTop = getScroll(element, 'top');\n    const scrollLeft = getScroll(element, 'left');\n    const modifier = subtract ? -1 : 1;\n    rect.top += scrollTop * modifier;\n    rect.bottom += scrollTop * modifier;\n    rect.left += scrollLeft * modifier;\n    rect.right += scrollLeft * modifier;\n    return rect;\n}\n","import getBoundingClientRect from './getBoundingClientRect';\nimport getScrollParent from './getScrollParent';\nimport includeScroll from './includeScroll';\nimport getOffsetParent from './getOffsetParent';\nimport getStyleComputedProperty from './getStyleComputedProperty';\n\n/**\n * Given an element and one of its parents, return the offset\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} element\n * @param {HTMLElement} parent\n * @return {Object} rect\n */\nexport default function getOffsetRectRelativeToCustomParent(element, parent, fixed = false, transformed = false) {\n    const scrollParent = getScrollParent(parent);\n    const elementRect = getBoundingClientRect(element);\n    const parentRect = getBoundingClientRect(parent);\n\n    let rect = {\n        top: elementRect.top - parentRect.top,\n        left: elementRect.left - parentRect.left,\n        bottom: (elementRect.top - parentRect.top) + elementRect.height,\n        right: (elementRect.left - parentRect.left) + elementRect.width,\n        width: elementRect.width,\n        height: elementRect.height,\n    };\n\n    if (fixed && !transformed) {\n        rect = includeScroll(rect, scrollParent, true)\n    }\n    // When a popper doesn't have any positioned or scrollable parents, `offsetParent.contains(scrollParent)`\n    // will return a \"false positive\". This is happening because `getOffsetParent` returns `html` node,\n    // and `scrollParent` is the `body` node. Hence the additional check.\n    else if (getOffsetParent(element).contains(scrollParent) && scrollParent.nodeName !== 'BODY') {\n        rect = includeScroll(rect, parent)\n    }\n\n    // subtract borderTopWidth and borderTopWidth from final result\n    const styles = getStyleComputedProperty(parent);\n    const borderTopWidth = Number(styles.borderTopWidth.split('px')[0]);\n    const borderLeftWidth = Number(styles.borderLeftWidth.split('px')[0]);\n\n    rect.top -= borderTopWidth;\n    rect.bottom -= borderTopWidth;\n    rect.left -= borderLeftWidth;\n    rect.right -= borderLeftWidth;\n\n    return rect;\n}\n","export default function getWindowSizes() {\n    const body = window.document.body;\n    const html = window.document.documentElement;\n    return {\n        height: Math.max(body.scrollHeight, body.offsetHeight, html.clientHeight, html.scrollHeight, html.offsetHeight),\n        width: Math.max(body.scrollWidth, body.offsetWidth, html.clientWidth, html.scrollWidth, html.offsetWidth),\n    };\n}\n","import getWindowSizes from './getWindowSizes';\n\n/**\n * Get the position of the given element, relative to its offset parent\n * @method\n * @memberof Popper.Utils\n * @param {Element} element\n * @return {Object} position - Coordinates of the element and its `scrollTop`\n */\nexport default function getOffsetRect(element) {\n    let elementRect;\n    if (element.nodeName === 'HTML') {\n        const { width, height } = getWindowSizes();\n        elementRect = {\n            width,\n            height,\n            left: 0,\n            top: 0,\n        };\n    }\n    else {\n        elementRect = {\n            width: element.offsetWidth,\n            height: element.offsetHeight,\n            left: element.offsetLeft,\n            top: element.offsetTop,\n        };\n    }\n\n    elementRect.right = elementRect.left + elementRect.width;\n    elementRect.bottom = elementRect.top + elementRect.height;\n\n    // position\n    return elementRect;\n}\n","import getOffsetRect from './getOffsetRect';\nimport getOffsetParent from './getOffsetParent';\n\nexport default function getOffsetRectRelativeToViewport(element) {\n    // Offset relative to offsetParent\n    const relativeOffset = getOffsetRect(element);\n\n    if (element.nodeName !== 'HTML') {\n        const offsetParent = getOffsetParent(element);\n        const parentOffset = getOffsetRectRelativeToViewport(offsetParent);\n        const offset = {\n            width: relativeOffset.offsetWidth,\n            height: relativeOffset.offsetHeight,\n            left: relativeOffset.left + parentOffset.left,\n            top: relativeOffset.top + parentOffset.top,\n            right: relativeOffset.right - parentOffset.right,\n            bottom: relativeOffset.bottom - parentOffset.bottom,\n        };\n        return offset;\n    }\n\n    return relativeOffset;\n}\n","import getScrollParent from './getScrollParent';\nimport getScroll from './getScroll';\nimport getParentNode from './getParentNode';\n\nexport default function getTotalScroll(element, side = 'top') {\n    const scrollParent = getScrollParent(element);\n    const scroll = getScroll(scrollParent, side);\n\n    if (['BODY', 'HTML'].indexOf(scrollParent.nodeName) === -1) {\n        return scroll + getTotalScroll(getParentNode(scrollParent), side);\n    }\n    return scroll;\n}\n","import getOffsetParent from './getOffsetParent';\nimport getScrollParent from './getScrollParent';\nimport getParentNode from './getParentNode';\nimport getPosition from './getPosition';\nimport getOffsetRectRelativeToCustomParent from './getOffsetRectRelativeToCustomParent';\nimport getOffsetRectRelativeToViewport from './getOffsetRectRelativeToViewport';\nimport getTotalScroll from './getTotalScroll';\nimport isFixed from './isFixed';\nimport getWindowSizes from './getWindowSizes';\n\n/**\n * Computed the boundaries limits and return them\n * @method\n * @memberof Popper.Utils\n * @param {Object} data - Object containing the property \"offsets\" generated by `_getOffsets`\n * @param {Number} padding - Boundaries padding\n * @param {Element} boundariesElement - Element used to define the boundaries\n * @returns {Object} Coordinates of the boundaries\n */\nexport default function getBoundaries(popper, padding, boundariesElement) {\n    // NOTE: 1 DOM access here\n    let boundaries = { top: 0, left: 0 };\n    const offsetParent = getOffsetParent(popper);\n\n    // Handle viewport case\n    if (boundariesElement === 'viewport') {\n        const { left, top } = getOffsetRectRelativeToViewport(offsetParent);\n        const { clientWidth: width, clientHeight: height } = window.document.documentElement;\n\n        if (getPosition(popper) === 'fixed') {\n            boundaries.right = width;\n            boundaries.bottom = height;\n        } else {\n            const scrollLeft = getTotalScroll(popper, 'left');\n            const scrollTop = getTotalScroll(popper, 'top');\n\n            boundaries = {\n                top: 0 - top,\n                right: width - left + scrollLeft,\n                bottom: height - top + scrollTop,\n                left: 0 - left,\n            };\n        }\n    }\n    // Handle other cases based on DOM element used as boundaries\n    else {\n        let boundariesNode;\n        if (boundariesElement === 'scrollParent') {\n            boundariesNode = getScrollParent(getParentNode(popper));\n        } else if (boundariesElement === 'window') {\n            boundariesNode = window.document.body;\n        } else {\n            boundariesNode = boundariesElement;\n        }\n\n        // In case of BODY, we need a different computation\n        if (boundariesNode.nodeName === 'BODY') {\n            const { height, width } = getWindowSizes();\n            boundaries.right = width;\n            boundaries.bottom = height;\n        }\n        // for all the other DOM elements, this one is good\n        else {\n            boundaries = getOffsetRectRelativeToCustomParent(boundariesNode, offsetParent, isFixed(popper));\n        }\n    }\n\n    // Add paddings\n    boundaries.left += padding;\n    boundaries.top += padding;\n    boundaries.right -= padding;\n    boundaries.bottom -= padding;\n\n    return boundaries;\n}\n","import getBoundaries from '../utils/getBoundaries';\n\n/**\n * Utility used to transform the `auto` placement to the placement with more\n * available space.\n * @method\n * @memberof Popper.Utils\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function computeAutoPlacement(placement, refRect, popper) {\n    if (placement.indexOf('auto') === -1) {\n        return placement;\n    }\n\n    const boundaries = getBoundaries(popper, 0, 'scrollParent');\n\n    const sides = {\n        top: refRect.top - boundaries.top,\n        right: boundaries.right - refRect.right,\n        bottom: boundaries.bottom - refRect.bottom,\n        left: refRect.left - boundaries.left,\n    };\n\n    const computedPlacement = Object.keys(sides).sort((a, b) => sides[b] - sides[a])[0];\n    const variation = placement.split('-')[1];\n\n    return computedPlacement + (variation ? `-${variation}` : '');\n}\n","const isBrowser = typeof window !== 'undefined' && typeof window.document !== 'undefined';\nconst longerTimeoutBrowsers = ['Edge', 'Trident', 'Firefox'];\nlet timeoutDuration = 0;\nfor (let i = 0; i < longerTimeoutBrowsers.length; i += 1) {\n  if (isBrowser && navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0) {\n    timeoutDuration = 1;\n    break;\n  }\n}\n\nexport function microtaskDebounce(fn) {\n  let called = false\n  return () => {\n    if (called) {\n      return\n    }\n    called = true\n    Promise.resolve().then(() => {\n      called = false\n      fn()\n    })\n  }\n}\n\nexport function taskDebounce(fn) {\n  let scheduled = false;\n  return () => {\n    if (!scheduled) {\n      scheduled = true;\n      setTimeout(() => {\n        scheduled = false;\n        fn();\n      }, timeoutDuration);\n    }\n  };\n}\n\nconst supportsMicroTasks = isBrowser && window.Promise\n\n\n/**\n* Create a debounced version of a method, that's asynchronously deferred\n* but called in the minimum time possible.\n*\n* @method\n* @memberof Popper.Utils\n* @argument {Function} fn\n* @returns {Function}\n*/\nexport default (supportsMicroTasks\n  ? microtaskDebounce\n  : taskDebounce);\n","/**\n * Mimics the `find` method of Array\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nexport default function find(arr, check) {\n    // use native find if supported\n    if (Array.prototype.find) {\n        return arr.find(check);\n    }\n\n    // use `filter` to obtain the same behavior of `find`\n    return arr.filter(check)[0];\n}\n","import find from './find';\n\n/**\n * Return the index of the matching object\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nexport default function findIndex(arr, prop, value) {\n    // use native findIndex if supported\n    if (Array.prototype.findIndex) {\n        return arr.findIndex((cur) => cur[prop] === value);\n    }\n\n    // use `find` + `indexOf` if `findIndex` isn't supported\n    const match = find(arr, (obj) => (obj[prop] === value));\n    return arr.indexOf(match);\n}\n","/**\n * Given the popper offsets, generate an output similar to getBoundingClientRect\n * @method\n * @memberof Popper.Utils\n * @argument {Object} popperOffsets\n * @returns {Object} ClientRect like output\n */\nexport default function getClientRect(popperOffsets) {\n    return {\n        ...popperOffsets,\n        right: popperOffsets.left + popperOffsets.width,\n        bottom: popperOffsets.top + popperOffsets.height,\n    };\n}\n","/**\n * Get the outer sizes of the given element (offset size + margins)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Object} object containing width and height properties\n */\nexport default function getOuterSizes(element) {\n    const styles = window.getComputedStyle(element);\n    const x = parseFloat(styles.marginTop) + parseFloat(styles.marginBottom);\n    const y = parseFloat(styles.marginLeft) + parseFloat(styles.marginRight);\n    const result = {\n        width: element.offsetWidth + y,\n        height: element.offsetHeight + x\n    };\n    return result;\n}\n","/**\n * Get the opposite placement of the given one/\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement\n * @returns {String} flipped placement\n */\nexport default function getOppositePlacement(placement) {\n    const hash = {left: 'right', right: 'left', bottom: 'top', top: 'bottom' };\n    return placement.replace(/left|right|bottom|top/g, (matched) => hash[matched]);\n}\n","import getOuterSizes from './getOuterSizes';\nimport getOppositePlacement from './getOppositePlacement';\n\n/**\n * Get offsets to the popper\n * @method\n * @memberof Popper.Utils\n * @param {Object} position - CSS position the Popper will get applied\n * @param {HTMLElement} popper - the popper element\n * @param {Object} referenceOffsets - the reference offsets (the popper will be relative to this)\n * @param {String} placement - one of the valid placement options\n * @returns {Object} popperOffsets - An object containing the offsets which will be applied to the popper\n */\nexport default function getPopperOffsets(position, popper, referenceOffsets, placement) {\n    placement = placement.split('-')[0];\n\n    // Get popper node sizes\n    const popperRect = getOuterSizes(popper);\n\n    // Add position, width and height to our offsets object\n    const popperOffsets = {\n        position,\n        width: popperRect.width,\n        height: popperRect.height,\n    };\n\n    // depending by the popper placement we have to compute its offsets slightly differently\n    const isHoriz = ['right', 'left'].indexOf(placement) !== -1;\n    const mainSide = isHoriz ? 'top' : 'left';\n    const secondarySide = isHoriz ? 'left' : 'top';\n    const measurement = isHoriz ? 'height' : 'width';\n    const secondaryMeasurement = !isHoriz ? 'height' : 'width';\n\n    popperOffsets[mainSide] = referenceOffsets[mainSide] + referenceOffsets[measurement] / 2 - popperRect[measurement] / 2;\n    if (placement === secondarySide) {\n        popperOffsets[secondarySide] = referenceOffsets[secondarySide] - popperRect[secondaryMeasurement];\n    } else {\n        popperOffsets[secondarySide] = referenceOffsets[getOppositePlacement(secondarySide)];\n    }\n\n    return popperOffsets;\n}\n","import getOffsetParent from './getOffsetParent';\nimport getOffsetRectRelativeToCustomParent from './getOffsetRectRelativeToCustomParent';\n\n/**\n * Get offsets to the reference element\n * @method\n * @memberof Popper.Utils\n * @param {Object} state\n * @param {Element} popper - the popper element\n * @param {Element} reference - the reference element (the popper will be relative to this)\n * @returns {Object} An object containing the offsets which will be applied to the popper\n */\nexport default function getReferenceOffsets(state, popper, reference) {\n    const isParentFixed = state.position === 'fixed';\n    const isParentTransformed = state.isParentTransformed;\n    const offsetParent = getOffsetParent((isParentFixed && isParentTransformed) ? reference : popper);\n\n    return getOffsetRectRelativeToCustomParent(reference, offsetParent, isParentFixed, isParentTransformed);\n}\n","/**\n * Get the prefixed supported property name\n * @method\n * @memberof Popper.Utils\n * @argument {String} property (camelCase)\n * @returns {String} prefixed property (camelCase)\n */\nexport default function getSupportedPropertyName(property) {\n    const prefixes = [false, 'ms', 'webkit', 'moz', 'o'];\n    const upperProp = property.charAt(0).toUpperCase() + property.slice(1);\n\n    for (let i = 0; i < prefixes.length -1; i++) {\n        const prefix = prefixes[i];\n        const toCheck = prefix ? `${prefix}${upperProp}` : property;\n        if (typeof window.document.body.style[toCheck] !== 'undefined') {\n            return toCheck;\n        }\n    }\n    return null;\n}\n","/**\n * Check if the given variable is a function\n * @method\n * @memberof Popper.Utils\n * @argument {*} functionToCheck - variable to check\n * @returns {Boolean} answer to: is a function?\n */\nexport default function isFunction(functionToCheck) {\n    const getType = {};\n    return functionToCheck && getType.toString.call(functionToCheck) === '[object Function]';\n}\n","/**\n * Helper used to know if the given modifier is enabled.\n * @method\n * @memberof Popper.Utils\n * @returns {Boolean}\n */\n export default function isModifierEnabled(modifiers, modifierName) {\n     return modifiers.some(({ name, enabled }) => enabled && name === modifierName );\n }\n","import find from './find';\n\n/**\n * Helper used to know if the given modifier depends from another one.\n * It checks if the needed modifier is listed and enabled.\n * @method\n * @memberof Popper.Utils\n * @param {Array} modifiers - list of modifiers\n * @param {String} requestingName - name of requesting modifier\n * @param {String} requestedName - name of requested modifier\n * @returns {Boolean}\n */\nexport default function isModifierRequired(modifiers, requestingName, requestedName) {\n    const requesting = find(modifiers, ({ name }) => name === requestingName);\n\n    return !!requesting && modifiers.some((modifier) => {\n        return modifier.name === requestedName && modifier.enabled && modifier.order < requesting.order;\n    });\n}\n","/**\n * Tells if a given input is a number\n * @method\n * @memberof Popper.Utils\n * @param {*} input to check\n * @return {Boolean}\n */\nexport default function isNumeric(n) {\n    return (n !== '' && !isNaN(parseFloat(n)) && isFinite(n));\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport getParentNode from './getParentNode';\n\n/**\n * Check if the given element has transforms applied to itself or a parent\n * @method\n * @memberof Popper.Utils\n * @param  {Element} element\n * @return {Boolean} answer to \"isTransformed?\"\n */\nexport default function isTransformed(element) {\n    if (element.nodeName === 'BODY') {\n        return false;\n    }\n    if (getStyleComputedProperty(element, 'transform') !== 'none') {\n        return true;\n    }\n    return getParentNode(element) ? isTransformed(getParentNode(element)) : element;\n}\n","/**\n * Remove event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nexport default function removeEventListeners(reference, state) {\n    // Remove resize event listener on window\n    window.removeEventListener('resize', state.updateBound);\n\n    // Remove scroll event listener on scroll parents\n    state.scrollParents.forEach(target => {\n        target.removeEventListener('scroll', state.updateBound);\n    });\n\n    // Reset state\n    state.updateBound = null;\n    state.scrollParents = [];\n    state.scrollElement = null;\n    state.eventsEnabled = false;\n    return state;\n}\n","import isFunction from './isFunction';\nimport findIndex from './findIndex';\n\n/**\n * Loop trough the list of modifiers and run them in order, each of them will then edit the data object\n * @method\n * @memberof Popper.Utils\n * @param {Object} data\n * @param {Array} modifiers\n * @param {Function} ends\n */\nexport default function runModifiers(modifiers, data, ends) {\n    const modifiersToRun = (ends === undefined) ?\n          modifiers :\n          modifiers.slice(0, findIndex(modifiers, 'name', ends));\n\n    modifiersToRun.forEach((modifier) => {\n        if (modifier.enabled && isFunction(modifier.function)) {\n            data = modifier.function(data, modifier);\n        }\n    });\n\n    return data;\n}\n","/**\n * Set the attributes to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the attributes to\n * @argument {Object} styles - Object with a list of properties and values which will be applied to the element\n */\nexport default function setAttributes(element, attributes) {\n    Object.keys(attributes).forEach(function(prop) {\n        const value = attributes[prop];\n        if (value !== false) {\n            element.setAttribute(prop, attributes[prop]);\n        } else {\n            element.removeAttribute(prop);\n        }\n    });\n}\n","import isNumeric from './isNumeric';\n\n/**\n * Set the style to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the style to\n * @argument {Object} styles - Object with a list of properties and values which will be applied to the element\n */\nexport default function setStyles(element, styles) {\n    Object.keys(styles).forEach((prop) => {\n        let unit = '';\n        // add unit if the value is numeric and is one of the following\n        if (['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !== -1 && isNumeric(styles[prop])) {\n            unit = 'px';\n        }\n        element.style[prop] = styles[prop] + unit;\n    });\n}\n","import getScrollParent from './getScrollParent';\n\nfunction attachToScrollParents(scrollParent, event, callback, scrollParents) {\n    const isBody = scrollParent.nodeName === 'BODY';\n    const target = isBody ? window : scrollParent;\n    target.addEventListener(event, callback, { passive: true });\n\n    if (!isBody) {\n        attachToScrollParents(getScrollParent(target.parentNode), event, callback, scrollParents);\n    }\n    scrollParents.push(target);\n}\n\n/**\n * Setup needed event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nexport default function setupEventListeners(reference, options, state, updateBound) {\n    // Resize event listener on window\n    state.updateBound = updateBound;\n    window.addEventListener('resize', state.updateBound, { passive: true });\n\n    // Scroll event listener on scroll parents\n    const scrollElement = getScrollParent(reference);\n    attachToScrollParents(\n        scrollElement,\n        'scroll',\n        state.updateBound,\n        state.scrollParents\n    );\n    state.scrollElement = scrollElement;\n    state.eventsEnabled = true;\n\n    return state;\n}\n","import computeAutoPlacement from './computeAutoPlacement';\nimport debounce from './debounce';\nimport findIndex from './findIndex';\nimport getBordersSize from './getBordersSize';\nimport getBoundaries from './getBoundaries';\nimport getBoundingClientRect from './getBoundingClientRect';\nimport getClientRect from './getClientRect';\nimport getOffsetParent from './getOffsetParent';\nimport getOffsetRect from './getOffsetRect';\nimport getOffsetRectRelativeToCustomParent from './getOffsetRectRelativeToCustomParent';\nimport getOuterSizes from './getOuterSizes';\nimport getParentNode from './getParentNode';\nimport getPopperOffsets from './getPopperOffsets';\nimport getPosition from './getPosition';\nimport getReferenceOffsets from './getReferenceOffsets';\nimport getScroll from './getScroll';\nimport getScrollParent from './getScrollParent';\nimport getStyleComputedProperty from './getStyleComputedProperty';\nimport getSupportedPropertyName from './getSupportedPropertyName';\nimport getTotalScroll from './getTotalScroll';\nimport getWindowSizes from './getWindowSizes';\nimport includeScroll from './includeScroll';\nimport isFixed from './isFixed';\nimport isFunction from './isFunction';\nimport isModifierEnabled from './isModifierEnabled';\nimport isModifierRequired from './isModifierRequired';\nimport isNumeric from './isNumeric';\nimport isTransformed from './isTransformed';\nimport removeEventListeners from './removeEventListeners';\nimport runModifiers from './runModifiers';\nimport setAttributes from './setAttributes';\nimport setStyles from './setStyles';\nimport setupEventListeners from './setupEventListeners';\n\n/** @namespace Popper.Utils */\nexport default {\n    computeAutoPlacement,\n    debounce,\n    findIndex,\n    getBordersSize,\n    getBoundaries,\n    getBoundingClientRect,\n    getClientRect,\n    getOffsetParent,\n    getOffsetRect,\n    getOffsetRectRelativeToCustomParent,\n    getOuterSizes,\n    getParentNode,\n    getPopperOffsets,\n    getPosition,\n    getReferenceOffsets,\n    getScroll,\n    getScrollParent,\n    getStyleComputedProperty,\n    getSupportedPropertyName,\n    getTotalScroll,\n    getWindowSizes,\n    includeScroll,\n    isFixed,\n    isFunction,\n    isModifierEnabled,\n    isModifierRequired,\n    isNumeric,\n    isTransformed,\n    removeEventListeners,\n    runModifiers,\n    setAttributes,\n    setStyles,\n    setupEventListeners,\n};\n","import getSupportedPropertyName from '../utils/getSupportedPropertyName';\nimport setStyles from '../utils/setStyles';\nimport setAttributes from '../utils/setAttributes';\nimport getReferenceOffsets from '../utils/getReferenceOffsets';\nimport computeAutoPlacement from '../utils/computeAutoPlacement';\n\n/**\n * Apply the computed styles to the popper element\n * @method\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} data.styles - List of style properties - values to apply to popper element\n * @argument {Object} data.attributes - List of attribute properties - values to apply to popper element\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The same data object\n */\nexport default function applyStyle(data, options) {\n    // apply the final offsets to the popper\n    // NOTE: 1 DOM access here\n    const styles = {\n        position: data.offsets.popper.position\n    };\n\n    const attributes = {\n        'x-placement': data.placement,\n    };\n\n    // round top and left to avoid blurry text\n    const left = Math.round(data.offsets.popper.left);\n    const top = Math.round(data.offsets.popper.top);\n\n    // if gpuAcceleration is set to true and transform is supported,\n    //  we use `translate3d` to apply the position to the popper we\n    // automatically use the supported prefixed version if needed\n    const prefixedProperty = getSupportedPropertyName('transform');\n    if (options.gpuAcceleration && prefixedProperty) {\n        styles[prefixedProperty] = 'translate3d(' + left + 'px, ' + top + 'px, 0)';\n        styles.top = 0;\n        styles.left = 0;\n        styles.willChange = 'transform';\n    }\n    // othwerise, we use the standard `left` and `top` properties\n    else {\n        styles.left =left;\n        styles.top = top;\n        styles.willChange = 'top, left';\n    }\n\n    // any property present in `data.styles` will be applied to the popper,\n    // in this way we can make the 3rd party modifiers add custom styles to it\n    // Be aware, modifiers could override the properties defined in the previous\n    // lines of this modifier!\n    setStyles(data.instance.popper, {...styles, ...data.styles});\n\n    // any property present in `data.attributes` will be applied to the popper,\n    // they will be set as HTML attributes of the element\n    setAttributes(data.instance.popper, {...attributes, ...data.attributes});\n\n    // if the arrow style has been computed, apply the arrow style\n    if (data.offsets.arrow) {\n        setStyles(data.arrowElement, data.offsets.arrow);\n    }\n\n    return data;\n}\n\n/**\n * Set the x-placement attribute before everything else because it could be used to add margins to the popper\n * margins needs to be calculated to get the correct popper offsets\n * @method\n * @memberof Popper.modifiers\n * @param {HTMLElement} reference - The reference element used to position the popper\n * @param {HTMLElement} popper - The HTML element used as popper.\n * @param {Object} options - Popper.js options\n */\nexport function applyStyleOnLoad(reference, popper, options, modifierOptions, state) {\n    // compute reference element offsets\n    const referenceOffsets = getReferenceOffsets(state, popper, reference);\n\n    // compute auto placement, store placement inside the data object,\n    // modifiers will be able to edit `placement` if needed\n    // and refer to originalPlacement to know the original value\n    options.placement = computeAutoPlacement(options.placement, referenceOffsets, popper);\n\n    popper.setAttribute('x-placement', options.placement);\n    return options;\n}\n","import getClientRect from '../utils/getClientRect';\nimport getOuterSizes from '../utils/getOuterSizes';\nimport isModifierRequired from '../utils/isModifierRequired';\n\n/**\n * Modifier used to move the arrowElements on the edge of the popper to make sure them are always between the popper and the reference element\n * It will use the CSS outer size of the arrowElement element to know how many pixels of conjuction are needed\n * @method\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function arrow(data, options) {\n    // arrow depends on keepTogether in order to work\n    if (!isModifierRequired(data.instance.modifiers, 'arrow', 'keepTogether')) {\n        console.warn('WARNING: `keepTogether` modifier is required by arrow modifier in order to work, be sure to include it before `arrow`!');\n        return data;\n    }\n\n    let arrowElement  = options.element;\n\n    // if arrowElement is a string, suppose it's a CSS selector\n    if (typeof arrowElement === 'string') {\n        arrowElement = data.instance.popper.querySelector(arrowElement);\n\n        // if arrowElement is not found, don't run the modifier\n        if (!arrowElement) {\n            return data;\n        }\n    } else {\n        // if the arrowElement isn't a query selector we must check that the\n        // provided DOM node is child of its popper node\n        if (!data.instance.popper.contains(arrowElement)) {\n            console.warn('WARNING: `arrow.element` must be child of its popper element!');\n            return data;\n        }\n    }\n\n    const placement         = data.placement.split('-')[0];\n    const popper            = getClientRect(data.offsets.popper);\n    const reference         = data.offsets.reference;\n    const isVertical        = ['left', 'right'].indexOf(placement) !== -1;\n\n    const len               = isVertical ? 'height' : 'width';\n    const side              = isVertical ? 'top' : 'left';\n    const altSide           = isVertical ? 'left' : 'top';\n    const opSide            = isVertical ? 'bottom' : 'right';\n    const arrowElementSize  = getOuterSizes(arrowElement)[len];\n\n    //\n    // extends keepTogether behavior making sure the popper and its reference have enough pixels in conjuction\n    //\n\n    // top/left side\n    if (reference[opSide] - arrowElementSize < popper[side]) {\n        data.offsets.popper[side] -= popper[side] - (reference[opSide] - arrowElementSize);\n    }\n    // bottom/right side\n    if (reference[side] + arrowElementSize > popper[opSide]) {\n        data.offsets.popper[side] += (reference[side] + arrowElementSize) - popper[opSide];\n    }\n\n    // compute center of the popper\n    const center = reference[side] + (reference[len] / 2) - (arrowElementSize / 2);\n\n    // Compute the sideValue using the updated popper offsets\n    let sideValue = center - getClientRect(data.offsets.popper)[side];\n\n    // prevent arrowElement from being placed not contiguously to its popper\n    sideValue = Math.max(Math.min(popper[len] - arrowElementSize, sideValue), 0);\n\n    data.arrowElement = arrowElement;\n    data.offsets.arrow = {};\n    data.offsets.arrow[side] = sideValue;\n    data.offsets.arrow[altSide] = ''; // make sure to unset any eventual altSide value from the DOM node\n\n    return data;\n}\n","/**\n * Get the opposite placement variation of the given one/\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement variation\n * @returns {String} flipped placement variation\n */\nexport default function getOppositeVariation(variation) {\n    if (variation === 'end') {\n        return 'start';\n    } else if (variation === 'start') {\n        return 'end';\n    }\n    return variation;\n}\n","import getOppositePlacement from '../utils/getOppositePlacement';\nimport getOppositeVariation from '../utils/getOppositeVariation';\nimport getClientRect from '../utils/getClientRect';\nimport getPopperOffsets from '../utils/getPopperOffsets';\nimport runModifiers from '../utils/runModifiers';\nimport getBoundaries from '../utils/getBoundaries';\nimport isModifierEnabled from '../utils/isModifierEnabled';\n\n/**\n * Modifier used to flip the placement of the popper when the latter is starting overlapping its reference element.\n * Requires the `preventOverflow` modifier before it in order to work.\n * **NOTE:** data.instance modifier will run all its previous modifiers everytime it tries to flip the popper!\n * @method\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function flip(data, options) {\n    // if `inner` modifier is enabled, we can't use the `flip` modifier\n    if (isModifierEnabled(data.instance.modifiers, 'inner')) {\n        return data;\n    }\n\n    if (data.flipped && data.placement === data.originalPlacement) {\n        // seems like flip is trying to loop, probably there's not enough space on any of the flippable sides\n        return data;\n    }\n\n    const boundaries = getBoundaries(data.instance.popper, options.padding, options.boundariesElement);\n\n    let placement = data.placement.split('-')[0];\n    let placementOpposite = getOppositePlacement(placement);\n    let variation = data.placement.split('-')[1] || '';\n\n    let flipOrder = [];\n\n    if (options.behavior === 'flip') {\n        flipOrder = [\n            placement,\n            placementOpposite\n        ];\n    } else {\n        flipOrder = options.behavior;\n    }\n\n    flipOrder.forEach((step, index) => {\n        if (placement !== step || flipOrder.length === index + 1) {\n            return data;\n        }\n\n        placement = data.placement.split('-')[0];\n        placementOpposite = getOppositePlacement(placement);\n\n        const popperOffsets = getClientRect(data.offsets.popper);\n        const refOffsets = data.offsets.reference;\n\n        // using floor because the reference offsets may contain decimals we are not going to consider here\n        const floor = Math.floor;\n        const overlapsRef = (\n            (placement === 'left'   && floor(popperOffsets.right) > floor(refOffsets.left)) ||\n            (placement === 'right'  && floor(popperOffsets.left) < floor(refOffsets.right)) ||\n            (placement === 'top'    && floor(popperOffsets.bottom) > floor(refOffsets.top)) ||\n            (placement === 'bottom' && floor(popperOffsets.top) < floor(refOffsets.bottom))\n        );\n\n        const overflowsLeft = floor(popperOffsets.left) < floor(boundaries.left);\n        const overflowsRight = floor(popperOffsets.right) > floor(boundaries.right);\n        const overflowsTop = floor(popperOffsets.top) < floor(boundaries.top);\n        const overflowsBottom = floor(popperOffsets.bottom) > floor(boundaries.bottom);\n\n        const overflowsBoundaries = (\n            (placement === 'left'   && overflowsLeft) ||\n            (placement === 'right'  && overflowsRight) ||\n            (placement === 'top'    && overflowsTop) ||\n            (placement === 'bottom' && overflowsBottom)\n        );\n\n        // flip the variation if required\n        const isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n        const flippedVariation = !!options.flipVariations && (\n            (isVertical  && variation === 'start' && overflowsLeft) ||\n            (isVertical  && variation === 'end'   && overflowsRight) ||\n            (!isVertical && variation === 'start' && overflowsTop) ||\n            (!isVertical && variation === 'end'   && overflowsBottom)\n        );\n\n        if (overlapsRef || overflowsBoundaries || flippedVariation) {\n            // this boolean to detect any flip loop\n            data.flipped = true;\n\n            if (overlapsRef || overflowsBoundaries) {\n                placement = flipOrder[index + 1];\n            }\n\n            if (flippedVariation) {\n                variation = getOppositeVariation(variation);\n            }\n\n            data.placement = placement + (variation ? '-' + variation : '');\n            data.offsets.popper = getPopperOffsets(data.instance.state.position, data.instance.popper, data.offsets.reference, data.placement);\n\n            data = runModifiers(data.instance.modifiers, data, 'flip');\n        }\n    });\n    return data;\n}\n","import getClientRect from '../utils/getClientRect';\n\n/**\n * Modifier used to make sure the popper is always near its reference element\n * It cares only about the first axis, you can still have poppers with margin\n * between the popper and its reference element.\n * @method\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function keepTogether(data) {\n    const popper  = getClientRect(data.offsets.popper);\n    const reference = data.offsets.reference;\n    const placement = data.placement.split('-')[0];\n    const floor = Math.floor;\n    const isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n    const side = isVertical ? 'right' : 'bottom';\n    const opSide = isVertical ? 'left' : 'top';\n    const measurement = isVertical ? 'width' : 'height';\n\n    if (popper[side] < floor(reference[opSide])) {\n        data.offsets.popper[opSide] = floor(reference[opSide]) - popper[measurement];\n    }\n    if (popper[opSide] > floor(reference[side])) {\n        data.offsets.popper[opSide] = floor(reference[side]);\n    }\n\n    return data;\n}\n","import isNumeric from '../utils/isNumeric';\nimport getClientRect from '../utils/getClientRect';\n\n/**\n * Modifier used to add an offset to the popper, useful if you more granularity positioning your popper.\n * The offsets will shift the popper on the side of its reference element.\n * @method\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @argument {Number|String} options.offset=0\n *      Basic usage allows a number used to nudge the popper by the given amount of pixels.\n *      You can pass a percentage value as string (eg. `20%`) to nudge by the given percentage (relative to reference element size)\n *      Other supported units are `vh` and `vw` (relative to viewport)\n *      Additionally, you can pass a pair of values (eg. `10 20` or `2vh 20%`) to nudge the popper\n *      on both axis.\n *      A note about percentage values, if you want to refer a percentage to the popper size instead of the reference element size,\n *      use `%p` instead of `%` (eg: `20%p`). To make it clearer, you can replace `%` with `%r` and use eg.`10%p 25%r`.\n *      > **Heads up!** The order of the axis is relative to the popper placement: `bottom` or `top` are `X,Y`, the other are `Y,X`\n * @returns {Object} The data object, properly modified\n */\nexport default function offset(data, options) {\n    const placement = data.placement;\n    const popper  = data.offsets.popper;\n\n    let offsets;\n    if (isNumeric(options.offset)) {\n        offsets = [options.offset, 0];\n    } else {\n        // split the offset in case we are providing a pair of offsets separated\n        // by a blank space\n        offsets = options.offset.split(' ');\n\n        // itherate through each offset to compute them in case they are percentages\n        offsets = offsets.map((offset, index) => {\n            // separate value from unit\n            const split = offset.match(/(\\d*\\.?\\d*)(.*)/);\n            const value = +split[1];\n            const unit = split[2];\n\n            // use height if placement is left or right and index is 0 otherwise use width\n            // in this way the first offset will use an axis and the second one\n            // will use the other one\n            let useHeight = placement.indexOf('right') !== -1 || placement.indexOf('left') !== -1;\n\n            if (index === 1) {\n                useHeight = !useHeight;\n            }\n\n            const measurement = useHeight ? 'height' : 'width';\n\n            // if is a percentage relative to the popper (%p), we calculate the value of it using\n            // as base the sizes of the popper\n            // if is a percentage (% or %r), we calculate the value of it using as base the\n            // sizes of the reference element\n            if (unit.indexOf('%') === 0) {\n                let element;\n                switch(unit) {\n                    case '%p':\n                        element = data.offsets.popper;\n                        break;\n                    case '%':\n                    case '$r':\n                    default:\n                        element = data.offsets.reference;\n                }\n\n                const rect = getClientRect(element);\n                const len = rect[measurement];\n                return (len / 100) * value;\n            }\n            // if is a vh or vw, we calculate the size based on the viewport\n            else if (unit === 'vh' || unit === 'vw') {\n                let size;\n                if (unit === 'vh') {\n                    size = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n                } else {\n                    size = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\n                }\n                return (size / 100) * value;\n            }\n            // if is an explicit pixel unit, we get rid of the unit and keep the value\n            else if (unit === 'px') {\n                return +value;\n            }\n            // if is an implicit unit, it's px, and we return just the value\n            else {\n                return +offset;\n            }\n        });\n    }\n\n    if (data.placement.indexOf('left') !== -1) {\n        popper.top += offsets[0];\n        popper.left -= offsets[1] || 0;\n    }\n    else if (data.placement.indexOf('right') !== -1) {\n        popper.top += offsets[0];\n        popper.left += offsets[1] || 0;\n    }\n    else if (data.placement.indexOf('top') !== -1) {\n        popper.left += offsets[0];\n        popper.top -= offsets[1] || 0;\n    }\n    else if (data.placement.indexOf('bottom') !== -1) {\n        popper.left += offsets[0];\n        popper.top += offsets[1] || 0;\n    }\n    return data;\n}\n","import getClientRect from '../utils/getClientRect';\nimport getOffsetParent from '../utils/getOffsetParent';\nimport getBoundaries from '../utils/getBoundaries';\n\n/**\n * Modifier used to prevent the popper from being positioned outside the boundary.\n *\n * An scenario exists where the reference itself is not within the boundaries. We can\n * say it has \"escaped the boundaries\" — or just \"escaped\". In this case we need to\n * decide whether the popper should either:\n *\n * - detach from the reference and remain \"trapped\" in the boundaries, or\n * - if it should be ignore the boundary and \"escape with the reference\"\n *\n * When `escapeWithReference` is `true`, and reference is completely outside the\n * boundaries, the popper will overflow (or completely leave) the boundaries in order\n * to remain attached to the edge of the reference.\n *\n * @method\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function preventOverflow(data, options) {\n    const boundariesElement = options.boundariesElement || getOffsetParent(data.instance.popper);\n    const boundaries = getBoundaries(data.instance.popper, options.padding, boundariesElement);\n    options.boundaries = boundaries;\n\n    const order = options.priority;\n    let popper = getClientRect(data.offsets.popper);\n\n    const check = {\n        primary(placement) {\n            let value = popper[placement];\n            if (popper[placement] < boundaries[placement] && !options.escapeWithReference) {\n                value = Math.max(popper[placement], boundaries[placement]);\n            }\n            return { [placement]: value };\n        },\n        secondary(placement) {\n            const mainSide = placement === 'right' ? 'left' : 'top';\n            let value = popper[mainSide];\n            if (popper[placement] > boundaries[placement] && !options.escapeWithReference) {\n                value = Math.min(popper[mainSide], boundaries[placement] - (placement === 'right' ? popper.width : popper.height));\n            }\n            return { [mainSide]: value };\n        }\n    }\n\n    order.forEach((placement) => {\n        const side = ['left', 'top'].indexOf(placement) !== -1 ? 'primary' : 'secondary';\n        popper = {...popper, ...check[side](placement)};\n    });\n\n    data.offsets.popper = popper;\n\n    return data;\n}\n","import getClientRect from '../utils/getClientRect';\n\n/**\n * Modifier used to shift the popper on the start or end of its reference element side\n * @method\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function shift(data) {\n    const placement = data.placement;\n    const basePlacement = placement.split('-')[0];\n    const shiftvariation = placement.split('-')[1];\n\n    // if shift shiftvariation is specified, run the modifier\n    if (shiftvariation) {\n        const reference = data.offsets.reference;\n        const popper = getClientRect(data.offsets.popper);\n        const isVertical = ['bottom', 'top'].indexOf(basePlacement) !== -1\n        const side = isVertical ? 'left' : 'top';\n        const measurement = isVertical ? 'width' : 'height';\n\n        const shiftOffsets = {\n            start:  { [side]: reference[side] },\n            end:    { [side]: reference[side] + reference[measurement] - popper[measurement] },\n        };\n\n        data.offsets.popper = {...popper, ...shiftOffsets[shiftvariation]};\n    }\n\n    return data;\n}\n","import isModifierRequired from '../utils/isModifierRequired';\nimport find from '../utils/find';\n\n/**\n * Modifier used to hide the popper when its reference element is outside of the\n * popper boundaries. It will set an x-hidden attribute which can be used to hide\n * the popper when its reference is out of boundaries.\n * @method\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function hide(data) {\n    if (!isModifierRequired(data.instance.modifiers, 'hide', 'preventOverflow')) {\n        console.warn('WARNING: preventOverflow modifier is required by hide modifier in order to work, be sure to include it before hide!');\n        return data;\n    }\n\n    const refRect = data.offsets.reference;\n    const bound = find(data.instance.modifiers, (modifier) => modifier.name ==='preventOverflow').boundaries;\n\n    if (\n        refRect.bottom < bound.top ||\n        refRect.left > bound.right ||\n        refRect.top > bound.bottom ||\n        refRect.right < bound.left\n    ) {\n        // Avoid unnecessary DOM access if visibility hasn't changed\n        if (data.hide === true) { return data; }\n\n        data.hide = true;\n        data.attributes['x-out-of-boundaries'] = '';\n    } else {\n        // Avoid unnecessary DOM access if visibility hasn't changed\n        if (data.hide === false) { return data; }\n\n        data.hide = false;\n        data.attributes['x-out-of-boundaries'] = false;\n    }\n\n    return data;\n}\n","import getClientRect from '../utils/getClientRect';\nimport getOppositePlacement from '../utils/getOppositePlacement';\n\n/**\n * Modifier used to make the popper flow toward the inner of the reference element.\n * By default, when this modifier is disabled, the popper will be placed outside\n * the reference element.\n * @method\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function inner(data) {\n    const placement = data.placement;\n    const basePlacement = placement.split('-')[0];\n    const popper = getClientRect(data.offsets.popper);\n    const reference = getClientRect(data.offsets.reference);\n    const isHoriz = ['left', 'right'].indexOf(basePlacement) !== -1;\n\n    const subtractLength = (['top', 'left'].indexOf(basePlacement) === -1);\n\n    popper[isHoriz ? 'left' : 'top'] = reference[placement] - (subtractLength ? popper[isHoriz ? 'width' : 'height'] : 0);\n\n    data.placement = getOppositePlacement(placement);\n    data.offsets.popper = getClientRect(popper);\n\n    return data;\n}\n","import applyStyle, { applyStyleOnLoad } from './applyStyle';\nimport arrow from './arrow';\nimport flip from './flip';\nimport keepTogether from './keepTogether';\nimport offset from './offset';\nimport preventOverflow from './preventOverflow';\nimport shift from './shift';\nimport hide from './hide';\nimport inner from './inner';\n\n/**\n * Modifiers are plugins used to alter the behavior of your poppers.\n * Popper.js uses a set of 7 modifiers to provide all the basic functionalities\n * needed by the library.\n *\n * Each modifier is an object containing several properties listed below.\n * @namespace Modifiers\n * @param {Object} modifier - Modifier descriptor\n * @param {Integer} modifier.order\n *      The `order` property defines the execution order of the modifiers.\n *      The built-in modifiers have orders with a gap of 100 units in between,\n *      this allows you to inject additional modifiers between the existing ones\n *      without having to redefine the order of all of them.\n *      The modifiers are executed starting from the one with the lowest order.\n * @param {Boolean} modifier.enabled - When `true`, the modifier will be used.\n * @param {Modifiers~modifier} modifier.function - Modifier function.\n * @param {Modifiers~onLoad} modifier.onLoad - Function executed on popper initalization\n * @return {Object} data - Each modifier must return the modified `data` object.\n */\nexport default {\n    shift: {\n        order: 100,\n        enabled: true,\n        function: shift,\n    },\n    offset: {\n        order: 200,\n        enabled: true,\n        function: offset,\n         // nudges popper from its origin by the given amount of pixels (can be negative)\n        offset: 0,\n    },\n    preventOverflow: {\n        order: 300,\n        enabled: true,\n        function: preventOverflow,\n         // popper will try to prevent overflow following these priorities\n         //  by default, then, it could overflow on the left and on top of the boundariesElement\n        priority: ['left', 'right', 'top', 'bottom'],\n         // amount of pixel used to define a minimum distance between the boundaries and the popper\n         // this makes sure the popper has always a little padding between the edges of its container\n        padding: 5,\n        boundariesElement: 'scrollParent',\n    },\n    keepTogether: {\n        order: 400,\n        enabled: true,\n        function: keepTogether\n    },\n    arrow: {\n        order: 500,\n        enabled: true,\n        function: arrow,\n         // selector or node used as arrow\n        element: '[x-arrow]'\n    },\n    flip: {\n        order: 600,\n        enabled: true,\n        function: flip,\n         // the behavior used to change the popper's placement\n        behavior: 'flip',\n         // the popper will flip if it hits the edges of the boundariesElement - padding\n        padding: 5,\n        boundariesElement: 'viewport'\n    },\n    inner: {\n        order: 700,\n        enabled: false,\n        function: inner,\n    },\n    hide: {\n        order: 800,\n        enabled: true,\n        function: hide\n    },\n    applyStyle: {\n        order: 900,\n        enabled: true,\n         // if true, it uses the CSS 3d transformation to position the popper\n        gpuAcceleration: true,\n        function: applyStyle,\n        onLoad: applyStyleOnLoad,\n    }\n}\n\n\n /**\n  * Modifiers can edit the `data` object to change the beheavior of the popper.\n  * This object contains all the informations used by Popper.js to compute the\n  * popper position.\n  * The modifier can edit the data as needed, and then `return` it as result.\n  *\n  * @callback Modifiers~modifier\n  * @param {dataObject} data\n  * @return {dataObject} modified data\n  */\n\n /**\n  * The `dataObject` is an object containing all the informations used by Popper.js\n  * this object get passed to modifiers and to the `onCreate` and `onUpdate` callbacks.\n  * @name dataObject\n  * @property {Object} data.instance The Popper.js instance\n  * @property {String} data.placement Placement applied to popper\n  * @property {String} data.originalPlacement Placement originally defined on init\n  * @property {Boolean} data.flipped True if popper has been flipped by flip modifier\n  * @property {Boolean} data.hide True if the reference element is out of boundaries, useful to know when to hide the popper.\n  * @property {HTMLElement} data.arrowElement Node used as arrow by arrow modifier\n  * @property {Object} data.styles Any CSS property defined here will be applied to the popper, it expects the JavaScript nomenclature (eg. `marginBottom`)\n  * @property {Object} data.boundaries Offsets of the popper boundaries\n  * @property {Object} data.offsets The measurements of popper, reference and arrow elements.\n  * @property {Object} data.offsets.popper `top`, `left`, `width`, `height` values\n  * @property {Object} data.offsets.reference `top`, `left`, `width`, `height` values\n  * @property {Object} data.offsets.arro] `top` and `left` offsets, only one of them will be different from 0\n  */\n","// Utils\nimport Utils from './utils/index';\nimport debounce from './utils/debounce';\nimport setStyles from './utils/setStyles';\nimport isTransformed from './utils/isTransformed';\nimport getSupportedPropertyName from './utils/getSupportedPropertyName';\nimport getPosition from './utils/getPosition';\nimport getReferenceOffsets from './utils/getReferenceOffsets';\nimport getPopperOffsets from './utils/getPopperOffsets';\nimport isFunction from './utils/isFunction';\nimport setupEventListeners from './utils/setupEventListeners';\nimport removeEventListeners from './utils/removeEventListeners';\nimport runModifiers from './utils/runModifiers';\nimport isModifierEnabled from './utils/isModifierEnabled';\nimport computeAutoPlacement from './utils/computeAutoPlacement';\n\n// Modifiers\nimport modifiers from './modifiers/index';\n\n// default options\nconst DEFAULTS = {\n    // placement of the popper\n    placement: 'bottom',\n\n    // whether events (resize, scroll) are initially enabled\n    eventsEnabled: true,\n\n    /**\n     * Callback called when the popper is created.\n     * By default, is set to no-op.\n     * Access Popper.js instance with `data.instance`.\n     * @callback createCallback\n     * @static\n     * @param {dataObject} data\n     */\n    onCreate: () => {},\n\n    /**\n     * Callback called when the popper is updated, this callback is not called\n     * on the initialization/creation of the popper, but only on subsequent\n     * updates.\n     * By default, is set to no-op.\n     * Access Popper.js instance with `data.instance`.\n     * @callback updateCallback\n     * @static\n     * @param {dataObject} data\n     */\n    onUpdate: () => {},\n\n    // list of functions used to modify the offsets before they are applied to the popper\n    modifiers,\n};\n\n/**\n * Create a new Popper.js instance\n * @class Popper\n * @param {HTMLElement} reference - The reference element used to position the popper\n * @param {HTMLElement} popper - The HTML element used as popper.\n * @param {Object} options\n * @param {String} options.placement=bottom\n *      Placement of the popper accepted values: `top(-start, -end), right(-start, -end), bottom(-start, -end),\n *      left(-start, -end)`\n *\n * @param {Boolean} options.eventsEnabled=true\n *      Whether events (resize, scroll) are initially enabled\n * @param {Boolean} options.gpuAcceleration=true\n *      When this property is set to true, the popper position will be applied using CSS3 translate3d, allowing the\n *      browser to use the GPU to accelerate the rendering.\n *      If set to false, the popper will be placed using `top` and `left` properties, not using the GPU.\n *\n * @param {Boolean} options.removeOnDestroy=false\n *      Set to true if you want to automatically remove the popper when you call the `destroy` method.\n *\n * @param {Object} options.modifiers\n *      List of functions used to modify the data before they are applied to the popper (see source code for default values)\n *\n * @param {Object} options.modifiers.arrow - Arrow modifier configuration\n * @param {String|HTMLElement} options.modifiers.arrow.element='[x-arrow]'\n *      The DOM Node used as arrow for the popper, or a CSS selector used to get the DOM node. It must be child of\n *      its parent Popper. Popper.js will apply to the given element the style required to align the arrow with its\n *      reference element.\n *      By default, it will look for a child node of the popper with the `x-arrow` attribute.\n *\n * @param {Object} options.modifiers.offset - Offset modifier configuration\n * @param {Number} options.modifiers.offset.offset=0\n *      Amount of pixels the popper will be shifted (can be negative).\n *\n * @param {Object} options.modifiers.preventOverflow - PreventOverflow modifier configuration\n * @param {Array} [options.modifiers.preventOverflow.priority=['left', 'right', 'top', 'bottom']]\n *      Priority used when Popper.js tries to avoid overflows from the boundaries, they will be checked in order,\n *      this means that the last one will never overflow\n * @param {String|HTMLElement} options.modifiers.preventOverflow.boundariesElement='scrollParent'\n *      Boundaries used by the modifier, can be `scrollParent`, `window`, `viewport` or any DOM element.\n * @param {Number} options.modifiers.preventOverflow.padding=5\n *      Amount of pixel used to define a minimum distance between the boundaries and the popper\n *      this makes sure the popper has always a little padding between the edges of its container.\n *\n * @param {Object} options.modifiers.flip - Flip modifier configuration\n * @param {String|Array} options.modifiers.flip.behavior='flip'\n *      The behavior used by the `flip` modifier to change the placement of the popper when the latter is trying to\n *      overlap its reference element. Defining `flip` as value, the placement will be flipped on\n *      its axis (`right - left`, `top - bottom`).\n *      You can even pass an array of placements (eg: `['right', 'left', 'top']` ) to manually specify\n *      how alter the placement when a flip is needed. (eg. in the above example, it would first flip from right to left,\n *      then, if even in its new placement, the popper is overlapping its reference element, it will be moved to top)\n * @param {String|HTMLElement} options.modifiers.flip.boundariesElement='viewport'\n *      The element which will define the boundaries of the popper position, the popper will never be placed outside\n *      of the defined boundaries (except if `keepTogether` is enabled)\n *\n * @param {Object} options.modifiers.inner - Inner modifier configuration\n * @param {Number} options.modifiers.inner.enabled=false\n *      Set to `true` to make the popper flow toward the inner of the reference element.\n *\n * @param {Number} options.modifiers.flip.padding=5\n *      Amount of pixel used to define a minimum distance between the boundaries and the popper\n *      this makes sure the popper has always a little padding between the edges of its container.\n *\n * @param {createCallback} options.onCreate - onCreate callback\n *      Function called after the Popper has been instantiated.\n *\n * @param {updateCallback} options.onUpdate - onUpdate callback\n *      Function called on subsequent updates of Popper.\n *\n * @return {Object} instance - The generated Popper.js instance\n */\nexport default class Popper {\n    constructor(reference, popper, options = {}) {\n        // make update() debounced, so that it only runs at most once-per-tick\n        this.update = debounce(this.update.bind(this));\n\n        // with {} we create a new object with the options inside it\n        this.options = {...Popper.Defaults, ...options};\n\n        // init state\n        this.state = {\n            isDestroyed: false,\n            isCreated: false,\n            scrollParents: [],\n        };\n\n        // get reference and popper elements (allow jQuery wrappers)\n        this.reference = reference.jquery ? reference[0] : reference;\n        this.popper = popper.jquery ? popper[0] : popper;\n\n        // refactoring modifiers' list (Object => Array)\n        this.modifiers = Object.keys(Popper.Defaults.modifiers)\n                               .map((name) => ({name, ...Popper.Defaults.modifiers[name]}));\n\n        // assign default values to modifiers, making sure to override them with\n        // the ones defined by user\n        this.modifiers = this.modifiers.map((defaultConfig) => {\n            const userConfig = (options.modifiers && options.modifiers[defaultConfig.name]) || {};\n            return {...defaultConfig, ...userConfig};\n        });\n\n        // add custom modifiers to the modifiers list\n        if (options.modifiers) {\n            this.options.modifiers = {...{}, ...Popper.Defaults.modifiers, ...options.modifiers};\n            Object.keys(options.modifiers).forEach((name) => {\n                // take in account only custom modifiers\n                if (Popper.Defaults.modifiers[name] === undefined) {\n                    const modifier = options.modifiers[name];\n                    modifier.name = name;\n                    this.modifiers.push(modifier);\n                }\n            });\n        }\n\n        // get the popper position type\n        this.state.position = getPosition(this.reference);\n\n        // sort the modifiers by order\n        this.modifiers = this.modifiers.sort((a, b) => a.order - b.order);\n\n        // modifiers have the ability to execute arbitrary code when Popper.js get inited\n        // such code is executed in the same order of its modifier\n        // they could add new properties to their options configuration\n        // BE AWARE: don't add options to `options.modifiers.name` but to `modifierOptions`!\n        this.modifiers.forEach((modifierOptions) => {\n            if (modifierOptions.enabled && isFunction(modifierOptions.onLoad)) {\n                modifierOptions.onLoad(\n                    this.reference,\n                    this.popper,\n                    this.options,\n                    modifierOptions,\n                    this.state\n                );\n            }\n        });\n\n        // determine how we should set the origin of offsets\n        this.state.isParentTransformed = isTransformed(this.popper.parentNode);\n\n        // fire the first update to position the popper in the right place\n        this.update();\n\n        const eventsEnabled = this.options.eventsEnabled;\n        if (eventsEnabled) {\n            // setup event listeners, they will take care of update the position in specific situations\n            this.enableEventListeners();\n        }\n\n        this.state.eventsEnabled = eventsEnabled;\n    }\n\n    //\n    // Methods\n    //\n\n    /**\n     * Updates the position of the popper, computing the new offsets and applying the new style\n     * Prefer `scheduleUpdate` over `update` because of performance reasons\n     * @method\n     * @memberof Popper\n     */\n    update() {\n        // if popper is destroyed, don't perform any further update\n        if (this.state.isDestroyed) { return; }\n\n        let data = {\n            instance: this,\n            styles: {},\n            attributes: {},\n            flipped: false,\n            offsets: {},\n        };\n\n        // make sure to apply the popper position before any computation\n        this.state.position = getPosition(this.reference);\n        setStyles(this.popper, { position: this.state.position});\n\n        // compute reference element offsets\n        data.offsets.reference = getReferenceOffsets(this.state, this.popper, this.reference);\n\n        // compute auto placement, store placement inside the data object,\n        // modifiers will be able to edit `placement` if needed\n        // and refer to originalPlacement to know the original value\n        data.placement = computeAutoPlacement(\n            this.options.placement,\n            data.offsets.reference,\n            this.popper\n        );\n\n        // store the computed placement inside `originalPlacement`\n        data.originalPlacement = this.options.placement;\n\n        // compute the popper offsets\n        data.offsets.popper = getPopperOffsets(\n            this.state,\n            this.popper,\n            data.offsets.reference,\n            data.placement\n        );\n\n        // run the modifiers\n        data = runModifiers(this.modifiers, data);\n\n        // the first `update` will call `onCreate` callback\n        // the other ones will call `onUpdate` callback\n        if (!this.state.isCreated) {\n            this.state.isCreated = true;\n            this.options.onCreate(data);\n        } else {\n            this.options.onUpdate(data);\n        }\n    }\n\n    /**\n     * Schedule an update, it will run on the next UI update available\n     * @method scheduleUpdate\n     * @memberof Popper\n     */\n    scheduleUpdate = () => requestAnimationFrame(this.update);\n\n    /**\n     * Destroy the popper\n     * @method\n     * @memberof Popper\n     */\n    destroy() {\n        this.state.isDestroyed = true;\n\n        // touch DOM only if `applyStyle` modifier is enabled\n        if (isModifierEnabled(this.modifiers, 'applyStyle')) {\n            this.popper.removeAttribute('x-placement');\n            this.popper.style.left = '';\n            this.popper.style.position = '';\n            this.popper.style.top = '';\n            this.popper.style[getSupportedPropertyName('transform')] = '';\n        }\n\n        this.disableEventListeners();\n\n        // remove the popper if user explicity asked for the deletion on destroy\n        // do not use `remove` because IE11 doesn't support it\n        if (this.options.removeOnDestroy) {\n            this.popper.parentNode.removeChild(this.popper);\n        }\n        return this;\n    }\n\n    /**\n     * it will add resize/scroll events and start recalculating\n     * position of the popper element when they are triggered\n     * @method\n     * @memberof Popper\n     */\n    enableEventListeners() {\n        if (!this.state.eventsEnabled) {\n            this.state = setupEventListeners(this.reference, this.options, this.state, this.scheduleUpdate);\n        }\n    }\n\n    /**\n     * it will remove resize/scroll events and won't recalculate\n     * popper position when they are triggered. It also won't trigger onUpdate callback anymore,\n     * unless you call 'update' method manually.\n     * @method\n     * @memberof Popper\n     */\n    disableEventListeners() {\n        if (this.state.eventsEnabled) {\n            window.cancelAnimationFrame(this.scheduleUpdate);\n            this.state = removeEventListeners(this.reference, this.state);\n        }\n    }\n\n    /**\n     * Collection of utilities useful when writing custom modifiers\n     * @memberof Popper\n     */\n    static Utils = Utils;\n\n    /**\n     * List of accepted placements to use as values of the `placement` option\n     * @memberof Popper\n     */\n    static placements = [\n        'auto',\n        'auto-start',\n        'auto-end',\n        'top',\n        'top-start',\n        'top-end',\n        'right',\n        'right-start',\n        'right-end',\n        'bottom',\n        'bottom-start',\n        'bottom-end',\n        'left',\n        'left-start',\n        'left-end',\n    ];\n\n    /**\n     * Default Popper.js options\n     * @memberof Popper\n     */\n    static Defaults = DEFAULTS;\n}\n"],"names":["getOffsetParent","element","offsetParent","nodeName","window","document","documentElement","getStyleComputedProperty","property","nodeType","css","getComputedStyle","getParentNode","parentNode","host","getScrollParent","indexOf","body","overflow","overflowX","overflowY","test","isFixed","getPosition","container","isParentFixed","getBordersSize","styles","axis","sideA","sideB","Number","split","getBoundingClientRect","isIE10","navigator","appVersion","rect","err","result","left","top","right","bottom","scrollTop","scrollLeft","horizScrollbar","width","clientWidth","vertScrollbar","height","clientHeight","getScroll","side","upperSide","html","scrollingElement","includeScroll","subtract","modifier","getOffsetRectRelativeToCustomParent","parent","fixed","transformed","scrollParent","elementRect","parentRect","contains","borderTopWidth","borderLeftWidth","getWindowSizes","Math","max","scrollHeight","offsetHeight","scrollWidth","offsetWidth","getOffsetRect","offsetLeft","offsetTop","getOffsetRectRelativeToViewport","relativeOffset","parentOffset","offset","getTotalScroll","scroll","getBoundaries","popper","padding","boundariesElement","boundaries","boundariesNode","computeAutoPlacement","placement","refRect","sides","computedPlacement","Object","keys","sort","a","b","variation","isBrowser","longerTimeoutBrowsers","timeoutDuration","i","length","userAgent","microtaskDebounce","fn","called","resolve","then","taskDebounce","scheduled","supportsMicroTasks","Promise","find","arr","check","Array","prototype","filter","findIndex","prop","value","cur","match","obj","getClientRect","popperOffsets","getOuterSizes","x","parseFloat","marginTop","marginBottom","y","marginLeft","marginRight","getOppositePlacement","hash","replace","matched","getPopperOffsets","position","referenceOffsets","popperRect","isHoriz","mainSide","secondarySide","measurement","secondaryMeasurement","getReferenceOffsets","state","reference","isParentTransformed","getSupportedPropertyName","prefixes","upperProp","charAt","toUpperCase","slice","prefix","toCheck","style","isFunction","functionToCheck","getType","toString","call","isModifierEnabled","modifiers","modifierName","some","name","enabled","isModifierRequired","requestingName","requestedName","requesting","order","isNumeric","n","isNaN","isFinite","isTransformed","removeEventListeners","removeEventListener","updateBound","scrollParents","forEach","scrollElement","eventsEnabled","runModifiers","data","ends","modifiersToRun","undefined","function","setAttributes","attributes","setAttribute","removeAttribute","setStyles","unit","attachToScrollParents","event","callback","isBody","target","addEventListener","passive","push","setupEventListeners","options","applyStyle","offsets","round","prefixedProperty","gpuAcceleration","willChange","instance","arrow","arrowElement","applyStyleOnLoad","modifierOptions","warn","querySelector","isVertical","len","altSide","opSide","arrowElementSize","center","sideValue","min","getOppositeVariation","flip","flipped","originalPlacement","placementOpposite","flipOrder","behavior","step","index","refOffsets","floor","overlapsRef","overflowsLeft","overflowsRight","overflowsTop","overflowsBottom","overflowsBoundaries","flippedVariation","flipVariations","keepTogether","map","useHeight","size","innerHeight","innerWidth","preventOverflow","priority","escapeWithReference","shift","basePlacement","shiftvariation","shiftOffsets","hide","bound","inner","subtractLength","DEFAULTS","Popper","scheduleUpdate","requestAnimationFrame","update","debounce","bind","Defaults","jquery","defaultConfig","userConfig","onLoad","enableEventListeners","isDestroyed","isCreated","onCreate","onUpdate","disableEventListeners","removeOnDestroy","removeChild","cancelAnimationFrame","Utils","placements"],"mappings":"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"}
