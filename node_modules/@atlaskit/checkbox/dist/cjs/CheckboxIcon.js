"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireWildcard(require("react"));

var _checkbox = _interopRequireDefault(require("@atlaskit/icon/glyph/checkbox"));

var _checkboxIndeterminate = _interopRequireDefault(require("@atlaskit/icon/glyph/checkbox-indeterminate"));

var _Checkbox = require("./styled/Checkbox");

var CheckboxIcon =
/*#__PURE__*/
function (_Component) {
  (0, _inherits2.default)(CheckboxIcon, _Component);

  function CheckboxIcon() {
    (0, _classCallCheck2.default)(this, CheckboxIcon);
    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(CheckboxIcon).apply(this, arguments));
  }

  (0, _createClass2.default)(CheckboxIcon, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          isChecked = _this$props.isChecked,
          isDisabled = _this$props.isDisabled,
          isInvalid = _this$props.isInvalid,
          isActive = _this$props.isActive,
          isFocused = _this$props.isFocused,
          isHovered = _this$props.isHovered,
          isIndeterminate = _this$props.isIndeterminate,
          primaryColor = _this$props.primaryColor,
          secondaryColor = _this$props.secondaryColor;
      return _react.default.createElement(_Checkbox.IconWrapper, {
        isChecked: isChecked,
        isDisabled: isDisabled,
        isFocused: isFocused,
        isActive: isActive,
        isHovered: isHovered,
        isInvalid: isInvalid
      }, isIndeterminate ? _react.default.createElement(_checkboxIndeterminate.default, {
        primaryColor: primaryColor,
        secondaryColor: secondaryColor,
        isHovered: isHovered,
        isActive: isActive,
        label: ""
      }) : _react.default.createElement(_checkbox.default, {
        primaryColor: primaryColor,
        secondaryColor: secondaryColor,
        isHovered: isHovered,
        isActive: isActive,
        label: ""
      }));
    }
  }]);
  return CheckboxIcon;
}(_react.Component);

exports.default = CheckboxIcon;
(0, _defineProperty2.default)(CheckboxIcon, "defaultProps", {
  primaryColor: 'inherit',
  secondaryColor: 'inherit',
  isIndeterminate: false
});