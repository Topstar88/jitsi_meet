import React, { ReactNode } from 'react';
import { ThemeProp } from '../utils/createTheme';
export declare type ResetThemeProps = {
    children?: ReactNode;
} | undefined;
export interface ResetThemeTokens {
    backgroundColor: string;
    textColor: string;
    linkColor?: string;
    linkColorHover?: string;
    linkColorActive?: string;
    linkColorOutline?: string;
    headingColor?: string;
    subtleHeadingColor?: string;
    subtleTextColor?: string;
}
export declare const ResetTheme: {
    Consumer: React.ComponentType<{
        children?: ReactNode;
    } & {
        children: (tokens: ResetThemeTokens) => React.ReactNode;
    }>;
    Provider: React.ComponentType<{
        children?: React.ReactNode;
        value?: ThemeProp<ResetThemeTokens, ResetThemeProps> | undefined;
    }>;
};
interface ResetProps extends React.HTMLAttributes<HTMLDivElement> {
    children?: ReactNode;
    theme?: ThemeProp<ResetThemeTokens, ResetThemeProps>;
}
export declare function Reset(props: ResetProps): JSX.Element;
export {};
